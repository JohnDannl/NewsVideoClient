android.support.v4.app.ActivityCompat -> a:
    void finishAffinity(android.app.Activity) -> a
android.support.v4.app.ActivityCompatHoneycomb -> b:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.ActivityCompatJB -> c:
    void finishAffinity(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> d:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> b
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> c
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> a
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitAllowingStateLoss() -> b
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> c
android.support.v4.app.BackStackRecord$Op -> e:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> f:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void setArguments(android.os.Bundle) -> b
    android.os.Bundle getArguments() -> b
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> a
    android.support.v4.app.FragmentActivity getActivity() -> c
    android.content.res.Resources getResources() -> d
    boolean isAdded() -> e
    boolean isDetached() -> f
    boolean isHidden() -> g
    void onHiddenChanged(boolean) -> a
    void setRetainInstance(boolean) -> b
    void setMenuVisibility(boolean) -> c
    void setUserVisibleHint(boolean) -> d
    void startActivity(android.content.Intent) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> c
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> d
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    android.view.View getView() -> h
    void onActivityCreated(android.os.Bundle) -> e
    void onViewStateRestored(android.os.Bundle) -> f
    void onStart() -> i
    void onResume() -> j
    void onSaveInstanceState(android.os.Bundle) -> g
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> k
    void onStop() -> l
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> m
    void onDestroy() -> n
    void initState() -> o
    void onDetach() -> p
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> q
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> r
    void performCreate(android.os.Bundle) -> h
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> i
    void performStart() -> s
    void performResume() -> t
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> u
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> j
    void performPause() -> v
    void performStop() -> w
    void performReallyStop() -> x
    void performDestroyView() -> y
    void performDestroy() -> z
android.support.v4.app.Fragment$1 -> g:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> h:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> i:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a_
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> e
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> a
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> j:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> k:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> l:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> m:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> n:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> o:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> p:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> q:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> b
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> c
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> d
    void makeInactive(android.support.v4.app.Fragment) -> e
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> f
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> g
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> r:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> s:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> t:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> u:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> v:
    android.support.v4.app.FragmentManager mFragmentManager -> a
    android.support.v4.app.FragmentTransaction mCurTransaction -> b
    java.util.ArrayList mSavedState -> c
    java.util.ArrayList mFragments -> d
    android.support.v4.app.Fragment mCurrentPrimaryItem -> e
    android.support.v4.app.Fragment getItem(int) -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.widget.FrameLayout mRealTabContent -> b
    android.content.Context mContext -> c
    android.support.v4.app.FragmentManager mFragmentManager -> d
    int mContainerId -> e
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> f
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> g
    boolean mAttached -> h
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> a
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> a
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> w:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> x:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> y:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> z:
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> c
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> a
    int commit() -> a
    int commitAllowingStateLoss() -> b
android.support.v4.app.LoaderManager -> aa:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> ab:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> ac:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> ad:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NavUtils -> ae:
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> a
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> a
    void navigateUpTo(android.app.Activity,android.content.Intent) -> b
    android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> a
    java.lang.String getParentActivityName(android.app.Activity) -> b
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> b
android.support.v4.app.NavUtils$NavUtilsImpl -> af:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> a
    void navigateUpTo(android.app.Activity,android.content.Intent) -> b
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> a
android.support.v4.app.NavUtils$NavUtilsImplBase -> ag:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> a
    void navigateUpTo(android.app.Activity,android.content.Intent) -> b
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> a
android.support.v4.app.NavUtils$NavUtilsImplJB -> ah:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> b
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> a
    void navigateUpTo(android.app.Activity,android.content.Intent) -> b
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> a
android.support.v4.app.NavUtilsJB -> ai:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> a
    void navigateUpTo(android.app.Activity,android.content.Intent) -> b
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> a
android.support.v4.app.NoSaveStateFrameLayout -> aj:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> ak:
android.support.v4.app.TaskStackBuilder -> al:
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> a
    java.util.ArrayList mIntents -> b
    android.content.Context mSourceContext -> c
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> a
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> a
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> a
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> a
    java.util.Iterator iterator() -> iterator
    void startActivities() -> a
    void startActivities(android.os.Bundle) -> a
android.support.v4.app.TaskStackBuilder$SupportParentable -> am:
    android.content.Intent getSupportParentActivityIntent() -> a
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> an:
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> ao:
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> ap:
android.support.v4.content.ContextCompat -> aq:
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> a
android.support.v4.content.ContextCompatHoneycomb -> ar:
    void startActivities(android.content.Context,android.content.Intent[]) -> a
android.support.v4.content.ContextCompatJellybean -> as:
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> a
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> a
    java.io.File DEVICE_ROOT -> b
    java.util.HashMap sCache -> c
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> d
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> a
    android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> b
    int modeToMode(java.lang.String) -> a
    java.io.File buildPath(java.io.File,java.lang.String[]) -> a
    java.lang.String[] copyOf(java.lang.String[],int) -> a
    java.lang.Object[] copyOf(java.lang.Object[],int) -> a
android.support.v4.content.FileProvider$PathStrategy -> at:
    java.io.File getFileForUri(android.net.Uri) -> a
android.support.v4.content.FileProvider$SimplePathStrategy -> au:
    java.lang.String mAuthority -> a
    java.util.HashMap mRoots -> b
    void addRoot(java.lang.String,java.io.File) -> a
    java.io.File getFileForUri(android.net.Uri) -> a
android.support.v4.content.IntentCompat -> av:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> a
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImpl -> aw:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImplBase -> ax:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImplHC -> ay:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> az:
android.support.v4.content.IntentCompatHoneycomb -> ba:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.Loader -> bb:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    boolean mProcessingChange -> g
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> bc:
android.support.v4.content.WakefulBroadcastReceiver -> android.support.v4.content.WakefulBroadcastReceiver:
    android.util.SparseArray mActiveWakeLocks -> a
    int mNextId -> b
android.support.v4.internal.view.SupportMenu -> bd:
android.support.v4.internal.view.SupportMenuItem -> be:
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> a
    boolean expandActionView() -> expandActionView
android.support.v4.internal.view.SupportSubMenu -> bf:
android.support.v4.os.ParcelableCompat -> bg:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> bh:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> bi:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> bj:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> bk:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> bl:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> bm:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.LruCache -> bn:
    java.util.LinkedHashMap map -> a
    int size -> b
    int maxSize -> c
    int putCount -> d
    int createCount -> e
    int evictionCount -> f
    int hitCount -> g
    int missCount -> h
    java.lang.Object get(java.lang.Object) -> a
    java.lang.Object put(java.lang.Object,java.lang.Object) -> a
    void trimToSize(int) -> a
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    java.lang.Object create(java.lang.Object) -> b
    int safeSizeOf(java.lang.Object,java.lang.Object) -> c
    int sizeOf(java.lang.Object,java.lang.Object) -> b
    void evictAll() -> a
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> bo:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    void gc() -> c
    int size() -> a
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> b
    int idealByteArraySize(int) -> c
    int idealIntArraySize(int) -> d
android.support.v4.view.AccessibilityDelegateCompat -> bp:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> bq:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> br:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> bs:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> bt:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> bu:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> bv:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> bw:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> bx:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> by:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> bz:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> ca:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> cb:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.ActionProvider -> cc:
    android.content.Context mContext -> a
    android.support.v4.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> b
    android.support.v4.view.ActionProvider$VisibilityListener mVisibilityListener -> c
    android.content.Context getContext() -> a
    android.view.View onCreateActionView() -> b
    android.view.View onCreateActionView(android.view.MenuItem) -> a
    boolean overridesItemVisibility() -> c
    boolean isVisible() -> d
    void refreshVisibility() -> e
    boolean onPerformDefaultAction() -> f
    boolean hasSubMenu() -> g
    void onPrepareSubMenu(android.view.SubMenu) -> a
    void subUiVisibilityChanged(boolean) -> a
    void setSubUiVisibilityListener(android.support.v4.view.ActionProvider$SubUiVisibilityListener) -> a
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> a
android.support.v4.view.ActionProvider$SubUiVisibilityListener -> cd:
    void onSubUiVisibilityChanged(boolean) -> a
android.support.v4.view.ActionProvider$VisibilityListener -> ce:
    void onActionProviderVisibilityChanged(boolean) -> a
android.support.v4.view.GravityCompat -> cf:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> cg:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> ch:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> ci:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> cj:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> ck:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> cl:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> cm:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> cn:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> co:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> cp:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> cq:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MenuItemCompat -> cr:
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> a
    void setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> b
    android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider) -> a
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> cs:
    void setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> b
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> ct:
    void setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> b
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl -> cu:
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> cv:
    void setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> b
android.support.v4.view.MenuItemCompat$OnActionExpandListener -> cw:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> a
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> b
android.support.v4.view.MenuItemCompatHoneycomb -> cx:
    void setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> b
android.support.v4.view.MotionEventCompat -> cy:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> cz:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> da:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> db:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> dc:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> dd:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> b
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void notifyDataSetChanged() -> c
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    java.lang.CharSequence getPageTitle(int) -> b
    float getPageWidth(int) -> c
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    int mIndicatorColor -> f
    int mIndicatorHeight -> g
    int mMinPaddingBottom -> h
    int mMinTextSpacing -> i
    int mMinStripHeight -> j
    int mTabPadding -> k
    android.graphics.Paint mTabPaint -> l
    android.graphics.Rect mTempRect -> m
    int mTabAlpha -> n
    boolean mDrawFullUnderline -> o
    boolean mDrawFullUnderlineSet -> p
    int mFullUnderlineHeight -> q
    boolean mIgnoreTap -> r
    float mInitialMotionX -> s
    float mInitialMotionY -> t
    int mTouchSlop -> u
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> a
android.support.v4.view.PagerTabStrip$1 -> de:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> df:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    android.support.v4.view.ViewPager mPager -> a
    android.widget.TextView mPrevText -> b
    android.widget.TextView mCurrText -> c
    android.widget.TextView mNextText -> d
    int mLastKnownCurrentPage -> f
    float mLastKnownPositionOffset -> g
    int mScaledTextSpacing -> h
    int mGravity -> i
    boolean mUpdatingText -> j
    boolean mUpdatingPositions -> k
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> l
    java.lang.ref.WeakReference mWatchingAdapter -> m
    int[] ATTRS -> n
    int[] TEXT_ATTRS -> o
    int mNonPrimaryAlpha -> p
    int mTextColor -> e
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> q
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> a
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void updateTextPositions(int,float,boolean) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    float access$100(android.support.v4.view.PagerTitleStrip) -> a
android.support.v4.view.PagerTitleStrip$1 -> dg:
android.support.v4.view.PagerTitleStrip$PageListener -> dh:
    int mScrollState -> b
    android.support.v4.view.PagerTitleStrip this$0 -> a
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> di:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> dj:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> dk:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs -> dl:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> dm:
    java.util.Locale mLocale -> a
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.VelocityTrackerCompat -> dn:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> do:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> dp:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> dq:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> dr:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> ds:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> dt:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> du:
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompat$GBViewCompatImpl -> dv:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> dw:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> dx:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> dy:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> dz:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
android.support.v4.view.ViewCompat$ViewCompatImpl -> ea:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompatEclairMr1 -> eb:
    boolean isOpaque(android.view.View) -> a
android.support.v4.view.ViewCompatGingerbread -> ec:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> ed:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> ee:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
android.support.v4.view.ViewCompatJB -> ef:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> b
    void setImportantForAccessibility(android.view.View,int) -> a
    android.view.ViewParent getParentForAccessibility(android.view.View) -> c
android.support.v4.view.ViewCompatJellybeanMr1 -> eg:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewConfigurationCompat -> eh:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> ei:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> ej:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> ek:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatFroyo -> el:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewGroupCompat -> em:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> a
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> en:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> eo:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> ep:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> eq:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompatHC -> er:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    void initViewPager() -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> g
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> b
    void populate() -> c
    void populate(int) -> a
    void sortChildDrawingOrder() -> h
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> i
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> j
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> d
    boolean pageRight() -> e
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> a
    int access$300(android.support.v4.view.ViewPager) -> b
    int[] access$400() -> f
android.support.v4.view.ViewPager$1 -> es:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> et:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> eu:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> ev:
android.support.v4.view.ViewPager$ItemInfo -> ew:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> ex:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    boolean canScroll() -> b
android.support.v4.view.ViewPager$OnAdapterChangeListener -> ey:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> ez:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> fa:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> fb:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> fc:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> fd:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$ViewPositionComparator -> fe:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> ff:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> a
    java.lang.Object getInfo() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void setSource(android.view.View) -> a
    void addChild(android.view.View) -> b
    int getActions() -> b
    void addAction(int) -> a
    void setMovementGranularities(int) -> b
    int getMovementGranularities() -> c
    void setParent(android.view.View) -> c
    void getBoundsInParent(android.graphics.Rect) -> a
    void setBoundsInParent(android.graphics.Rect) -> b
    void getBoundsInScreen(android.graphics.Rect) -> c
    void setBoundsInScreen(android.graphics.Rect) -> d
    boolean isCheckable() -> d
    boolean isChecked() -> e
    boolean isFocusable() -> f
    void setFocusable(boolean) -> a
    boolean isFocused() -> g
    void setFocused(boolean) -> b
    boolean isVisibleToUser() -> h
    void setVisibleToUser(boolean) -> c
    boolean isAccessibilityFocused() -> i
    void setAccessibilityFocused(boolean) -> d
    boolean isSelected() -> j
    void setSelected(boolean) -> e
    boolean isClickable() -> k
    void setClickable(boolean) -> f
    boolean isLongClickable() -> l
    void setLongClickable(boolean) -> g
    boolean isEnabled() -> m
    void setEnabled(boolean) -> h
    boolean isPassword() -> n
    boolean isScrollable() -> o
    void setScrollable(boolean) -> i
    java.lang.CharSequence getPackageName() -> p
    void setPackageName(java.lang.CharSequence) -> a
    java.lang.CharSequence getClassName() -> q
    void setClassName(java.lang.CharSequence) -> b
    java.lang.CharSequence getText() -> r
    java.lang.CharSequence getContentDescription() -> s
    void setContentDescription(java.lang.CharSequence) -> c
    void recycle() -> t
    java.lang.String getViewIdResourceName() -> u
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> c
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> fg:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> fh:
    java.lang.Object obtain(java.lang.Object) -> a
    void setSource(java.lang.Object,android.view.View) -> c
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void addAction(java.lang.Object,int) -> a
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
    void setParent(java.lang.Object,android.view.View) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isFocusable(java.lang.Object) -> k
    void setFocusable(java.lang.Object,boolean) -> c
    boolean isFocused(java.lang.Object) -> l
    void setFocused(java.lang.Object,boolean) -> d
    boolean isVisibleToUser(java.lang.Object) -> s
    void setVisibleToUser(java.lang.Object,boolean) -> h
    boolean isAccessibilityFocused(java.lang.Object) -> t
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    boolean isSelected(java.lang.Object) -> p
    void setSelected(java.lang.Object,boolean) -> g
    boolean isClickable(java.lang.Object) -> i
    void setClickable(java.lang.Object,boolean) -> a
    boolean isLongClickable(java.lang.Object) -> m
    void setLongClickable(java.lang.Object,boolean) -> e
    boolean isEnabled(java.lang.Object) -> j
    void setEnabled(java.lang.Object,boolean) -> b
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    void setScrollable(java.lang.Object,boolean) -> f
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getText(java.lang.Object) -> f
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> fi:
    boolean isVisibleToUser(java.lang.Object) -> s
    void setVisibleToUser(java.lang.Object,boolean) -> h
    boolean isAccessibilityFocused(java.lang.Object) -> t
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> fj:
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> fk:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isVisibleToUser(java.lang.Object) -> s
    boolean isAccessibilityFocused(java.lang.Object) -> t
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setVisibleToUser(java.lang.Object,boolean) -> h
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> fl:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> fm:
    boolean isVisibleToUser(java.lang.Object) -> a
    void setVisibleToUser(java.lang.Object,boolean) -> a
    void setMovementGranularities(java.lang.Object,int) -> a
    int getMovementGranularities(java.lang.Object) -> b
    boolean isAccessibilityFocused(java.lang.Object) -> c
    void setAccesibilityFocused(java.lang.Object,boolean) -> b
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> fn:
    java.lang.String getViewIdResourceName(java.lang.Object) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> fo:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> fp:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> fq:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> fr:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> fs:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> ft:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> fu:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> fv:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityRecordCompat -> fw:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> a
    java.lang.Object mRecord -> b
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> a
    void setScrollable(boolean) -> a
    void setItemCount(int) -> a
    void setFromIndex(int) -> b
    void setToIndex(int) -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> fx:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> fy:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> fz:
    java.lang.Object obtain() -> a
    void setScrollable(java.lang.Object,boolean) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setFromIndex(java.lang.Object,int) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> ga:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> gb:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> gc:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.widget.CursorAdapter -> gd:
    boolean mDataValid -> a
    boolean mAutoRequery -> b
    android.database.Cursor mCursor -> c
    android.content.Context mContext -> d
    int mRowIDColumn -> e
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> f
    android.database.DataSetObserver mDataSetObserver -> g
    android.support.v4.widget.CursorFilter mCursorFilter -> h
    android.widget.FilterQueryProvider mFilterQueryProvider -> i
    void init(android.content.Context,android.database.Cursor,int) -> a
    android.database.Cursor getCursor() -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> b
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
    void changeCursor(android.database.Cursor) -> a
    android.database.Cursor swapCursor(android.database.Cursor) -> b
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    android.widget.Filter getFilter() -> getFilter
    void onContentChanged() -> b
android.support.v4.widget.CursorAdapter$1 -> ge:
android.support.v4.widget.CursorAdapter$ChangeObserver -> gf:
    android.support.v4.widget.CursorAdapter this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> gg:
    android.support.v4.widget.CursorAdapter this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> gh:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> a
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> gi:
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    android.database.Cursor getCursor() -> a
    void changeCursor(android.database.Cursor) -> a
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    int mMinDrawerMargin -> b
    int mScrimColor -> c
    float mScrimOpacity -> d
    android.graphics.Paint mScrimPaint -> e
    android.support.v4.widget.ViewDragHelper mLeftDragger -> f
    android.support.v4.widget.ViewDragHelper mRightDragger -> g
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> i
    int mDrawerState -> j
    boolean mInLayout -> k
    boolean mFirstLayout -> l
    int mLockModeLeft -> m
    int mLockModeRight -> n
    boolean mDisallowInterceptRequested -> o
    boolean mChildrenCanceledTouch -> p
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    void setDrawerShadow(int,int) -> setDrawerShadow
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> setDrawerLockMode
    void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    int getDrawerLockMode(android.view.View) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewGravity(android.view.View) -> e
    boolean checkDrawerViewGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> k
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void closeDrawer(android.view.View) -> i
    boolean isDrawerVisible(android.view.View) -> j
    boolean hasPeekingDrawer() -> e
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> f
    android.view.View findVisibleDrawer() -> g
    void cancelChildViewTouch() -> c
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> d
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> gj:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.DrawerLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean filter(android.view.View) -> b
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.DrawerLayout$DrawerListener -> gk:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> gl:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> gm:
    int mGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void setDragger(android.support.v4.widget.ViewDragHelper) -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    void peekDrawer() -> c
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> a
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> gn:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> a
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> go:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> gp:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> gq:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> gr:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> gs:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ResourceCursorAdapter -> gt:
    int mLayout -> j
    int mDropDownLayout -> k
    android.view.LayoutInflater mInflater -> l
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> b
android.support.v4.widget.ScrollerCompat -> gu:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> b
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    boolean computeScrollOffset() -> f
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> gv:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> gw:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> gx:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> gy:
android.support.v4.widget.ScrollerCompatGingerbread -> gz:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.SearchViewCompatIcs -> android.support.v4.widget.SearchViewCompatIcs:
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.SearchViewCompatIcs$MySearchView:
    void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawable -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> o
    android.support.v4.widget.ViewDragHelper mDragHelper -> p
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    android.graphics.Rect mTmpRect -> s
    java.util.ArrayList mPostedRunnables -> t
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void dispatchOnPanelSlide(android.view.View) -> a
    void dispatchOnPanelOpened(android.view.View) -> b
    void dispatchOnPanelClosed(android.view.View) -> c
    void updateObscuredViewsVisibility(android.view.View) -> d
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> f
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void onPanelDragged(int) -> a
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> g
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> e
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> a
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> b
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> c
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> d
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> a
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> a
    int access$700(android.support.v4.widget.SlidingPaneLayout) -> e
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> f
android.support.v4.widget.SlidingPaneLayout$1 -> ha:
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> hb:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean filter(android.view.View) -> b
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> hc:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> hd:
    android.support.v4.widget.SlidingPaneLayout this$0 -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewReleased(android.view.View,float,float) -> a
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    void onEdgeDragStarted(int,int) -> b
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> he:
    void onPanelSlide(android.view.View,float) -> a
    void onPanelOpened(android.view.View) -> a
    void onPanelClosed(android.view.View) -> b
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> hf:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> hg:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> hh:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> hi:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> hj:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> hk:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> a
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> a
    void setMinVelocity(float) -> a
    int getViewDragState() -> a
    void setEdgeTrackingEnabled(int) -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> b
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> e
    void ensureMotionHistorySizeForId(int) -> f
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> b
    void setDragState(int) -> c
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> d
    boolean checkTouchSlop(int,int) -> b
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgesTouched(int,int) -> e
android.support.v4.widget.ViewDragHelper$1 -> hl:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> hm:
    android.support.v4.widget.ViewDragHelper this$0 -> a
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> hn:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
android.support.v7.app.ActionBar -> android.support.v7.app.ActionBar:
    int getDisplayOptions() -> a
    void setHomeButtonEnabled(boolean) -> a
    android.content.Context getThemedContext() -> b
android.support.v7.app.ActionBar$Callback -> ho:
android.support.v7.app.ActionBar$LayoutParams -> android.support.v7.app.ActionBar$LayoutParams:
    int gravity -> a
android.support.v7.app.ActionBar$OnNavigationListener -> hp:
    boolean onNavigationItemSelected(int,long) -> a
android.support.v7.app.ActionBar$Tab -> hq:
    android.graphics.drawable.Drawable getIcon() -> a
    java.lang.CharSequence getText() -> b
    android.view.View getCustomView() -> c
    void select() -> d
    java.lang.CharSequence getContentDescription() -> e
android.support.v7.app.ActionBarActivity -> android.support.v7.app.ActionBarActivity:
    android.support.v7.app.ActionBarActivityDelegate mImpl -> n
    android.support.v7.app.ActionBar getSupportActionBar() -> f
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void onCreate(android.os.Bundle) -> onCreate
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onStop() -> onStop
    void onPostResume() -> onPostResume
    android.view.View onCreatePanelView(int) -> onCreatePanelView
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    void supportInvalidateOptionsMenu() -> c
    void onSupportActionModeStarted(android.support.v7.view.ActionMode) -> a
    void onSupportActionModeFinished(android.support.v7.view.ActionMode) -> b
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    void superSetContentView(int) -> a
    void superSetContentView(android.view.View) -> a
    void superSetContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void superAddContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    boolean superOnCreatePanelMenu(int,android.view.Menu) -> a
    boolean superOnPreparePanel(int,android.view.View,android.view.Menu) -> a
    boolean superOnMenuItemSelected(int,android.view.MenuItem) -> a
    void onBackPressed() -> onBackPressed
    void onCreateSupportNavigateUpTaskStack(android.support.v4.app.TaskStackBuilder) -> a
    void onPrepareSupportNavigateUpTaskStack(android.support.v4.app.TaskStackBuilder) -> b
    boolean onSupportNavigateUp() -> g
    android.content.Intent getSupportParentActivityIntent() -> a
    boolean supportShouldUpRecreateTask(android.content.Intent) -> a
    void supportNavigateUpTo(android.content.Intent) -> b
android.support.v7.app.ActionBarActivityDelegate -> hr:
    android.support.v7.app.ActionBarActivity mActivity -> a
    android.support.v7.app.ActionBar mActionBar -> d
    android.view.MenuInflater mMenuInflater -> e
    boolean mHasActionBar -> b
    boolean mOverlayActionBar -> c
    android.support.v7.app.ActionBarActivityDelegate createDelegate(android.support.v7.app.ActionBarActivity) -> a
    android.support.v7.app.ActionBar createSupportActionBar() -> a
    android.support.v7.app.ActionBar getSupportActionBar() -> b
    android.view.MenuInflater getMenuInflater() -> c
    void onCreate(android.os.Bundle) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void onStop() -> d
    void onPostResume() -> e
    void setContentView(android.view.View) -> a
    void setContentView(int) -> a
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    void onTitleChanged(java.lang.CharSequence) -> a
    void supportInvalidateOptionsMenu() -> f
    android.view.View onCreatePanelView(int) -> b
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> a
    boolean onCreatePanelMenu(int,android.view.Menu) -> a
    boolean onMenuItemSelected(int,android.view.MenuItem) -> a
    boolean onBackPressed() -> g
    java.lang.String getUiOptionsFromMetadata() -> h
    android.content.Context getActionBarThemedContext() -> i
android.support.v7.app.ActionBarActivityDelegateBase -> hs:
    int[] ACTION_BAR_DRAWABLE_TOGGLE_ATTRS -> d
    android.support.v7.internal.widget.ActionBarView mActionBarView -> e
    android.support.v7.internal.view.menu.ListMenuPresenter mListMenuPresenter -> f
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> g
    android.support.v7.view.ActionMode mActionMode -> h
    boolean mSubDecorInstalled -> i
    boolean mFeatureProgress -> j
    boolean mFeatureIndeterminateProgress -> k
    boolean mInvalidateMenuPosted -> l
    java.lang.Runnable mInvalidateMenuRunnable -> m
    android.support.v7.app.ActionBar createSupportActionBar() -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void onStop() -> d
    void onPostResume() -> e
    void setContentView(android.view.View) -> a
    void setContentView(int) -> a
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    void ensureSubDecor() -> j
    void onTitleChanged(java.lang.CharSequence) -> a
    android.view.View onCreatePanelView(int) -> b
    boolean onCreatePanelMenu(int,android.view.Menu) -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> a
    boolean onMenuItemSelected(int,android.view.MenuItem) -> a
    boolean onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> b
    void supportInvalidateOptionsMenu() -> f
    android.support.v7.internal.view.menu.MenuBuilder createMenu() -> k
    void reopenMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> b
    android.support.v7.internal.view.menu.MenuView getListMenuView(android.content.Context,android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
    void setMenu(android.support.v7.internal.view.menu.MenuBuilder) -> c
    boolean onBackPressed() -> g
    android.support.v7.internal.view.menu.MenuBuilder access$000(android.support.v7.app.ActionBarActivityDelegateBase) -> a
    void access$100(android.support.v7.app.ActionBarActivityDelegateBase,android.support.v7.internal.view.menu.MenuBuilder) -> a
    boolean access$202(android.support.v7.app.ActionBarActivityDelegateBase,boolean) -> a
android.support.v7.app.ActionBarActivityDelegateBase$1 -> ht:
    android.support.v7.app.ActionBarActivityDelegateBase this$0 -> a
    void run() -> run
android.support.v7.app.ActionBarActivityDelegateHC -> hu:
    void onCreate(android.os.Bundle) -> a
    android.support.v7.app.ActionBar createSupportActionBar() -> a
android.support.v7.app.ActionBarActivityDelegateICS -> hv:
    android.view.Menu mMenu -> d
    android.support.v7.app.ActionBar createSupportActionBar() -> a
    void onCreate(android.os.Bundle) -> a
    android.view.Window$Callback createWindowCallbackWrapper(android.view.Window$Callback) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void onStop() -> d
    void onPostResume() -> e
    void setContentView(android.view.View) -> a
    void setContentView(int) -> a
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    android.view.View onCreatePanelView(int) -> b
    boolean onCreatePanelMenu(int,android.view.Menu) -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> a
    boolean onMenuItemSelected(int,android.view.MenuItem) -> a
    void onTitleChanged(java.lang.CharSequence) -> a
    void onActionModeStarted(android.view.ActionMode) -> a
    void onActionModeFinished(android.view.ActionMode) -> b
    void supportInvalidateOptionsMenu() -> f
    boolean onBackPressed() -> g
android.support.v7.app.ActionBarActivityDelegateICS$WindowCallbackWrapper -> hw:
    android.view.Window$Callback mWrapped -> a
    android.support.v7.app.ActionBarActivityDelegateICS this$0 -> b
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.View onCreatePanelView(int) -> onCreatePanelView
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onWindowAttributesChanged(android.view.WindowManager$LayoutParams) -> onWindowAttributesChanged
    void onContentChanged() -> onContentChanged
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean onSearchRequested() -> onSearchRequested
    android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    void onActionModeStarted(android.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(android.view.ActionMode) -> onActionModeFinished
android.support.v7.app.ActionBarImplBase -> hx:
    android.content.Context mContext -> b
    android.content.Context mThemedContext -> c
    android.support.v7.app.ActionBarActivity mActivity -> d
    android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout -> e
    android.support.v7.internal.widget.ActionBarContainer mContainerView -> f
    android.view.ViewGroup mTopVisibilityView -> g
    android.support.v7.internal.widget.ActionBarView mActionView -> h
    android.support.v7.internal.widget.ActionBarContextView mContextView -> i
    android.support.v7.internal.widget.ActionBarContainer mSplitView -> j
    android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView -> k
    java.util.ArrayList mTabs -> l
    int mSavedTabPosition -> m
    boolean mDisplayHomeAsUpSet -> n
    java.util.ArrayList mMenuVisibilityListeners -> o
    int mContextDisplayMode -> p
    boolean mHasEmbeddedTabs -> q
    android.os.Handler mHandler -> a
    int mCurWindowVisibility -> r
    boolean mHiddenByApp -> s
    boolean mHiddenBySystem -> t
    boolean mShowingForMode -> u
    boolean mNowShowing -> v
    boolean mShowHideAnimationEnabled -> w
    android.support.v7.app.ActionBar$Callback mCallback -> x
    void init(android.support.v7.app.ActionBarActivity) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void setHasEmbeddedTabs(boolean) -> e
    void setTitle(java.lang.CharSequence) -> a
    void setHomeButtonEnabled(boolean) -> a
    int getNavigationMode() -> c
    int getDisplayOptions() -> a
    android.content.Context getThemedContext() -> b
    void showForActionMode() -> d
    void hideForActionMode() -> e
    boolean checkShowingFlags(boolean,boolean,boolean) -> a
    void updateVisibility(boolean) -> f
    void setShowHideAnimationEnabled(boolean) -> b
    void doShow(boolean) -> c
    void doHide(boolean) -> d
    boolean isShowHideAnimationEnabled() -> f
android.support.v7.app.ActionBarImplHC -> hy:
    android.support.v7.internal.widget.NativeActionModeAwareLayout mNativeActionModeAwareLayout -> b
    android.view.ActionMode mCurActionMode -> c
    android.view.ActionMode$Callback onActionModeForChild(android.view.ActionMode$Callback) -> a
    boolean isShowHideAnimationEnabled() -> f
    android.view.ActionMode access$002(android.support.v7.app.ActionBarImplHC,android.view.ActionMode) -> a
android.support.v7.app.ActionBarImplHC$CallbackWrapper -> hz:
    android.view.ActionMode$Callback mWrappedCallback -> b
    android.support.v7.app.ActionBarImplHC this$0 -> a
    boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
android.support.v7.app.ActionBarImplICS -> ia:
    android.app.Activity mActivity -> a
    android.support.v7.app.ActionBar$Callback mCallback -> b
    android.app.ActionBar mActionBar -> c
    java.util.ArrayList mAddedMenuVisWrappers -> d
    int getDisplayOptions() -> a
    android.content.Context getThemedContext() -> b
android.support.v7.appcompat.R -> ib:
android.support.v7.appcompat.R$anim -> ic:
    int abc_fade_in -> abc_fade_in
    int abc_fade_out -> abc_fade_out
    int abc_slide_in_bottom -> abc_slide_in_bottom
    int abc_slide_in_top -> abc_slide_in_top
    int abc_slide_out_bottom -> abc_slide_out_bottom
    int abc_slide_out_top -> abc_slide_out_top
android.support.v7.appcompat.R$attr -> id:
    int actionBarDivider -> actionBarDivider
    int actionBarItemBackground -> actionBarItemBackground
    int actionBarSize -> actionBarSize
    int actionBarSplitStyle -> actionBarSplitStyle
    int actionBarStyle -> actionBarStyle
    int actionBarTabBarStyle -> actionBarTabBarStyle
    int actionBarTabStyle -> actionBarTabStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int actionButtonStyle -> actionButtonStyle
    int actionDropDownStyle -> actionDropDownStyle
    int actionLayout -> actionLayout
    int actionMenuTextAppearance -> actionMenuTextAppearance
    int actionMenuTextColor -> actionMenuTextColor
    int actionModeBackground -> actionModeBackground
    int actionModeCloseButtonStyle -> actionModeCloseButtonStyle
    int actionModeCloseDrawable -> actionModeCloseDrawable
    int actionModeCopyDrawable -> actionModeCopyDrawable
    int actionModeCutDrawable -> actionModeCutDrawable
    int actionModeFindDrawable -> actionModeFindDrawable
    int actionModePasteDrawable -> actionModePasteDrawable
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int actionModeSelectAllDrawable -> actionModeSelectAllDrawable
    int actionModeShareDrawable -> actionModeShareDrawable
    int actionModeSplitBackground -> actionModeSplitBackground
    int actionModeStyle -> actionModeStyle
    int actionModeWebSearchDrawable -> actionModeWebSearchDrawable
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int actionProviderClass -> actionProviderClass
    int actionViewClass -> actionViewClass
    int activityChooserViewStyle -> activityChooserViewStyle
    int background -> background
    int backgroundSplit -> backgroundSplit
    int backgroundStacked -> backgroundStacked
    int buttonBarButtonStyle -> buttonBarButtonStyle
    int buttonBarStyle -> buttonBarStyle
    int customNavigationLayout -> customNavigationLayout
    int disableChildrenWhenDisabled -> disableChildrenWhenDisabled
    int displayOptions -> displayOptions
    int divider -> divider
    int dividerHorizontal -> dividerHorizontal
    int dividerPadding -> dividerPadding
    int dividerVertical -> dividerVertical
    int dropDownListViewStyle -> dropDownListViewStyle
    int dropdownListPreferredItemHeight -> dropdownListPreferredItemHeight
    int expandActivityOverflowButtonDrawable -> expandActivityOverflowButtonDrawable
    int height -> height
    int homeAsUpIndicator -> homeAsUpIndicator
    int homeLayout -> homeLayout
    int icon -> icon
    int iconifiedByDefault -> iconifiedByDefault
    int indeterminateProgressStyle -> indeterminateProgressStyle
    int initialActivityCount -> initialActivityCount
    int isLightTheme -> isLightTheme
    int itemPadding -> itemPadding
    int listChoiceBackgroundIndicator -> listChoiceBackgroundIndicator
    int listPopupWindowStyle -> listPopupWindowStyle
    int listPreferredItemHeight -> listPreferredItemHeight
    int listPreferredItemHeightLarge -> listPreferredItemHeightLarge
    int listPreferredItemHeightSmall -> listPreferredItemHeightSmall
    int listPreferredItemPaddingLeft -> listPreferredItemPaddingLeft
    int listPreferredItemPaddingRight -> listPreferredItemPaddingRight
    int logo -> logo
    int navigationMode -> navigationMode
    int paddingEnd -> paddingEnd
    int paddingStart -> paddingStart
    int panelMenuListTheme -> panelMenuListTheme
    int panelMenuListWidth -> panelMenuListWidth
    int popupMenuStyle -> popupMenuStyle
    int popupPromptView -> popupPromptView
    int progressBarPadding -> progressBarPadding
    int progressBarStyle -> progressBarStyle
    int prompt -> prompt
    int queryHint -> queryHint
    int searchDropdownBackground -> searchDropdownBackground
    int searchResultListItemHeight -> searchResultListItemHeight
    int searchViewAutoCompleteTextView -> searchViewAutoCompleteTextView
    int searchViewCloseIcon -> searchViewCloseIcon
    int searchViewEditQuery -> searchViewEditQuery
    int searchViewEditQueryBackground -> searchViewEditQueryBackground
    int searchViewGoIcon -> searchViewGoIcon
    int searchViewSearchIcon -> searchViewSearchIcon
    int searchViewTextField -> searchViewTextField
    int searchViewTextFieldRight -> searchViewTextFieldRight
    int searchViewVoiceIcon -> searchViewVoiceIcon
    int selectableItemBackground -> selectableItemBackground
    int showAsAction -> showAsAction
    int showDividers -> showDividers
    int spinnerDropDownItemStyle -> spinnerDropDownItemStyle
    int spinnerMode -> spinnerMode
    int spinnerStyle -> spinnerStyle
    int subtitle -> subtitle
    int subtitleTextStyle -> subtitleTextStyle
    int textAllCaps -> textAllCaps
    int textAppearanceLargePopupMenu -> textAppearanceLargePopupMenu
    int textAppearanceListItem -> textAppearanceListItem
    int textAppearanceListItemSmall -> textAppearanceListItemSmall
    int textAppearanceSearchResultSubtitle -> textAppearanceSearchResultSubtitle
    int textAppearanceSearchResultTitle -> textAppearanceSearchResultTitle
    int textAppearanceSmallPopupMenu -> textAppearanceSmallPopupMenu
    int textColorSearchUrl -> textColorSearchUrl
    int title -> title
    int titleTextStyle -> titleTextStyle
    int windowActionBar -> windowActionBar
    int windowActionBarOverlay -> windowActionBarOverlay
    int windowSplitActionBar -> windowSplitActionBar
android.support.v7.appcompat.R$bool -> ie:
    int abc_action_bar_embed_tabs_pre_jb -> abc_action_bar_embed_tabs_pre_jb
    int abc_action_bar_expanded_action_views_exclusive -> abc_action_bar_expanded_action_views_exclusive
    int abc_config_actionMenuItemAllCaps -> abc_config_actionMenuItemAllCaps
    int abc_config_allowActionMenuItemTextWithIcon -> abc_config_allowActionMenuItemTextWithIcon
    int abc_config_showMenuShortcutsWhenKeyboardPresent -> abc_config_showMenuShortcutsWhenKeyboardPresent
    int abc_split_action_bar_is_narrow -> abc_split_action_bar_is_narrow
android.support.v7.appcompat.R$dimen -> if:
    int abc_action_bar_default_height -> abc_action_bar_default_height
    int abc_action_bar_icon_vertical_padding -> abc_action_bar_icon_vertical_padding
    int abc_action_bar_stacked_max_height -> abc_action_bar_stacked_max_height
    int abc_action_bar_stacked_tab_max_width -> abc_action_bar_stacked_tab_max_width
    int abc_action_bar_subtitle_bottom_margin -> abc_action_bar_subtitle_bottom_margin
    int abc_action_bar_subtitle_text_size -> abc_action_bar_subtitle_text_size
    int abc_action_bar_subtitle_top_margin -> abc_action_bar_subtitle_top_margin
    int abc_action_bar_title_text_size -> abc_action_bar_title_text_size
    int abc_action_button_min_width -> abc_action_button_min_width
    int abc_config_prefDialogWidth -> abc_config_prefDialogWidth
    int abc_dropdownitem_icon_width -> abc_dropdownitem_icon_width
    int abc_dropdownitem_text_padding_left -> abc_dropdownitem_text_padding_left
    int abc_dropdownitem_text_padding_right -> abc_dropdownitem_text_padding_right
    int abc_panel_menu_list_width -> abc_panel_menu_list_width
    int abc_search_view_preferred_width -> abc_search_view_preferred_width
    int abc_search_view_text_min_width -> abc_search_view_text_min_width
android.support.v7.appcompat.R$id -> ig:
    int action_bar -> action_bar
    int action_bar_activity_content -> action_bar_activity_content
    int action_bar_container -> action_bar_container
    int action_bar_overlay_layout -> action_bar_overlay_layout
    int action_bar_root -> action_bar_root
    int action_bar_subtitle -> action_bar_subtitle
    int action_bar_title -> action_bar_title
    int action_context_bar -> action_context_bar
    int action_menu_divider -> action_menu_divider
    int action_menu_presenter -> action_menu_presenter
    int action_mode_bar -> action_mode_bar
    int action_mode_bar_stub -> action_mode_bar_stub
    int action_mode_close_button -> action_mode_close_button
    int activity_chooser_view_content -> activity_chooser_view_content
    int always -> always
    int beginning -> beginning
    int checkbox -> checkbox
    int collapseActionView -> collapseActionView
    int default_activity_button -> default_activity_button
    int dialog -> dialog
    int disableHome -> disableHome
    int dropdown -> dropdown
    int edit_query -> edit_query
    int end -> end
    int expand_activities_button -> expand_activities_button
    int expanded_menu -> expanded_menu
    int home -> home
    int homeAsUp -> homeAsUp
    int icon -> icon
    int ifRoom -> ifRoom
    int image -> image
    int left_icon -> left_icon
    int listMode -> listMode
    int list_item -> list_item
    int middle -> middle
    int never -> never
    int none -> none
    int normal -> normal
    int progress_circular -> progress_circular
    int progress_horizontal -> progress_horizontal
    int radio -> radio
    int right_container -> right_container
    int right_icon -> right_icon
    int search_badge -> search_badge
    int search_bar -> search_bar
    int search_button -> search_button
    int search_close_btn -> search_close_btn
    int search_edit_frame -> search_edit_frame
    int search_go_btn -> search_go_btn
    int search_mag_icon -> search_mag_icon
    int search_plate -> search_plate
    int search_src_text -> search_src_text
    int search_voice_btn -> search_voice_btn
    int shortcut -> shortcut
    int showCustom -> showCustom
    int showHome -> showHome
    int showTitle -> showTitle
    int split_action_bar -> split_action_bar
    int submit_area -> submit_area
    int tabMode -> tabMode
    int title -> title
    int title_container -> title_container
    int top_action_bar -> top_action_bar
    int up -> up
    int useLogo -> useLogo
    int withText -> withText
android.support.v7.appcompat.R$integer -> ih:
    int abc_max_action_buttons -> abc_max_action_buttons
android.support.v7.appcompat.R$layout -> ii:
    int abc_action_bar_decor -> abc_action_bar_decor
    int abc_action_bar_decor_include -> abc_action_bar_decor_include
    int abc_action_bar_decor_overlay -> abc_action_bar_decor_overlay
    int abc_action_bar_home -> abc_action_bar_home
    int abc_action_bar_tab -> abc_action_bar_tab
    int abc_action_bar_tabbar -> abc_action_bar_tabbar
    int abc_action_bar_title_item -> abc_action_bar_title_item
    int abc_action_bar_view_list_nav_layout -> abc_action_bar_view_list_nav_layout
    int abc_action_menu_item_layout -> abc_action_menu_item_layout
    int abc_action_menu_layout -> abc_action_menu_layout
    int abc_action_mode_bar -> abc_action_mode_bar
    int abc_action_mode_close_item -> abc_action_mode_close_item
    int abc_activity_chooser_view -> abc_activity_chooser_view
    int abc_activity_chooser_view_include -> abc_activity_chooser_view_include
    int abc_activity_chooser_view_list_item -> abc_activity_chooser_view_list_item
    int abc_expanded_menu_layout -> abc_expanded_menu_layout
    int abc_list_menu_item_checkbox -> abc_list_menu_item_checkbox
    int abc_list_menu_item_icon -> abc_list_menu_item_icon
    int abc_list_menu_item_layout -> abc_list_menu_item_layout
    int abc_list_menu_item_radio -> abc_list_menu_item_radio
    int abc_popup_menu_item_layout -> abc_popup_menu_item_layout
    int abc_screen -> abc_screen
    int abc_search_dropdown_item_icons_2line -> abc_search_dropdown_item_icons_2line
    int abc_search_view -> abc_search_view
    int support_simple_spinner_dropdown_item -> support_simple_spinner_dropdown_item
android.support.v7.appcompat.R$string -> ij:
    int abc_action_bar_home_description -> abc_action_bar_home_description
    int abc_action_bar_up_description -> abc_action_bar_up_description
    int abc_action_menu_overflow_description -> abc_action_menu_overflow_description
    int abc_action_mode_done -> abc_action_mode_done
    int abc_activity_chooser_view_see_all -> abc_activity_chooser_view_see_all
    int abc_activitychooserview_choose_application -> abc_activitychooserview_choose_application
    int abc_searchview_description_clear -> abc_searchview_description_clear
    int abc_searchview_description_query -> abc_searchview_description_query
    int abc_searchview_description_search -> abc_searchview_description_search
    int abc_searchview_description_submit -> abc_searchview_description_submit
    int abc_searchview_description_voice -> abc_searchview_description_voice
    int abc_shareactionprovider_share_with -> abc_shareactionprovider_share_with
    int abc_shareactionprovider_share_with_application -> abc_shareactionprovider_share_with_application
android.support.v7.appcompat.R$style -> ik:
    int TextAppearance_AppCompat_Base_CompactMenu_Dialog -> TextAppearance_AppCompat_Base_CompactMenu_Dialog
    int TextAppearance_AppCompat_Base_SearchResult -> TextAppearance_AppCompat_Base_SearchResult
    int TextAppearance_AppCompat_Base_SearchResult_Subtitle -> TextAppearance_AppCompat_Base_SearchResult_Subtitle
    int TextAppearance_AppCompat_Base_SearchResult_Title -> TextAppearance_AppCompat_Base_SearchResult_Title
    int TextAppearance_AppCompat_Base_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Base_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Base_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Base_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Light_Base_SearchResult -> TextAppearance_AppCompat_Light_Base_SearchResult
    int TextAppearance_AppCompat_Light_Base_SearchResult_Subtitle -> TextAppearance_AppCompat_Light_Base_SearchResult_Subtitle
    int TextAppearance_AppCompat_Light_Base_SearchResult_Title -> TextAppearance_AppCompat_Light_Base_SearchResult_Title
    int TextAppearance_AppCompat_Light_Base_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Light_Base_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Light_Base_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Light_Base_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Light_SearchResult_Subtitle -> TextAppearance_AppCompat_Light_SearchResult_Subtitle
    int TextAppearance_AppCompat_Light_SearchResult_Title -> TextAppearance_AppCompat_Light_SearchResult_Title
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_SearchResult_Subtitle -> TextAppearance_AppCompat_SearchResult_Subtitle
    int TextAppearance_AppCompat_SearchResult_Title -> TextAppearance_AppCompat_SearchResult_Title
    int TextAppearance_AppCompat_Widget_ActionBar_Menu -> TextAppearance_AppCompat_Widget_ActionBar_Menu
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionBar_Title -> TextAppearance_AppCompat_Widget_ActionBar_Title
    int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Title -> TextAppearance_AppCompat_Widget_ActionMode_Title
    int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Menu -> TextAppearance_AppCompat_Widget_Base_ActionBar_Menu
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Subtitle -> TextAppearance_AppCompat_Widget_Base_ActionBar_Subtitle
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_Base_ActionBar_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Title -> TextAppearance_AppCompat_Widget_Base_ActionBar_Title
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Title_Inverse -> TextAppearance_AppCompat_Widget_Base_ActionBar_Title_Inverse
    int TextAppearance_AppCompat_Widget_Base_ActionMode_Subtitle -> TextAppearance_AppCompat_Widget_Base_ActionMode_Subtitle
    int TextAppearance_AppCompat_Widget_Base_ActionMode_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_Base_ActionMode_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_Base_ActionMode_Title -> TextAppearance_AppCompat_Widget_Base_ActionMode_Title
    int TextAppearance_AppCompat_Widget_Base_ActionMode_Title_Inverse -> TextAppearance_AppCompat_Widget_Base_ActionMode_Title_Inverse
    int TextAppearance_AppCompat_Widget_Base_DropDownItem -> TextAppearance_AppCompat_Widget_Base_DropDownItem
    int TextAppearance_AppCompat_Widget_DropDownItem -> TextAppearance_AppCompat_Widget_DropDownItem
    int TextAppearance_AppCompat_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Widget_PopupMenu_Small
    int TextAppearance_Widget_AppCompat_Base_ExpandedMenu_Item -> TextAppearance_Widget_AppCompat_Base_ExpandedMenu_Item
    int TextAppearance_Widget_AppCompat_ExpandedMenu_Item -> TextAppearance_Widget_AppCompat_ExpandedMenu_Item
    int Theme_AppCompat -> Theme_AppCompat
    int Theme_AppCompat_Base_CompactMenu -> Theme_AppCompat_Base_CompactMenu
    int Theme_AppCompat_Base_CompactMenu_Dialog -> Theme_AppCompat_Base_CompactMenu_Dialog
    int Theme_AppCompat_CompactMenu -> Theme_AppCompat_CompactMenu
    int Theme_AppCompat_CompactMenu_Dialog -> Theme_AppCompat_CompactMenu_Dialog
    int Theme_AppCompat_Light -> Theme_AppCompat_Light
    int Theme_AppCompat_Light_DarkActionBar -> Theme_AppCompat_Light_DarkActionBar
    int Theme_Base -> Theme_Base
    int Theme_Base_AppCompat -> Theme_Base_AppCompat
    int Theme_Base_AppCompat_Light -> Theme_Base_AppCompat_Light
    int Theme_Base_AppCompat_Light_DarkActionBar -> Theme_Base_AppCompat_Light_DarkActionBar
    int Theme_Base_Light -> Theme_Base_Light
    int Widget_AppCompat_ActionBar -> Widget_AppCompat_ActionBar
    int Widget_AppCompat_ActionBar_Solid -> Widget_AppCompat_ActionBar_Solid
    int Widget_AppCompat_ActionBar_TabBar -> Widget_AppCompat_ActionBar_TabBar
    int Widget_AppCompat_ActionBar_TabText -> Widget_AppCompat_ActionBar_TabText
    int Widget_AppCompat_ActionBar_TabView -> Widget_AppCompat_ActionBar_TabView
    int Widget_AppCompat_ActionButton -> Widget_AppCompat_ActionButton
    int Widget_AppCompat_ActionButton_CloseMode -> Widget_AppCompat_ActionButton_CloseMode
    int Widget_AppCompat_ActionButton_Overflow -> Widget_AppCompat_ActionButton_Overflow
    int Widget_AppCompat_ActionMode -> Widget_AppCompat_ActionMode
    int Widget_AppCompat_ActivityChooserView -> Widget_AppCompat_ActivityChooserView
    int Widget_AppCompat_AutoCompleteTextView -> Widget_AppCompat_AutoCompleteTextView
    int Widget_AppCompat_Base_ActionBar -> Widget_AppCompat_Base_ActionBar
    int Widget_AppCompat_Base_ActionBar_Solid -> Widget_AppCompat_Base_ActionBar_Solid
    int Widget_AppCompat_Base_ActionBar_TabBar -> Widget_AppCompat_Base_ActionBar_TabBar
    int Widget_AppCompat_Base_ActionBar_TabText -> Widget_AppCompat_Base_ActionBar_TabText
    int Widget_AppCompat_Base_ActionBar_TabView -> Widget_AppCompat_Base_ActionBar_TabView
    int Widget_AppCompat_Base_ActionButton -> Widget_AppCompat_Base_ActionButton
    int Widget_AppCompat_Base_ActionButton_CloseMode -> Widget_AppCompat_Base_ActionButton_CloseMode
    int Widget_AppCompat_Base_ActionButton_Overflow -> Widget_AppCompat_Base_ActionButton_Overflow
    int Widget_AppCompat_Base_ActionMode -> Widget_AppCompat_Base_ActionMode
    int Widget_AppCompat_Base_ActivityChooserView -> Widget_AppCompat_Base_ActivityChooserView
    int Widget_AppCompat_Base_AutoCompleteTextView -> Widget_AppCompat_Base_AutoCompleteTextView
    int Widget_AppCompat_Base_DropDownItem_Spinner -> Widget_AppCompat_Base_DropDownItem_Spinner
    int Widget_AppCompat_Base_ListView_DropDown -> Widget_AppCompat_Base_ListView_DropDown
    int Widget_AppCompat_Base_ListView_Menu -> Widget_AppCompat_Base_ListView_Menu
    int Widget_AppCompat_Base_PopupMenu -> Widget_AppCompat_Base_PopupMenu
    int Widget_AppCompat_Base_ProgressBar -> Widget_AppCompat_Base_ProgressBar
    int Widget_AppCompat_Base_ProgressBar_Horizontal -> Widget_AppCompat_Base_ProgressBar_Horizontal
    int Widget_AppCompat_Base_Spinner -> Widget_AppCompat_Base_Spinner
    int Widget_AppCompat_DropDownItem_Spinner -> Widget_AppCompat_DropDownItem_Spinner
    int Widget_AppCompat_Light_ActionBar -> Widget_AppCompat_Light_ActionBar
    int Widget_AppCompat_Light_ActionBar_Solid -> Widget_AppCompat_Light_ActionBar_Solid
    int Widget_AppCompat_Light_ActionBar_Solid_Inverse -> Widget_AppCompat_Light_ActionBar_Solid_Inverse
    int Widget_AppCompat_Light_ActionBar_TabBar -> Widget_AppCompat_Light_ActionBar_TabBar
    int Widget_AppCompat_Light_ActionBar_TabBar_Inverse -> Widget_AppCompat_Light_ActionBar_TabBar_Inverse
    int Widget_AppCompat_Light_ActionBar_TabText -> Widget_AppCompat_Light_ActionBar_TabText
    int Widget_AppCompat_Light_ActionBar_TabText_Inverse -> Widget_AppCompat_Light_ActionBar_TabText_Inverse
    int Widget_AppCompat_Light_ActionBar_TabView -> Widget_AppCompat_Light_ActionBar_TabView
    int Widget_AppCompat_Light_ActionBar_TabView_Inverse -> Widget_AppCompat_Light_ActionBar_TabView_Inverse
    int Widget_AppCompat_Light_ActionButton -> Widget_AppCompat_Light_ActionButton
    int Widget_AppCompat_Light_ActionButton_CloseMode -> Widget_AppCompat_Light_ActionButton_CloseMode
    int Widget_AppCompat_Light_ActionButton_Overflow -> Widget_AppCompat_Light_ActionButton_Overflow
    int Widget_AppCompat_Light_ActionMode_Inverse -> Widget_AppCompat_Light_ActionMode_Inverse
    int Widget_AppCompat_Light_ActivityChooserView -> Widget_AppCompat_Light_ActivityChooserView
    int Widget_AppCompat_Light_AutoCompleteTextView -> Widget_AppCompat_Light_AutoCompleteTextView
    int Widget_AppCompat_Light_Base_ActionBar -> Widget_AppCompat_Light_Base_ActionBar
    int Widget_AppCompat_Light_Base_ActionBar_Solid -> Widget_AppCompat_Light_Base_ActionBar_Solid
    int Widget_AppCompat_Light_Base_ActionBar_Solid_Inverse -> Widget_AppCompat_Light_Base_ActionBar_Solid_Inverse
    int Widget_AppCompat_Light_Base_ActionBar_TabBar -> Widget_AppCompat_Light_Base_ActionBar_TabBar
    int Widget_AppCompat_Light_Base_ActionBar_TabBar_Inverse -> Widget_AppCompat_Light_Base_ActionBar_TabBar_Inverse
    int Widget_AppCompat_Light_Base_ActionBar_TabText -> Widget_AppCompat_Light_Base_ActionBar_TabText
    int Widget_AppCompat_Light_Base_ActionBar_TabText_Inverse -> Widget_AppCompat_Light_Base_ActionBar_TabText_Inverse
    int Widget_AppCompat_Light_Base_ActionBar_TabView -> Widget_AppCompat_Light_Base_ActionBar_TabView
    int Widget_AppCompat_Light_Base_ActionBar_TabView_Inverse -> Widget_AppCompat_Light_Base_ActionBar_TabView_Inverse
    int Widget_AppCompat_Light_Base_ActionButton -> Widget_AppCompat_Light_Base_ActionButton
    int Widget_AppCompat_Light_Base_ActionButton_CloseMode -> Widget_AppCompat_Light_Base_ActionButton_CloseMode
    int Widget_AppCompat_Light_Base_ActionButton_Overflow -> Widget_AppCompat_Light_Base_ActionButton_Overflow
    int Widget_AppCompat_Light_Base_ActionMode_Inverse -> Widget_AppCompat_Light_Base_ActionMode_Inverse
    int Widget_AppCompat_Light_Base_ActivityChooserView -> Widget_AppCompat_Light_Base_ActivityChooserView
    int Widget_AppCompat_Light_Base_AutoCompleteTextView -> Widget_AppCompat_Light_Base_AutoCompleteTextView
    int Widget_AppCompat_Light_Base_DropDownItem_Spinner -> Widget_AppCompat_Light_Base_DropDownItem_Spinner
    int Widget_AppCompat_Light_Base_ListView_DropDown -> Widget_AppCompat_Light_Base_ListView_DropDown
    int Widget_AppCompat_Light_Base_PopupMenu -> Widget_AppCompat_Light_Base_PopupMenu
    int Widget_AppCompat_Light_Base_Spinner -> Widget_AppCompat_Light_Base_Spinner
    int Widget_AppCompat_Light_DropDownItem_Spinner -> Widget_AppCompat_Light_DropDownItem_Spinner
    int Widget_AppCompat_Light_ListView_DropDown -> Widget_AppCompat_Light_ListView_DropDown
    int Widget_AppCompat_Light_PopupMenu -> Widget_AppCompat_Light_PopupMenu
    int Widget_AppCompat_Light_Spinner_DropDown_ActionBar -> Widget_AppCompat_Light_Spinner_DropDown_ActionBar
    int Widget_AppCompat_ListView_DropDown -> Widget_AppCompat_ListView_DropDown
    int Widget_AppCompat_ListView_Menu -> Widget_AppCompat_ListView_Menu
    int Widget_AppCompat_PopupMenu -> Widget_AppCompat_PopupMenu
    int Widget_AppCompat_ProgressBar -> Widget_AppCompat_ProgressBar
    int Widget_AppCompat_ProgressBar_Horizontal -> Widget_AppCompat_ProgressBar_Horizontal
    int Widget_AppCompat_Spinner_DropDown_ActionBar -> Widget_AppCompat_Spinner_DropDown_ActionBar
android.support.v7.appcompat.R$styleable -> il:
    int[] ActionBar -> ActionBar
    int[] ActionBarLayout -> ActionBarLayout
    int ActionBarLayout_android_layout_gravity -> ActionBarLayout_android_layout_gravity
    int[] ActionBarWindow -> ActionBarWindow
    int ActionBarWindow_windowActionBar -> ActionBarWindow_windowActionBar
    int ActionBarWindow_windowActionBarOverlay -> ActionBarWindow_windowActionBarOverlay
    int ActionBarWindow_windowSplitActionBar -> ActionBarWindow_windowSplitActionBar
    int ActionBar_background -> ActionBar_background
    int ActionBar_backgroundSplit -> ActionBar_backgroundSplit
    int ActionBar_backgroundStacked -> ActionBar_backgroundStacked
    int ActionBar_customNavigationLayout -> ActionBar_customNavigationLayout
    int ActionBar_displayOptions -> ActionBar_displayOptions
    int ActionBar_divider -> ActionBar_divider
    int ActionBar_height -> ActionBar_height
    int ActionBar_homeLayout -> ActionBar_homeLayout
    int ActionBar_icon -> ActionBar_icon
    int ActionBar_indeterminateProgressStyle -> ActionBar_indeterminateProgressStyle
    int ActionBar_itemPadding -> ActionBar_itemPadding
    int ActionBar_logo -> ActionBar_logo
    int ActionBar_navigationMode -> ActionBar_navigationMode
    int ActionBar_progressBarPadding -> ActionBar_progressBarPadding
    int ActionBar_progressBarStyle -> ActionBar_progressBarStyle
    int ActionBar_subtitle -> ActionBar_subtitle
    int ActionBar_subtitleTextStyle -> ActionBar_subtitleTextStyle
    int ActionBar_title -> ActionBar_title
    int ActionBar_titleTextStyle -> ActionBar_titleTextStyle
    int[] ActionMenuItemView -> ActionMenuItemView
    int ActionMenuItemView_android_minWidth -> ActionMenuItemView_android_minWidth
    int[] ActionMenuView -> ActionMenuView
    int[] ActionMode -> ActionMode
    int ActionMode_background -> ActionMode_background
    int ActionMode_backgroundSplit -> ActionMode_backgroundSplit
    int ActionMode_height -> ActionMode_height
    int ActionMode_subtitleTextStyle -> ActionMode_subtitleTextStyle
    int ActionMode_titleTextStyle -> ActionMode_titleTextStyle
    int[] ActivityChooserView -> ActivityChooserView
    int ActivityChooserView_expandActivityOverflowButtonDrawable -> ActivityChooserView_expandActivityOverflowButtonDrawable
    int ActivityChooserView_initialActivityCount -> ActivityChooserView_initialActivityCount
    int[] CompatTextView -> CompatTextView
    int CompatTextView_textAllCaps -> CompatTextView_textAllCaps
    int[] LinearLayoutICS -> LinearLayoutICS
    int LinearLayoutICS_divider -> LinearLayoutICS_divider
    int LinearLayoutICS_dividerPadding -> LinearLayoutICS_dividerPadding
    int LinearLayoutICS_showDividers -> LinearLayoutICS_showDividers
    int[] MenuGroup -> MenuGroup
    int MenuGroup_android_checkableBehavior -> MenuGroup_android_checkableBehavior
    int MenuGroup_android_enabled -> MenuGroup_android_enabled
    int MenuGroup_android_id -> MenuGroup_android_id
    int MenuGroup_android_menuCategory -> MenuGroup_android_menuCategory
    int MenuGroup_android_orderInCategory -> MenuGroup_android_orderInCategory
    int MenuGroup_android_visible -> MenuGroup_android_visible
    int[] MenuItem -> MenuItem
    int MenuItem_actionLayout -> MenuItem_actionLayout
    int MenuItem_actionProviderClass -> MenuItem_actionProviderClass
    int MenuItem_actionViewClass -> MenuItem_actionViewClass
    int MenuItem_android_alphabeticShortcut -> MenuItem_android_alphabeticShortcut
    int MenuItem_android_checkable -> MenuItem_android_checkable
    int MenuItem_android_checked -> MenuItem_android_checked
    int MenuItem_android_enabled -> MenuItem_android_enabled
    int MenuItem_android_icon -> MenuItem_android_icon
    int MenuItem_android_id -> MenuItem_android_id
    int MenuItem_android_menuCategory -> MenuItem_android_menuCategory
    int MenuItem_android_numericShortcut -> MenuItem_android_numericShortcut
    int MenuItem_android_onClick -> MenuItem_android_onClick
    int MenuItem_android_orderInCategory -> MenuItem_android_orderInCategory
    int MenuItem_android_title -> MenuItem_android_title
    int MenuItem_android_titleCondensed -> MenuItem_android_titleCondensed
    int MenuItem_android_visible -> MenuItem_android_visible
    int MenuItem_showAsAction -> MenuItem_showAsAction
    int[] MenuView -> MenuView
    int MenuView_android_headerBackground -> MenuView_android_headerBackground
    int MenuView_android_horizontalDivider -> MenuView_android_horizontalDivider
    int MenuView_android_itemBackground -> MenuView_android_itemBackground
    int MenuView_android_itemIconDisabledAlpha -> MenuView_android_itemIconDisabledAlpha
    int MenuView_android_itemTextAppearance -> MenuView_android_itemTextAppearance
    int MenuView_android_preserveIconSpacing -> MenuView_android_preserveIconSpacing
    int MenuView_android_verticalDivider -> MenuView_android_verticalDivider
    int MenuView_android_windowAnimationStyle -> MenuView_android_windowAnimationStyle
    int[] SearchView -> SearchView
    int SearchView_android_imeOptions -> SearchView_android_imeOptions
    int SearchView_android_inputType -> SearchView_android_inputType
    int SearchView_android_maxWidth -> SearchView_android_maxWidth
    int SearchView_iconifiedByDefault -> SearchView_iconifiedByDefault
    int SearchView_queryHint -> SearchView_queryHint
    int[] Spinner -> Spinner
    int Spinner_android_dropDownHorizontalOffset -> Spinner_android_dropDownHorizontalOffset
    int Spinner_android_dropDownSelector -> Spinner_android_dropDownSelector
    int Spinner_android_dropDownVerticalOffset -> Spinner_android_dropDownVerticalOffset
    int Spinner_android_dropDownWidth -> Spinner_android_dropDownWidth
    int Spinner_android_gravity -> Spinner_android_gravity
    int Spinner_android_popupBackground -> Spinner_android_popupBackground
    int Spinner_disableChildrenWhenDisabled -> Spinner_disableChildrenWhenDisabled
    int Spinner_popupPromptView -> Spinner_popupPromptView
    int Spinner_prompt -> Spinner_prompt
    int Spinner_spinnerMode -> Spinner_spinnerMode
    int[] Theme -> Theme
    int Theme_actionDropDownStyle -> Theme_actionDropDownStyle
    int Theme_dropdownListPreferredItemHeight -> Theme_dropdownListPreferredItemHeight
    int Theme_listChoiceBackgroundIndicator -> Theme_listChoiceBackgroundIndicator
    int Theme_panelMenuListTheme -> Theme_panelMenuListTheme
    int Theme_panelMenuListWidth -> Theme_panelMenuListWidth
    int Theme_popupMenuStyle -> Theme_popupMenuStyle
    int[] View -> View
    int View_android_focusable -> View_android_focusable
    int View_paddingEnd -> View_paddingEnd
    int View_paddingStart -> View_paddingStart
android.support.v7.internal.view.ActionBarPolicy -> im:
    android.content.Context mContext -> a
    android.support.v7.internal.view.ActionBarPolicy get(android.content.Context) -> a
    int getMaxActionButtons() -> a
    boolean showsOverflowMenuButton() -> b
    int getEmbeddedMenuWidthLimit() -> c
    boolean hasEmbeddedTabs() -> d
    int getTabContainerHeight() -> e
    boolean enableHomeButtonByDefault() -> f
    int getStackedTabMaxWidth() -> g
android.support.v7.internal.view.ActionModeWrapper -> in:
    android.view.MenuInflater mInflater -> a
    android.view.ActionMode mWrappedObject -> b
    void finish() -> a
android.support.v7.internal.view.SupportMenuInflater -> io:
    java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE -> a
    java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE -> b
    java.lang.Object[] mActionViewConstructorArguments -> c
    java.lang.Object[] mActionProviderConstructorArguments -> d
    android.content.Context mContext -> e
    java.lang.Object mRealOwner -> f
    void inflate(int,android.view.Menu) -> inflate
    void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu) -> a
    android.content.Context access$100(android.support.v7.internal.view.SupportMenuInflater) -> a
    java.lang.Class[] access$200() -> a
    java.lang.Object[] access$300(android.support.v7.internal.view.SupportMenuInflater) -> b
    java.lang.Object access$400(android.support.v7.internal.view.SupportMenuInflater) -> c
    java.lang.Class[] access$500() -> b
    java.lang.Object[] access$600(android.support.v7.internal.view.SupportMenuInflater) -> d
android.support.v7.internal.view.SupportMenuInflater$InflatedOnMenuItemClickListener -> ip:
    java.lang.Class[] PARAM_TYPES -> a
    java.lang.Object mRealOwner -> b
    java.lang.reflect.Method mMethod -> c
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.internal.view.SupportMenuInflater$MenuState -> iq:
    android.view.Menu menu -> b
    int groupId -> c
    int groupCategory -> d
    int groupOrder -> e
    int groupCheckable -> f
    boolean groupVisible -> g
    boolean groupEnabled -> h
    boolean itemAdded -> i
    int itemId -> j
    int itemCategoryOrder -> k
    java.lang.CharSequence itemTitle -> l
    java.lang.CharSequence itemTitleCondensed -> m
    int itemIconResId -> n
    char itemAlphabeticShortcut -> o
    char itemNumericShortcut -> p
    int itemCheckable -> q
    boolean itemChecked -> r
    boolean itemVisible -> s
    boolean itemEnabled -> t
    int itemShowAsAction -> u
    int itemActionViewLayout -> v
    java.lang.String itemActionViewClassName -> w
    java.lang.String itemActionProviderClassName -> x
    java.lang.String itemListenerMethodName -> y
    android.support.v4.view.ActionProvider itemActionProvider -> z
    android.support.v7.internal.view.SupportMenuInflater this$0 -> a
    void resetGroup() -> a
    void readGroup(android.util.AttributeSet) -> a
    void readItem(android.util.AttributeSet) -> b
    char getShortcut(java.lang.String) -> a
    void setItem(android.view.MenuItem) -> a
    void addItem() -> b
    android.view.SubMenu addSubMenuItem() -> c
    boolean hasAddedItem() -> d
    java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
    android.support.v4.view.ActionProvider access$000(android.support.v7.internal.view.SupportMenuInflater$MenuState) -> a
android.support.v7.internal.view.menu.ActionMenuItem -> ir:
    int mId -> a
    int mGroup -> b
    int mCategoryOrder -> c
    int mOrdering -> d
    java.lang.CharSequence mTitle -> e
    java.lang.CharSequence mTitleCondensed -> f
    android.content.Intent mIntent -> g
    char mShortcutNumericChar -> h
    char mShortcutAlphabeticChar -> i
    android.graphics.drawable.Drawable mIconDrawable -> j
    int mIconResId -> k
    android.content.Context mContext -> l
    android.view.MenuItem$OnMenuItemClickListener mClickListener -> m
    int mFlags -> n
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    int getGroupId() -> getGroupId
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.content.Intent getIntent() -> getIntent
    int getItemId() -> getItemId
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    char getNumericShortcut() -> getNumericShortcut
    int getOrder() -> getOrder
    android.view.SubMenu getSubMenu() -> getSubMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    boolean hasSubMenu() -> hasSubMenu
    boolean isCheckable() -> isCheckable
    boolean isChecked() -> isChecked
    boolean isEnabled() -> isEnabled
    boolean isVisible() -> isVisible
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    android.view.MenuItem setChecked(boolean) -> setChecked
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem setIcon(int) -> setIcon
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.MenuItem setTitle(int) -> setTitle
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    android.view.MenuItem setVisible(boolean) -> setVisible
    void setShowAsAction(int) -> setShowAsAction
    android.support.v4.internal.view.SupportMenuItem setActionView(android.view.View) -> a
    android.view.View getActionView() -> getActionView
    android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    android.view.ActionProvider getActionProvider() -> getActionProvider
    android.support.v4.internal.view.SupportMenuItem setActionView(int) -> a
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> a
    android.support.v4.internal.view.SupportMenuItem setShowAsActionFlags(int) -> b
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
android.support.v7.internal.view.menu.ActionMenuItemView -> android.support.v7.internal.view.menu.ActionMenuItemView:
    android.support.v7.internal.view.menu.MenuItemImpl mItemData -> a
    java.lang.CharSequence mTitle -> b
    android.graphics.drawable.Drawable mIcon -> c
    android.support.v7.internal.view.menu.MenuBuilder$ItemInvoker mItemInvoker -> d
    boolean mAllowTextWithIcon -> e
    boolean mExpandedFormat -> f
    int mMinWidth -> g
    int mSavedPaddingLeft -> h
    void setPadding(int,int,int,int) -> setPadding
    android.support.v7.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void initialize(android.support.v7.internal.view.menu.MenuItemImpl,int) -> a
    void onClick(android.view.View) -> onClick
    void setItemInvoker(android.support.v7.internal.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    boolean prefersCondensedTitle() -> a
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setExpandedFormat(boolean) -> setExpandedFormat
    void updateTextButtonVisibility() -> e
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean hasText() -> b
    void setShortcut(boolean,char) -> setShortcut
    void setTitle(java.lang.CharSequence) -> setTitle
    boolean needsDividerBefore() -> c
    boolean needsDividerAfter() -> d
    boolean onLongClick(android.view.View) -> onLongClick
    void onMeasure(int,int) -> onMeasure
android.support.v7.internal.view.menu.ActionMenuItemView$AllCapsTransformationMethod -> is:
    java.util.Locale mLocale -> b
    android.support.v7.internal.view.menu.ActionMenuItemView this$0 -> a
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect) -> onFocusChanged
android.support.v7.internal.view.menu.ActionMenuPresenter -> android.support.v7.internal.view.menu.ActionMenuPresenter:
    android.view.View mOverflowButton -> i
    boolean mReserveOverflow -> j
    boolean mReserveOverflowSet -> k
    int mWidthLimit -> l
    int mActionItemWidthLimit -> m
    int mMaxItems -> n
    boolean mMaxItemsSet -> o
    boolean mStrictWidthLimit -> p
    boolean mWidthLimitSet -> q
    boolean mExpandedActionViewsExclusive -> r
    int mMinCellSize -> s
    android.util.SparseBooleanArray mActionButtonGroups -> t
    android.view.View mScrapActionButtonView -> u
    android.support.v7.internal.view.menu.ActionMenuPresenter$OverflowPopup mOverflowPopup -> v
    android.support.v7.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup -> w
    android.support.v7.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable -> x
    android.support.v7.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback -> a
    int mOpenSubMenuId -> b
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void setWidthLimit(int,boolean) -> a
    void setItemLimit(int) -> a
    void setExpandedActionViewsExclusive(boolean) -> b
    android.support.v7.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> a
    android.view.View getItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> a
    void bindItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.support.v7.internal.view.menu.MenuView$ItemView) -> a
    boolean shouldIncludeItem(int,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    void updateMenuView(boolean) -> c
    boolean filterLeftoverView(android.view.ViewGroup,int) -> a
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    android.view.View findViewForItem(android.view.MenuItem) -> a
    boolean showOverflowMenu() -> a
    boolean hideOverflowMenu() -> b
    boolean dismissPopupMenus() -> c
    boolean hideSubMenus() -> d
    boolean isOverflowMenuShowing() -> e
    boolean isOverflowReserved() -> f
    boolean flagActionItems() -> g
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    void onSubUiVisibilityChanged(boolean) -> a
    android.support.v7.internal.view.menu.ActionMenuPresenter$OverflowPopup access$102(android.support.v7.internal.view.menu.ActionMenuPresenter,android.support.v7.internal.view.menu.ActionMenuPresenter$OverflowPopup) -> a
    android.support.v7.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu access$202(android.support.v7.internal.view.menu.ActionMenuPresenter,android.support.v7.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu) -> a
    android.support.v7.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable access$302(android.support.v7.internal.view.menu.ActionMenuPresenter,android.support.v7.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable) -> a
android.support.v7.internal.view.menu.ActionMenuPresenter$1 -> it:
android.support.v7.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu -> iu:
    android.support.v7.internal.view.menu.ActionMenuPresenter this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
android.support.v7.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable -> iv:
    android.support.v7.internal.view.menu.ActionMenuPresenter$OverflowPopup mPopup -> b
    android.support.v7.internal.view.menu.ActionMenuPresenter this$0 -> a
    void run() -> run
android.support.v7.internal.view.menu.ActionMenuPresenter$OverflowMenuButton -> iw:
    android.support.v7.internal.view.menu.ActionMenuPresenter this$0 -> a
    boolean performClick() -> performClick
    boolean needsDividerBefore() -> c
    boolean needsDividerAfter() -> d
android.support.v7.internal.view.menu.ActionMenuPresenter$OverflowPopup -> ix:
    android.support.v7.internal.view.menu.ActionMenuPresenter this$0 -> a
    void onDismiss() -> onDismiss
android.support.v7.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback -> iy:
    android.support.v7.internal.view.menu.ActionMenuPresenter this$0 -> a
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> b
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
android.support.v7.internal.view.menu.ActionMenuPresenter$SavedState -> android.support.v7.internal.view.menu.ActionMenuPresenter$SavedState:
    int openSubMenuId -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v7.internal.view.menu.ActionMenuPresenter$SavedState$1 -> iz:
    android.support.v7.internal.view.menu.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v7.internal.view.menu.ActionMenuPresenter$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.internal.view.menu.ActionMenuView -> android.support.v7.internal.view.menu.ActionMenuView:
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> a
    boolean mReserveOverflow -> b
    android.support.v7.internal.view.menu.ActionMenuPresenter mPresenter -> c
    boolean mFormatItems -> d
    int mFormatItemsWidth -> e
    int mMinCellSize -> f
    int mGeneratedItemPadding -> g
    int mMeasuredExtraWidth -> h
    int mMaxItemHeight -> i
    void setPresenter(android.support.v7.internal.view.menu.ActionMenuPresenter) -> setPresenter
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onMeasure(int,int) -> onMeasure
    void onMeasureExactFormat(int,int) -> a
    int measureChildForCells(android.view.View,int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setOverflowReserved(boolean) -> setOverflowReserved
    android.support.v7.internal.view.menu.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> a
    android.support.v7.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> a
    android.support.v7.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.support.v7.internal.view.menu.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> b
    boolean invokeItem(android.support.v7.internal.view.menu.MenuItemImpl) -> a
    int getWindowAnimations() -> getWindowAnimations
    void initialize(android.support.v7.internal.view.menu.MenuBuilder) -> a
    boolean hasSupportDividerBeforeChildAt(int) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
android.support.v7.internal.view.menu.ActionMenuView$ActionMenuChildView -> ja:
    boolean needsDividerBefore() -> c
    boolean needsDividerAfter() -> d
android.support.v7.internal.view.menu.ActionMenuView$LayoutParams -> android.support.v7.internal.view.menu.ActionMenuView$LayoutParams:
    boolean isOverflowButton -> a
    int cellsUsed -> b
    int extraPixels -> c
    boolean expandable -> d
    boolean preventEdgeOffset -> e
    boolean expanded -> f
android.support.v7.internal.view.menu.BaseMenuPresenter -> jb:
    android.content.Context mSystemContext -> c
    android.content.Context mContext -> d
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> e
    android.view.LayoutInflater mSystemInflater -> f
    android.view.LayoutInflater mInflater -> g
    android.support.v7.internal.view.menu.MenuPresenter$Callback mCallback -> a
    int mMenuLayoutRes -> b
    int mItemLayoutRes -> i
    android.support.v7.internal.view.menu.MenuView mMenuView -> h
    int mId -> j
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    android.support.v7.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> a
    void updateMenuView(boolean) -> c
    void addItemView(android.view.View,int) -> a
    boolean filterLeftoverView(android.view.ViewGroup,int) -> a
    void setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
    android.support.v7.internal.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> b
    android.view.View getItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> a
    void bindItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.support.v7.internal.view.menu.MenuView$ItemView) -> a
    boolean shouldIncludeItem(int,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    boolean flagActionItems() -> g
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> b
    void setId(int) -> b
android.support.v7.internal.view.menu.BaseMenuWrapper -> jc:
    java.util.HashMap mMenuItems -> b
    java.util.HashMap mSubMenus -> c
    android.support.v4.internal.view.SupportMenuItem getMenuItemWrapper(android.view.MenuItem) -> a
    android.view.SubMenu getSubMenuWrapper(android.view.SubMenu) -> a
    void internalClear() -> a
    void internalRemoveGroup(int) -> a
    void internalRemoveItem(int) -> b
android.support.v7.internal.view.menu.BaseWrapper -> jd:
    java.lang.Object mWrappedObject -> a
android.support.v7.internal.view.menu.ExpandedMenuView -> android.support.v7.internal.view.menu.ExpandedMenuView:
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> a
    int mAnimations -> b
    void initialize(android.support.v7.internal.view.menu.MenuBuilder) -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean invokeItem(android.support.v7.internal.view.menu.MenuItemImpl) -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    int getWindowAnimations() -> getWindowAnimations
android.support.v7.internal.view.menu.ListMenuItemView -> android.support.v7.internal.view.menu.ListMenuItemView:
    android.support.v7.internal.view.menu.MenuItemImpl mItemData -> a
    android.widget.ImageView mIconView -> b
    android.widget.RadioButton mRadioButton -> c
    android.widget.TextView mTitleView -> d
    android.widget.CheckBox mCheckBox -> e
    android.widget.TextView mShortcutView -> f
    android.graphics.drawable.Drawable mBackground -> g
    int mTextAppearance -> h
    android.content.Context mTextAppearanceContext -> i
    boolean mPreserveIconSpacing -> j
    int mMenuType -> k
    android.content.Context mContext -> l
    android.view.LayoutInflater mInflater -> m
    boolean mForceShowIcon -> n
    void onFinishInflate() -> onFinishInflate
    void initialize(android.support.v7.internal.view.menu.MenuItemImpl,int) -> a
    void setForceShowIcon(boolean) -> setForceShowIcon
    void setTitle(java.lang.CharSequence) -> setTitle
    android.support.v7.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setShortcut(boolean,char) -> setShortcut
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void onMeasure(int,int) -> onMeasure
    void insertIconView() -> b
    void insertRadioButton() -> c
    void insertCheckBox() -> d
    boolean prefersCondensedTitle() -> a
    android.view.LayoutInflater getInflater() -> getInflater
android.support.v7.internal.view.menu.ListMenuPresenter -> je:
    android.content.Context mContext -> a
    android.view.LayoutInflater mInflater -> b
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> c
    android.support.v7.internal.view.menu.ExpandedMenuView mMenuView -> d
    int mItemIndexOffset -> h
    int mThemeRes -> e
    int mItemLayoutRes -> f
    android.support.v7.internal.view.menu.MenuPresenter$Callback mCallback -> i
    android.support.v7.internal.view.menu.ListMenuPresenter$MenuAdapter mAdapter -> g
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    android.support.v7.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> a
    android.widget.ListAdapter getAdapter() -> a
    void updateMenuView(boolean) -> c
    void setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean flagActionItems() -> g
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> b
    int access$000(android.support.v7.internal.view.menu.ListMenuPresenter) -> a
android.support.v7.internal.view.menu.ListMenuPresenter$MenuAdapter -> jf:
    int mExpandedIndex -> b
    android.support.v7.internal.view.menu.ListMenuPresenter this$0 -> a
    int getCount() -> getCount
    android.support.v7.internal.view.menu.MenuItemImpl getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void findExpandedIndex() -> a
    void notifyDataSetChanged() -> notifyDataSetChanged
    java.lang.Object getItem(int) -> getItem
android.support.v7.internal.view.menu.MenuBuilder -> jg:
    int[] sCategoryToOrder -> d
    android.content.Context mContext -> e
    android.content.res.Resources mResources -> f
    boolean mQwertyMode -> g
    boolean mShortcutsVisible -> h
    android.support.v7.internal.view.menu.MenuBuilder$Callback mCallback -> i
    java.util.ArrayList mItems -> j
    java.util.ArrayList mVisibleItems -> k
    boolean mIsVisibleItemsStale -> l
    java.util.ArrayList mActionItems -> m
    java.util.ArrayList mNonActionItems -> n
    boolean mIsActionItemsStale -> o
    int mDefaultShowAsAction -> p
    android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo -> q
    java.lang.CharSequence mHeaderTitle -> a
    android.graphics.drawable.Drawable mHeaderIcon -> b
    android.view.View mHeaderView -> c
    boolean mPreventDispatchingItemsChanged -> r
    boolean mItemsChangedWhileDispatchPrevented -> s
    boolean mOptionalIconsVisible -> t
    boolean mIsClosing -> u
    java.util.ArrayList mTempShortcutItemList -> v
    java.util.concurrent.CopyOnWriteArrayList mPresenters -> w
    android.support.v7.internal.view.menu.MenuItemImpl mExpandedItem -> x
    void addMenuPresenter(android.support.v7.internal.view.menu.MenuPresenter) -> a
    void removeMenuPresenter(android.support.v7.internal.view.menu.MenuPresenter) -> b
    void dispatchPresenterUpdate(boolean) -> c
    boolean dispatchSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    void setCallback(android.support.v7.internal.view.menu.MenuBuilder$Callback) -> a
    android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> a
    android.view.MenuItem add(java.lang.CharSequence) -> add
    android.view.MenuItem add(int) -> add
    android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    android.view.MenuItem add(int,int,int,int) -> add
    android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void removeItemAtInt(int,boolean) -> a
    void clear() -> clear
    void setExclusiveItemChecked(android.view.MenuItem) -> a
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    android.view.MenuItem findItem(int) -> findItem
    int findItemIndex(int) -> a
    int findGroupIndex(int) -> b
    int findGroupIndex(int,int) -> a
    int size() -> size
    android.view.MenuItem getItem(int) -> getItem
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    void setQwertyMode(boolean) -> setQwertyMode
    int getOrdering(int) -> c
    boolean isQwertyMode() -> a
    void setShortcutsVisibleInner(boolean) -> d
    boolean isShortcutsVisible() -> b
    android.content.res.Resources getResources() -> c
    android.content.Context getContext() -> d
    boolean dispatchMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void changeMenuMode() -> e
    int findInsertIndex(java.util.ArrayList,int) -> a
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> a
    android.support.v7.internal.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> a
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    boolean performItemAction(android.view.MenuItem,int) -> a
    void close(boolean) -> a
    void close() -> close
    void onItemsChanged(boolean) -> b
    void stopDispatchingItemsChanged() -> f
    void startDispatchingItemsChanged() -> g
    void onItemVisibleChanged(android.support.v7.internal.view.menu.MenuItemImpl) -> a
    void onItemActionRequestChanged(android.support.v7.internal.view.menu.MenuItemImpl) -> b
    java.util.ArrayList getVisibleItems() -> h
    void flagActionItems() -> i
    java.util.ArrayList getActionItems() -> j
    java.util.ArrayList getNonActionItems() -> k
    void clearHeader() -> clearHeader
    void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> a
    android.support.v7.internal.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> a
    android.support.v7.internal.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> a
    android.support.v7.internal.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> a
    java.lang.CharSequence getHeaderTitle() -> l
    android.graphics.drawable.Drawable getHeaderIcon() -> m
    android.view.View getHeaderView() -> n
    android.support.v7.internal.view.menu.MenuBuilder getRootMenu() -> o
    boolean getOptionalIconsVisible() -> p
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuItemImpl) -> c
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuItemImpl) -> d
    android.support.v7.internal.view.menu.MenuItemImpl getExpandedItem() -> q
android.support.v7.internal.view.menu.MenuBuilder$Callback -> jh:
    boolean onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder) -> a
android.support.v7.internal.view.menu.MenuBuilder$ItemInvoker -> ji:
    boolean invokeItem(android.support.v7.internal.view.menu.MenuItemImpl) -> a
android.support.v7.internal.view.menu.MenuDialogHelper -> jj:
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> a
    android.app.AlertDialog mDialog -> c
    android.support.v7.internal.view.menu.ListMenuPresenter mPresenter -> b
    android.support.v7.internal.view.menu.MenuPresenter$Callback mPresenterCallback -> d
    void show(android.os.IBinder) -> a
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
    void dismiss() -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> b
    void onClick(android.content.DialogInterface,int) -> onClick
android.support.v7.internal.view.menu.MenuItemImpl -> jk:
    int mId -> a
    int mGroup -> b
    int mCategoryOrder -> c
    int mOrdering -> d
    java.lang.CharSequence mTitle -> e
    java.lang.CharSequence mTitleCondensed -> f
    android.content.Intent mIntent -> g
    char mShortcutNumericChar -> h
    char mShortcutAlphabeticChar -> i
    android.graphics.drawable.Drawable mIconDrawable -> j
    int mIconResId -> k
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> l
    android.support.v7.internal.view.menu.SubMenuBuilder mSubMenu -> m
    java.lang.Runnable mItemCallback -> n
    android.view.MenuItem$OnMenuItemClickListener mClickListener -> o
    int mFlags -> p
    int mShowAsAction -> q
    android.view.View mActionView -> r
    android.support.v4.view.ActionProvider mActionProvider -> s
    android.support.v4.view.MenuItemCompat$OnActionExpandListener mOnActionExpandListener -> t
    boolean mIsActionViewExpanded -> u
    android.view.ContextMenu$ContextMenuInfo mMenuInfo -> v
    java.lang.String sPrependShortcutLabel -> w
    java.lang.String sEnterShortcutLabel -> x
    java.lang.String sDeleteShortcutLabel -> y
    java.lang.String sSpaceShortcutLabel -> z
    boolean invoke() -> a
    boolean isEnabled() -> isEnabled
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    int getGroupId() -> getGroupId
    int getItemId() -> getItemId
    int getOrder() -> getOrder
    int getOrdering() -> b
    android.content.Intent getIntent() -> getIntent
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getNumericShortcut() -> getNumericShortcut
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    char getShortcut() -> c
    java.lang.String getShortcutLabel() -> d
    boolean shouldShowShortcut() -> e
    android.view.SubMenu getSubMenu() -> getSubMenu
    boolean hasSubMenu() -> hasSubMenu
    void setSubMenu(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleForItemView(android.support.v7.internal.view.menu.MenuView$ItemView) -> a
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem setIcon(int) -> setIcon
    boolean isCheckable() -> isCheckable
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    void setExclusiveCheckable(boolean) -> a
    boolean isExclusiveCheckable() -> f
    boolean isChecked() -> isChecked
    android.view.MenuItem setChecked(boolean) -> setChecked
    void setCheckedInt(boolean) -> b
    boolean isVisible() -> isVisible
    boolean setVisibleInt(boolean) -> c
    android.view.MenuItem setVisible(boolean) -> setVisible
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    java.lang.String toString() -> toString
    void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> a
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void actionFormatChanged() -> g
    boolean shouldShowIcon() -> h
    boolean isActionButton() -> i
    boolean requestsActionButton() -> j
    boolean requiresActionButton() -> k
    void setIsActionButton(boolean) -> d
    boolean showsTextAsAction() -> l
    void setShowAsAction(int) -> setShowAsAction
    android.support.v4.internal.view.SupportMenuItem setActionView(android.view.View) -> a
    android.support.v4.internal.view.SupportMenuItem setActionView(int) -> a
    android.view.View getActionView() -> getActionView
    android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    android.view.ActionProvider getActionProvider() -> getActionProvider
    android.support.v4.view.ActionProvider getSupportActionProvider() -> m
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> a
    android.support.v4.internal.view.SupportMenuItem setShowAsActionFlags(int) -> b
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean hasCollapsibleActionView() -> n
    void setActionViewExpanded(boolean) -> e
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.support.v7.internal.view.menu.MenuBuilder access$000(android.support.v7.internal.view.menu.MenuItemImpl) -> a
android.support.v7.internal.view.menu.MenuItemImpl$1 -> jl:
    android.support.v7.internal.view.menu.MenuItemImpl this$0 -> a
    void onActionProviderVisibilityChanged(boolean) -> a
android.support.v7.internal.view.menu.MenuItemWrapperICS -> jm:
    boolean mEmulateProviderVisibilityOverride -> b
    boolean mLastRequestVisible -> c
    int getItemId() -> getItemId
    int getGroupId() -> getGroupId
    int getOrder() -> getOrder
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitle() -> getTitle
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem setIcon(int) -> setIcon
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.content.Intent getIntent() -> getIntent
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    char getNumericShortcut() -> getNumericShortcut
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    boolean isCheckable() -> isCheckable
    android.view.MenuItem setChecked(boolean) -> setChecked
    boolean isChecked() -> isChecked
    android.view.MenuItem setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    boolean hasSubMenu() -> hasSubMenu
    android.view.SubMenu getSubMenu() -> getSubMenu
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    android.view.ActionProvider getActionProvider() -> getActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> a
    android.support.v4.view.ActionProvider getSupportActionProvider() -> b
    android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper createActionProviderWrapper(android.support.v4.view.ActionProvider) -> b
    boolean checkActionProviderOverrideVisibility() -> c
    android.view.MenuItem wrappedSetVisible(boolean) -> a
    boolean access$000(android.support.v7.internal.view.menu.MenuItemWrapperICS) -> a
    boolean access$100(android.support.v7.internal.view.menu.MenuItemWrapperICS) -> b
android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper -> jn:
    android.support.v4.view.ActionProvider mInner -> a
    android.support.v7.internal.view.menu.MenuItemWrapperICS this$0 -> b
    android.view.View onCreateActionView() -> onCreateActionView
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper$1 -> jo:
    android.support.v7.internal.view.menu.MenuItemWrapperICS val$this$0 -> a
    android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper this$1 -> b
    void onActionProviderVisibilityChanged(boolean) -> a
android.support.v7.internal.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper -> jp:
    android.support.v7.view.CollapsibleActionView mWrappedView -> a
    void onActionViewExpanded() -> onActionViewExpanded
    void onActionViewCollapsed() -> onActionViewCollapsed
    android.view.View getWrappedView() -> a
android.support.v7.internal.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper -> jq:
    android.support.v7.internal.view.menu.MenuItemWrapperICS this$0 -> b
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.internal.view.menu.MenuItemWrapperJB -> jr:
    android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper createActionProviderWrapper(android.support.v4.view.ActionProvider) -> b
android.support.v7.internal.view.menu.MenuItemWrapperJB$ActionProviderWrapperJB -> js:
    android.view.ActionProvider$VisibilityListener mListener -> c
    android.support.v7.internal.view.menu.MenuItemWrapperJB this$0 -> d
    android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    boolean overridesItemVisibility() -> overridesItemVisibility
    boolean isVisible() -> isVisible
    void refreshVisibility() -> refreshVisibility
    void setVisibilityListener(android.view.ActionProvider$VisibilityListener) -> setVisibilityListener
    void onActionProviderVisibilityChanged(boolean) -> a
android.support.v7.internal.view.menu.MenuPopupHelper -> jt:
    int ITEM_LAYOUT -> b
    android.content.Context mContext -> a
    android.view.LayoutInflater mInflater -> d
    android.support.v7.internal.widget.ListPopupWindow mPopup -> e
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> f
    int mPopupMaxWidth -> g
    android.view.View mAnchorView -> h
    boolean mOverflowOnly -> i
    android.view.ViewTreeObserver mTreeObserver -> j
    android.support.v7.internal.view.menu.MenuPopupHelper$MenuAdapter mAdapter -> k
    android.support.v7.internal.view.menu.MenuPresenter$Callback mPresenterCallback -> l
    boolean mForceShowIcon -> c
    android.view.ViewGroup mMeasureParent -> m
    void setForceShowIcon(boolean) -> a
    boolean tryShow() -> a
    void dismiss() -> b
    void onDismiss() -> onDismiss
    boolean isShowing() -> c
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    int measureContentWidth(android.widget.ListAdapter) -> a
    void onGlobalLayout() -> onGlobalLayout
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> c
    void setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> g
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> b
    boolean access$100(android.support.v7.internal.view.menu.MenuPopupHelper) -> a
    android.view.LayoutInflater access$200(android.support.v7.internal.view.menu.MenuPopupHelper) -> b
    android.support.v7.internal.view.menu.MenuBuilder access$300(android.support.v7.internal.view.menu.MenuPopupHelper) -> c
android.support.v7.internal.view.menu.MenuPopupHelper$MenuAdapter -> ju:
    android.support.v7.internal.view.menu.MenuBuilder mAdapterMenu -> b
    int mExpandedIndex -> c
    android.support.v7.internal.view.menu.MenuPopupHelper this$0 -> a
    int getCount() -> getCount
    android.support.v7.internal.view.menu.MenuItemImpl getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void findExpandedIndex() -> a
    void notifyDataSetChanged() -> notifyDataSetChanged
    java.lang.Object getItem(int) -> getItem
    android.support.v7.internal.view.menu.MenuBuilder access$000(android.support.v7.internal.view.menu.MenuPopupHelper$MenuAdapter) -> a
android.support.v7.internal.view.menu.MenuPresenter -> jv:
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> c
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> g
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> b
android.support.v7.internal.view.menu.MenuPresenter$Callback -> jw:
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> b
android.support.v7.internal.view.menu.MenuView -> jx:
    void initialize(android.support.v7.internal.view.menu.MenuBuilder) -> a
android.support.v7.internal.view.menu.MenuView$ItemView -> jy:
    void initialize(android.support.v7.internal.view.menu.MenuItemImpl,int) -> a
    android.support.v7.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    boolean prefersCondensedTitle() -> a
android.support.v7.internal.view.menu.MenuWrapperFactory -> jz:
    android.view.Menu createMenuWrapper(android.view.Menu) -> a
    android.view.MenuItem createMenuItemWrapper(android.view.MenuItem) -> a
    android.support.v4.internal.view.SupportSubMenu createSupportSubMenuWrapper(android.view.SubMenu) -> a
    android.support.v4.internal.view.SupportMenuItem createSupportMenuItemWrapper(android.view.MenuItem) -> b
android.support.v7.internal.view.menu.MenuWrapperICS -> ka:
    android.view.MenuItem add(java.lang.CharSequence) -> add
    android.view.MenuItem add(int) -> add
    android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    android.view.MenuItem add(int,int,int,int) -> add
    android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void clear() -> clear
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    android.view.MenuItem findItem(int) -> findItem
    int size() -> size
    android.view.MenuItem getItem(int) -> getItem
    void close() -> close
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    void setQwertyMode(boolean) -> setQwertyMode
android.support.v7.internal.view.menu.SubMenuBuilder -> kb:
    android.support.v7.internal.view.menu.MenuBuilder mParentMenu -> d
    android.support.v7.internal.view.menu.MenuItemImpl mItem -> e
    void setQwertyMode(boolean) -> setQwertyMode
    boolean isQwertyMode() -> a
    boolean isShortcutsVisible() -> b
    android.view.Menu getParentMenu() -> r
    android.view.MenuItem getItem() -> getItem
    void setCallback(android.support.v7.internal.view.menu.MenuBuilder$Callback) -> a
    android.support.v7.internal.view.menu.MenuBuilder getRootMenu() -> o
    boolean dispatchMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> a
    android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.SubMenu setIcon(int) -> setIcon
    android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    void clearHeader() -> clearHeader
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuItemImpl) -> c
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuItemImpl) -> d
android.support.v7.internal.view.menu.SubMenuWrapperICS -> kc:
    android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    void clearHeader() -> clearHeader
    android.view.SubMenu setIcon(int) -> setIcon
    android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem getItem() -> getItem
android.support.v7.internal.widget.AbsActionBarView -> kd:
    android.support.v7.internal.view.menu.ActionMenuView mMenuView -> a
    android.support.v7.internal.view.menu.ActionMenuPresenter mActionMenuPresenter -> b
    android.support.v7.internal.widget.ActionBarContainer mSplitView -> c
    boolean mSplitActionBar -> d
    boolean mSplitWhenNarrow -> e
    int mContentHeight -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setSplitActionBar(boolean) -> setSplitActionBar
    void setSplitWhenNarrow(boolean) -> setSplitWhenNarrow
    void setContentHeight(int) -> setContentHeight
    int getContentHeight() -> getContentHeight
    void setSplitView(android.support.v7.internal.widget.ActionBarContainer) -> setSplitView
    int getAnimatedVisibility() -> getAnimatedVisibility
    void setVisibility(int) -> setVisibility
    boolean showOverflowMenu() -> a
    void postShowOverflowMenu() -> b
    boolean hideOverflowMenu() -> c
    boolean isOverflowMenuShowing() -> d
    boolean isOverflowReserved() -> e
    int measureChildView(android.view.View,int,int,int) -> a
    int positionChild(android.view.View,int,int,int) -> b
    int positionChildInverse(android.view.View,int,int,int) -> c
android.support.v7.internal.widget.AbsActionBarView$1 -> ke:
    android.support.v7.internal.widget.AbsActionBarView this$0 -> a
    void run() -> run
android.support.v7.internal.widget.AbsSpinnerICS -> android.support.v7.internal.widget.AbsSpinnerICS:
    android.widget.SpinnerAdapter mAdapter -> a
    int mHeightMeasureSpec -> b
    int mWidthMeasureSpec -> c
    boolean mBlockLayoutRequests -> d
    int mSelectionLeftPadding -> e
    int mSelectionTopPadding -> f
    int mSelectionRightPadding -> g
    int mSelectionBottomPadding -> h
    android.graphics.Rect mSpinnerPadding -> i
    android.support.v7.internal.widget.AbsSpinnerICS$RecycleBin mRecycler -> j
    android.database.DataSetObserver mDataSetObserver -> E
    void initAbsSpinner() -> o
    void setAdapter(android.widget.SpinnerAdapter) -> a
    void resetList() -> a
    void onMeasure(int,int) -> onMeasure
    int getChildHeight(android.view.View) -> a
    int getChildWidth(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void recycleAllViews() -> b
    void setSelection(int) -> a
    android.view.View getSelectedView() -> c
    void requestLayout() -> requestLayout
    android.widget.SpinnerAdapter getAdapter() -> d
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.widget.Adapter getAdapter() -> e
    void access$100(android.support.v7.internal.widget.AbsSpinnerICS,android.view.View,boolean) -> a
android.support.v7.internal.widget.AbsSpinnerICS$1 -> kf:
android.support.v7.internal.widget.AbsSpinnerICS$RecycleBin -> kg:
    android.util.SparseArray mScrapHeap -> b
    android.support.v7.internal.widget.AbsSpinnerICS this$0 -> a
    void put(int,android.view.View) -> a
    android.view.View get(int) -> a
    void clear() -> a
android.support.v7.internal.widget.AbsSpinnerICS$SavedState -> android.support.v7.internal.widget.AbsSpinnerICS$SavedState:
    long selectedId -> a
    int position -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v7.internal.widget.AbsSpinnerICS$SavedState$1 -> kh:
    android.support.v7.internal.widget.AbsSpinnerICS$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v7.internal.widget.AbsSpinnerICS$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.internal.widget.ActionBarContainer -> android.support.v7.internal.widget.ActionBarContainer:
    boolean mIsTransitioning -> a
    android.view.View mTabContainer -> b
    android.support.v7.internal.widget.ActionBarView mActionBarView -> c
    android.graphics.drawable.Drawable mBackground -> d
    android.graphics.drawable.Drawable mStackedBackground -> e
    android.graphics.drawable.Drawable mSplitBackground -> f
    boolean mIsSplit -> g
    boolean mIsStacked -> h
    void onFinishInflate() -> onFinishInflate
    void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    void setVisibility(int) -> setVisibility
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    void setTransitioning(boolean) -> setTransitioning
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    void setTabContainer(android.support.v7.internal.widget.ScrollingTabContainerView) -> setTabContainer
    android.view.View getTabContainer() -> getTabContainer
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
android.support.v7.internal.widget.ActionBarContextView -> android.support.v7.internal.widget.ActionBarContextView:
    java.lang.CharSequence mTitle -> g
    java.lang.CharSequence mSubtitle -> h
    android.view.View mClose -> i
    android.view.View mCustomView -> j
    android.widget.LinearLayout mTitleLayout -> k
    android.widget.TextView mTitleView -> l
    android.widget.TextView mSubtitleView -> m
    int mTitleStyleRes -> n
    int mSubtitleStyleRes -> o
    android.graphics.drawable.Drawable mSplitBackground -> p
    boolean mTitleOptional -> q
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setSplitActionBar(boolean) -> setSplitActionBar
    void setContentHeight(int) -> setContentHeight
    void setCustomView(android.view.View) -> setCustomView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void initTitle() -> f
    boolean showOverflowMenu() -> a
    boolean hideOverflowMenu() -> c
    boolean isOverflowMenuShowing() -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setTitleOptional(boolean) -> setTitleOptional
    boolean isOverflowReserved() -> e
    void postShowOverflowMenu() -> b
    void setVisibility(int) -> setVisibility
    int getAnimatedVisibility() -> getAnimatedVisibility
    void setSplitView(android.support.v7.internal.widget.ActionBarContainer) -> setSplitView
    int getContentHeight() -> getContentHeight
    void setSplitWhenNarrow(boolean) -> setSplitWhenNarrow
android.support.v7.internal.widget.ActionBarOverlayLayout -> android.support.v7.internal.widget.ActionBarOverlayLayout:
    int mActionBarHeight -> b
    android.support.v7.app.ActionBar mActionBar -> c
    android.graphics.Rect mZeroRect -> d
    int[] mActionBarSizeAttr -> a
    void init(android.content.Context) -> a
    void setActionBar(android.support.v7.app.ActionBar) -> setActionBar
android.support.v7.internal.widget.ActionBarView -> android.support.v7.internal.widget.ActionBarView:
    int mNavigationMode -> i
    int mDisplayOptions -> j
    java.lang.CharSequence mTitle -> k
    java.lang.CharSequence mSubtitle -> l
    android.graphics.drawable.Drawable mIcon -> m
    android.graphics.drawable.Drawable mLogo -> n
    android.content.Context mContext -> o
    android.support.v7.internal.widget.ActionBarView$HomeView mHomeLayout -> p
    android.support.v7.internal.widget.ActionBarView$HomeView mExpandedHomeLayout -> q
    android.widget.LinearLayout mTitleLayout -> r
    android.widget.TextView mTitleView -> s
    android.widget.TextView mSubtitleView -> t
    android.view.View mTitleUpView -> u
    android.support.v7.internal.widget.SpinnerICS mSpinner -> v
    android.widget.LinearLayout mListNavLayout -> w
    android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView -> x
    android.view.View mCustomNavView -> y
    android.support.v7.internal.widget.ProgressBarICS mProgressView -> z
    android.support.v7.internal.widget.ProgressBarICS mIndeterminateProgressView -> A
    int mProgressBarPadding -> B
    int mItemPadding -> C
    int mTitleStyleRes -> D
    int mSubtitleStyleRes -> E
    int mProgressStyle -> F
    int mIndeterminateProgressStyle -> G
    boolean mUserTitle -> H
    boolean mIncludeTabs -> I
    boolean mIsCollapsable -> J
    boolean mIsCollapsed -> K
    android.support.v7.internal.view.menu.MenuBuilder mOptionsMenu -> L
    android.support.v7.internal.widget.ActionBarContextView mContextView -> M
    android.support.v7.internal.view.menu.ActionMenuItem mLogoNavItem -> N
    android.widget.SpinnerAdapter mSpinnerAdapter -> O
    android.support.v7.app.ActionBar$OnNavigationListener mCallback -> P
    java.lang.Runnable mTabSelector -> Q
    android.support.v7.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter mExpandedMenuPresenter -> R
    android.view.View mExpandedActionView -> g
    android.view.Window$Callback mWindowCallback -> h
    android.support.v7.internal.widget.AdapterViewICS$OnItemSelectedListener mNavItemSelectedListener -> S
    android.view.View$OnClickListener mExpandedActionViewUpListener -> T
    android.view.View$OnClickListener mUpClickListener -> U
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void initProgress() -> f
    void initIndeterminateProgress() -> g
    void setSplitActionBar(boolean) -> setSplitActionBar
    boolean isSplitActionBar() -> h
    void setEmbeddedTabView(android.support.v7.internal.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    void setCallback(android.support.v7.app.ActionBar$OnNavigationListener) -> setCallback
    void setMenu(android.support.v4.internal.view.SupportMenu,android.support.v7.internal.view.menu.MenuPresenter$Callback) -> setMenu
    void configPresenters(android.support.v7.internal.view.menu.MenuBuilder) -> a
    boolean hasExpandedActionView() -> i
    void collapseActionView() -> j
    void setCustomNavigationView(android.view.View) -> setCustomNavigationView
    java.lang.CharSequence getTitle() -> getTitle
    void setTitle(java.lang.CharSequence) -> setTitle
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    void setTitleImpl(java.lang.CharSequence) -> setTitleImpl
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    void setDisplayOptions(int) -> setDisplayOptions
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setIcon(int) -> setIcon
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    void setLogo(int) -> setLogo
    void setNavigationMode(int) -> setNavigationMode
    void setDropdownAdapter(android.widget.SpinnerAdapter) -> setDropdownAdapter
    android.widget.SpinnerAdapter getDropdownAdapter() -> getDropdownAdapter
    void setDropdownSelectedPosition(int) -> setDropdownSelectedPosition
    int getDropdownSelectedPosition() -> getDropdownSelectedPosition
    android.view.View getCustomNavigationView() -> getCustomNavigationView
    int getNavigationMode() -> getNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void onFinishInflate() -> onFinishInflate
    void initTitle() -> l
    void setContextView(android.support.v7.internal.widget.ActionBarContextView) -> setContextView
    void setCollapsable(boolean) -> setCollapsable
    boolean isCollapsed() -> k
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    boolean isOverflowReserved() -> e
    boolean isOverflowMenuShowing() -> d
    boolean hideOverflowMenu() -> c
    void postShowOverflowMenu() -> b
    boolean showOverflowMenu() -> a
    void setVisibility(int) -> setVisibility
    int getAnimatedVisibility() -> getAnimatedVisibility
    void setSplitView(android.support.v7.internal.widget.ActionBarContainer) -> setSplitView
    int getContentHeight() -> getContentHeight
    void setContentHeight(int) -> setContentHeight
    void setSplitWhenNarrow(boolean) -> setSplitWhenNarrow
    android.support.v7.app.ActionBar$OnNavigationListener access$000(android.support.v7.internal.widget.ActionBarView) -> a
    android.support.v7.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter access$100(android.support.v7.internal.widget.ActionBarView) -> b
    android.support.v7.internal.view.menu.ActionMenuItem access$200(android.support.v7.internal.widget.ActionBarView) -> c
    android.graphics.drawable.Drawable access$500(android.support.v7.internal.widget.ActionBarView) -> d
    android.support.v7.internal.widget.ActionBarView$HomeView access$600(android.support.v7.internal.widget.ActionBarView) -> e
    android.support.v7.internal.widget.ActionBarView$HomeView access$700(android.support.v7.internal.widget.ActionBarView) -> f
    android.widget.LinearLayout access$800(android.support.v7.internal.widget.ActionBarView) -> g
    android.support.v7.internal.widget.ScrollingTabContainerView access$900(android.support.v7.internal.widget.ActionBarView) -> h
    android.support.v7.internal.widget.SpinnerICS access$1000(android.support.v7.internal.widget.ActionBarView) -> i
    android.view.View access$1100(android.support.v7.internal.widget.ActionBarView) -> j
    int access$1200(android.support.v7.internal.widget.ActionBarView) -> k
    void access$1300(android.support.v7.internal.widget.ActionBarView) -> l
    int access$1400(android.support.v7.internal.widget.ActionBarView) -> m
android.support.v7.internal.widget.ActionBarView$1 -> ki:
    android.support.v7.internal.widget.ActionBarView this$0 -> a
    void onItemSelected(android.support.v7.internal.widget.AdapterViewICS,android.view.View,int,long) -> a
    void onNothingSelected(android.support.v7.internal.widget.AdapterViewICS) -> a
android.support.v7.internal.widget.ActionBarView$2 -> kj:
    android.support.v7.internal.widget.ActionBarView this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v7.internal.widget.ActionBarView$3 -> kk:
    android.support.v7.internal.widget.ActionBarView this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v7.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter -> kl:
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> a
    android.support.v7.internal.view.menu.MenuItemImpl mCurrentExpandedItem -> b
    android.support.v7.internal.widget.ActionBarView this$0 -> c
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> c
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> g
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> b
android.support.v7.internal.widget.ActionBarView$HomeView -> android.support.v7.internal.widget.ActionBarView$HomeView:
    android.widget.ImageView mUpView -> a
    android.widget.ImageView mIconView -> b
    int mUpWidth -> c
    int mUpIndicatorRes -> d
    android.graphics.drawable.Drawable mDefaultUpIndicator -> e
    void setUp(boolean) -> a
    void setIcon(android.graphics.drawable.Drawable) -> a
    void setUpIndicator(android.graphics.drawable.Drawable) -> b
    void setUpIndicator(int) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onFinishInflate() -> onFinishInflate
    int getLeftOffset() -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
android.support.v7.internal.widget.ActionBarView$SavedState -> android.support.v7.internal.widget.ActionBarView$SavedState:
    int expandedMenuItemId -> a
    boolean isOverflowOpen -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v7.internal.widget.ActionBarView$SavedState$1 -> km:
    android.support.v7.internal.widget.ActionBarView$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v7.internal.widget.ActionBarView$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.internal.widget.ActivityChooserModel -> kn:
    java.lang.String LOG_TAG -> a
    java.lang.Object sRegistryLock -> b
    java.util.Map sDataModelRegistry -> c
    java.lang.Object mInstanceLock -> d
    java.util.List mActivities -> e
    java.util.List mHistoricalRecords -> f
    android.content.Context mContext -> g
    java.lang.String mHistoryFileName -> h
    android.content.Intent mIntent -> i
    android.support.v7.internal.widget.ActivityChooserModel$ActivitySorter mActivitySorter -> j
    int mHistoryMaxSize -> k
    boolean mCanReadHistoricalData -> l
    boolean mReadShareHistoryCalled -> m
    boolean mHistoricalRecordsChanged -> n
    boolean mReloadActivities -> o
    android.support.v7.internal.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy -> p
    int getActivityCount() -> a
    android.content.pm.ResolveInfo getActivity(int) -> a
    int getActivityIndex(android.content.pm.ResolveInfo) -> a
    android.content.Intent chooseActivity(int) -> b
    android.content.pm.ResolveInfo getDefaultActivity() -> b
    void setDefaultActivity(int) -> c
    void persistHistoricalDataIfNeeded() -> e
    void executePersistHistoryAsyncTaskBase() -> f
    void executePersistHistoryAsyncTaskSDK11() -> g
    int getHistorySize() -> c
    void ensureConsistentState() -> h
    boolean sortActivitiesIfNeeded() -> i
    boolean loadActivitiesIfNeeded() -> j
    boolean readHistoricalDataIfNeeded() -> k
    boolean addHisoricalRecord(android.support.v7.internal.widget.ActivityChooserModel$HistoricalRecord) -> a
    void pruneExcessiveHistoricalRecordsIfNeeded() -> l
    void readHistoricalDataImpl() -> m
    android.content.Context access$200(android.support.v7.internal.widget.ActivityChooserModel) -> a
    java.lang.String access$300() -> d
    java.lang.String access$400(android.support.v7.internal.widget.ActivityChooserModel) -> b
    boolean access$502(android.support.v7.internal.widget.ActivityChooserModel,boolean) -> a
android.support.v7.internal.widget.ActivityChooserModel$1 -> ko:
android.support.v7.internal.widget.ActivityChooserModel$ActivityResolveInfo -> kp:
    android.content.pm.ResolveInfo resolveInfo -> a
    float weight -> b
    android.support.v7.internal.widget.ActivityChooserModel this$0 -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int compareTo(android.support.v7.internal.widget.ActivityChooserModel$ActivityResolveInfo) -> a
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
android.support.v7.internal.widget.ActivityChooserModel$ActivitySorter -> kq:
    void sort(android.content.Intent,java.util.List,java.util.List) -> a
android.support.v7.internal.widget.ActivityChooserModel$HistoricalRecord -> kr:
    android.content.ComponentName activity -> a
    long time -> b
    float weight -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
android.support.v7.internal.widget.ActivityChooserModel$OnChooseActivityListener -> ks:
    boolean onChooseActivity(android.support.v7.internal.widget.ActivityChooserModel,android.content.Intent) -> a
android.support.v7.internal.widget.ActivityChooserModel$PersistHistoryAsyncTask -> kt:
    android.support.v7.internal.widget.ActivityChooserModel this$0 -> a
    java.lang.Void doInBackground(java.lang.Object[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
android.support.v7.internal.widget.ActivityChooserView -> android.support.v7.internal.widget.ActivityChooserView:
    android.support.v7.internal.widget.ActivityChooserView$ActivityChooserViewAdapter mAdapter -> b
    android.support.v7.internal.widget.ActivityChooserView$Callbacks mCallbacks -> c
    android.widget.LinearLayout mActivityChooserContent -> d
    android.graphics.drawable.Drawable mActivityChooserContentBackground -> e
    android.widget.FrameLayout mExpandActivityOverflowButton -> f
    android.widget.ImageView mExpandActivityOverflowButtonImage -> g
    android.widget.FrameLayout mDefaultActivityButton -> h
    android.widget.ImageView mDefaultActivityButtonImage -> i
    int mListPopupMaxWidth -> j
    android.support.v4.view.ActionProvider mProvider -> a
    android.database.DataSetObserver mModelDataSetOberver -> k
    android.view.ViewTreeObserver$OnGlobalLayoutListener mOnGlobalLayoutListener -> l
    android.support.v7.internal.widget.ListPopupWindow mListPopupWindow -> m
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> n
    boolean mIsSelectingDefaultActivity -> o
    int mInitialActivityCount -> p
    boolean mIsAttachedToWindow -> q
    int mDefaultActionButtonContentDescription -> r
    void setActivityChooserModel(android.support.v7.internal.widget.ActivityChooserModel) -> setActivityChooserModel
    void setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable) -> setExpandActivityOverflowButtonDrawable
    void setExpandActivityOverflowButtonContentDescription(int) -> setExpandActivityOverflowButtonContentDescription
    void setProvider(android.support.v4.view.ActionProvider) -> setProvider
    boolean showPopup() -> a
    void showPopupUnchecked(int) -> a
    boolean dismissPopup() -> b
    boolean isShowingPopup() -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.support.v7.internal.widget.ActivityChooserModel getDataModel() -> getDataModel
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    void setInitialActivityCount(int) -> setInitialActivityCount
    void setDefaultActionButtonContentDescription(int) -> setDefaultActionButtonContentDescription
    android.support.v7.internal.widget.ListPopupWindow getListPopupWindow() -> getListPopupWindow
    void updateAppearance() -> d
    android.support.v7.internal.widget.ActivityChooserView$ActivityChooserViewAdapter access$000(android.support.v7.internal.widget.ActivityChooserView) -> a
    android.support.v7.internal.widget.ListPopupWindow access$100(android.support.v7.internal.widget.ActivityChooserView) -> b
    void access$400(android.support.v7.internal.widget.ActivityChooserView) -> c
    void access$500(android.support.v7.internal.widget.ActivityChooserView,int) -> a
    boolean access$600(android.support.v7.internal.widget.ActivityChooserView) -> d
    android.widget.FrameLayout access$700(android.support.v7.internal.widget.ActivityChooserView) -> e
    android.widget.FrameLayout access$800(android.support.v7.internal.widget.ActivityChooserView) -> f
    boolean access$602(android.support.v7.internal.widget.ActivityChooserView,boolean) -> a
    int access$900(android.support.v7.internal.widget.ActivityChooserView) -> g
    android.widget.PopupWindow$OnDismissListener access$1000(android.support.v7.internal.widget.ActivityChooserView) -> h
    android.database.DataSetObserver access$1100(android.support.v7.internal.widget.ActivityChooserView) -> i
android.support.v7.internal.widget.ActivityChooserView$1 -> ku:
    android.support.v7.internal.widget.ActivityChooserView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v7.internal.widget.ActivityChooserView$2 -> kv:
    android.support.v7.internal.widget.ActivityChooserView this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
android.support.v7.internal.widget.ActivityChooserView$3 -> kw:
    android.support.v7.internal.widget.ActivityChooserView this$0 -> a
    void onChanged() -> onChanged
android.support.v7.internal.widget.ActivityChooserView$ActivityChooserViewAdapter -> kx:
    android.support.v7.internal.widget.ActivityChooserModel mDataModel -> b
    int mMaxActivityCount -> c
    boolean mShowDefaultActivity -> d
    boolean mHighlightDefaultActivity -> e
    boolean mShowFooterView -> f
    android.support.v7.internal.widget.ActivityChooserView this$0 -> a
    void setDataModel(android.support.v7.internal.widget.ActivityChooserModel) -> a
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int measureContentWidth() -> a
    void setMaxActivityCount(int) -> a
    android.content.pm.ResolveInfo getDefaultActivity() -> b
    void setShowFooterView(boolean) -> a
    int getActivityCount() -> c
    int getHistorySize() -> d
    android.support.v7.internal.widget.ActivityChooserModel getDataModel() -> e
    void setShowDefaultActivity(boolean,boolean) -> a
    boolean getShowDefaultActivity() -> f
android.support.v7.internal.widget.ActivityChooserView$Callbacks -> ky:
    android.support.v7.internal.widget.ActivityChooserView this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onClick(android.view.View) -> onClick
    boolean onLongClick(android.view.View) -> onLongClick
    void onDismiss() -> onDismiss
    void notifyOnDismissListener() -> a
android.support.v7.internal.widget.AdapterViewICS -> kz:
    int mFirstPosition -> k
    int mSpecificTop -> l
    int mSyncPosition -> m
    long mSyncRowId -> n
    long mSyncHeight -> o
    boolean mNeedSync -> p
    int mSyncMode -> q
    int mLayoutHeight -> a
    boolean mInLayout -> r
    android.support.v7.internal.widget.AdapterViewICS$OnItemSelectedListener mOnItemSelectedListener -> s
    android.support.v7.internal.widget.AdapterViewICS$OnItemClickListener mOnItemClickListener -> t
    boolean mDataChanged -> u
    int mNextSelectedPosition -> v
    long mNextSelectedRowId -> w
    int mSelectedPosition -> x
    long mSelectedRowId -> y
    android.view.View mEmptyView -> b
    int mItemCount -> z
    int mOldItemCount -> A
    int mOldSelectedPosition -> B
    long mOldSelectedRowId -> C
    boolean mDesiredFocusableState -> c
    boolean mDesiredFocusableInTouchModeState -> d
    android.support.v7.internal.widget.AdapterViewICS$SelectionNotifier mSelectionNotifier -> e
    boolean mBlockLayoutRequests -> D
    void setOnItemClickListener(android.support.v7.internal.widget.AdapterViewICS$OnItemClickListener) -> a
    boolean performItemClick(android.view.View,int,long) -> a
    void setOnItemSelectedListener(android.support.v7.internal.widget.AdapterViewICS$OnItemSelectedListener) -> a
    android.widget.Adapter getAdapter() -> e
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    void removeViewAt(int) -> removeViewAt
    void removeAllViews() -> removeAllViews
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getSelectedItemPosition() -> f
    long getSelectedItemId() -> g
    android.view.View getSelectedView() -> c
    boolean isInFilterMode() -> h
    void setFocusable(boolean) -> setFocusable
    void setFocusableInTouchMode(boolean) -> setFocusableInTouchMode
    void checkFocus() -> i
    void updateEmptyStatus(boolean) -> a
    long getItemIdAtPosition(int) -> b
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    void onDetachedFromWindow() -> onDetachedFromWindow
    void selectionChanged() -> j
    void fireOnSelected() -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean canAnimate() -> canAnimate
    void handleDataChanged() -> k
    void checkSelectionChanged() -> l
    int findSyncPosition() -> m
    int lookForSelectablePosition(int,boolean) -> a
    void setSelectedPositionInt(int) -> c
    void setNextSelectedPositionInt(int) -> d
    void rememberSyncState() -> n
    void access$000(android.support.v7.internal.widget.AdapterViewICS,android.os.Parcelable) -> a
    android.os.Parcelable access$100(android.support.v7.internal.widget.AdapterViewICS) -> a
    void access$200(android.support.v7.internal.widget.AdapterViewICS) -> b
android.support.v7.internal.widget.AdapterViewICS$1 -> la:
android.support.v7.internal.widget.AdapterViewICS$AdapterDataSetObserver -> lb:
    android.os.Parcelable mInstanceState -> b
    android.support.v7.internal.widget.AdapterViewICS this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v7.internal.widget.AdapterViewICS$OnItemClickListener -> lc:
    void onItemClick(android.support.v7.internal.widget.AdapterViewICS,android.view.View,int,long) -> a
android.support.v7.internal.widget.AdapterViewICS$OnItemClickListenerWrapper -> ld:
    android.support.v7.internal.widget.AdapterViewICS$OnItemClickListener mWrappedListener -> b
    android.support.v7.internal.widget.AdapterViewICS this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v7.internal.widget.AdapterViewICS$OnItemSelectedListener -> le:
    void onItemSelected(android.support.v7.internal.widget.AdapterViewICS,android.view.View,int,long) -> a
    void onNothingSelected(android.support.v7.internal.widget.AdapterViewICS) -> a
android.support.v7.internal.widget.AdapterViewICS$SelectionNotifier -> lf:
    android.support.v7.internal.widget.AdapterViewICS this$0 -> a
    void run() -> run
android.support.v7.internal.widget.CompatTextView -> android.support.v7.internal.widget.CompatTextView:
android.support.v7.internal.widget.CompatTextView$AllCapsTransformationMethod -> lg:
    java.util.Locale mLocale -> a
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect) -> onFocusChanged
android.support.v7.internal.widget.LinearLayoutICS -> android.support.v7.internal.widget.LinearLayoutICS:
    android.graphics.drawable.Drawable mDivider -> a
    int mDividerWidth -> b
    int mDividerHeight -> c
    int mShowDividers -> d
    int mDividerPadding -> e
    int getSupportDividerWidth() -> getSupportDividerWidth
    void onDraw(android.graphics.Canvas) -> onDraw
    void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    void drawSupportDividersVertical(android.graphics.Canvas) -> a
    void drawSupportDividersHorizontal(android.graphics.Canvas) -> b
    void drawSupportHorizontalDivider(android.graphics.Canvas,int) -> a
    void drawSupportVerticalDivider(android.graphics.Canvas,int) -> b
    boolean hasSupportDividerBeforeChildAt(int) -> a
android.support.v7.internal.widget.ListPopupWindow -> android.support.v7.internal.widget.ListPopupWindow:
    android.content.Context mContext -> b
    android.widget.PopupWindow mPopup -> c
    android.widget.ListAdapter mAdapter -> d
    android.support.v7.internal.widget.ListPopupWindow$DropDownListView mDropDownList -> e
    int mDropDownHeight -> f
    int mDropDownWidth -> g
    int mDropDownHorizontalOffset -> h
    int mDropDownVerticalOffset -> i
    boolean mDropDownVerticalOffsetSet -> j
    boolean mDropDownAlwaysVisible -> k
    boolean mForceIgnoreOutsideTouch -> l
    int mListItemExpandMaximum -> a
    android.view.View mPromptView -> m
    int mPromptPosition -> n
    android.database.DataSetObserver mObserver -> o
    android.view.View mDropDownAnchorView -> p
    android.graphics.drawable.Drawable mDropDownListHighlight -> q
    android.widget.AdapterView$OnItemClickListener mItemClickListener -> r
    android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener -> s
    android.support.v7.internal.widget.ListPopupWindow$ResizePopupRunnable mResizePopupRunnable -> t
    android.support.v7.internal.widget.ListPopupWindow$PopupTouchInterceptor mTouchInterceptor -> u
    android.support.v7.internal.widget.ListPopupWindow$PopupScrollListener mScrollListener -> v
    android.support.v7.internal.widget.ListPopupWindow$ListSelectorHider mHideSelector -> w
    java.lang.Runnable mShowDropDownRunnable -> x
    android.os.Handler mHandler -> y
    android.graphics.Rect mTempRect -> z
    boolean mModal -> A
    void setAdapter(android.widget.ListAdapter) -> a
    void setPromptPosition(int) -> a
    void setModal(boolean) -> a
    android.graphics.drawable.Drawable getBackground() -> a
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> a
    android.view.View getAnchorView() -> b
    void setAnchorView(android.view.View) -> a
    void setHorizontalOffset(int) -> b
    void setVerticalOffset(int) -> c
    void setWidth(int) -> d
    void setContentWidth(int) -> e
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> a
    void show() -> c
    void dismiss() -> d
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> a
    void removePromptView() -> i
    void setInputMethodMode(int) -> f
    void setSelection(int) -> g
    void clearListSelection() -> e
    boolean isShowing() -> f
    boolean isInputMethodNotNeeded() -> g
    android.widget.ListView getListView() -> h
    int buildDropDown() -> j
    int getMaxAvailableHeight(android.view.View,int,boolean) -> a
    android.support.v7.internal.widget.ListPopupWindow$DropDownListView access$700(android.support.v7.internal.widget.ListPopupWindow) -> a
    android.widget.PopupWindow access$800(android.support.v7.internal.widget.ListPopupWindow) -> b
    android.support.v7.internal.widget.ListPopupWindow$ResizePopupRunnable access$900(android.support.v7.internal.widget.ListPopupWindow) -> c
    android.os.Handler access$1000(android.support.v7.internal.widget.ListPopupWindow) -> d
android.support.v7.internal.widget.ListPopupWindow$1 -> lh:
    android.support.v7.internal.widget.ListPopupWindow this$0 -> a
    void run() -> run
android.support.v7.internal.widget.ListPopupWindow$2 -> li:
    android.support.v7.internal.widget.ListPopupWindow this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
android.support.v7.internal.widget.ListPopupWindow$DropDownListView -> lj:
    boolean mListSelectionHidden -> a
    boolean mHijackFocus -> b
    boolean isInTouchMode() -> isInTouchMode
    boolean hasWindowFocus() -> hasWindowFocus
    boolean isFocused() -> isFocused
    boolean hasFocus() -> hasFocus
    int measureHeightOfChildrenCompat(int,int,int,int,int) -> a
    boolean access$502(android.support.v7.internal.widget.ListPopupWindow$DropDownListView,boolean) -> a
android.support.v7.internal.widget.ListPopupWindow$ListSelectorHider -> lk:
    android.support.v7.internal.widget.ListPopupWindow this$0 -> a
    void run() -> run
android.support.v7.internal.widget.ListPopupWindow$PopupDataSetObserver -> ll:
    android.support.v7.internal.widget.ListPopupWindow this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v7.internal.widget.ListPopupWindow$PopupScrollListener -> lm:
    android.support.v7.internal.widget.ListPopupWindow this$0 -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
android.support.v7.internal.widget.ListPopupWindow$PopupTouchInterceptor -> ln:
    android.support.v7.internal.widget.ListPopupWindow this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
android.support.v7.internal.widget.ListPopupWindow$ResizePopupRunnable -> lo:
    android.support.v7.internal.widget.ListPopupWindow this$0 -> a
    void run() -> run
android.support.v7.internal.widget.NativeActionModeAwareLayout -> android.support.v7.internal.widget.NativeActionModeAwareLayout:
    android.support.v7.internal.widget.NativeActionModeAwareLayout$OnActionModeForChildListener mActionModeForChildListener -> a
    void setActionModeForChildListener(android.support.v7.internal.widget.NativeActionModeAwareLayout$OnActionModeForChildListener) -> setActionModeForChildListener
    android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback) -> startActionModeForChild
android.support.v7.internal.widget.NativeActionModeAwareLayout$OnActionModeForChildListener -> lp:
    android.view.ActionMode$Callback onActionModeForChild(android.view.ActionMode$Callback) -> a
android.support.v7.internal.widget.ProgressBarICS -> android.support.v7.internal.widget.ProgressBarICS:
    int[] android_R_styleable_ProgressBar -> f
    int mMinWidth -> a
    int mMaxWidth -> b
    int mMinHeight -> c
    int mMaxHeight -> d
    int mProgress -> g
    int mSecondaryProgress -> h
    int mMax -> i
    int mBehavior -> j
    int mDuration -> k
    boolean mIndeterminate -> l
    boolean mOnlyIndeterminate -> m
    android.view.animation.Transformation mTransformation -> n
    android.view.animation.AlphaAnimation mAnimation -> o
    android.graphics.drawable.Drawable mIndeterminateDrawable -> p
    android.graphics.drawable.Drawable mProgressDrawable -> q
    android.graphics.drawable.Drawable mCurrentDrawable -> r
    android.graphics.Bitmap mSampleTile -> e
    boolean mNoInvalidate -> s
    android.view.animation.Interpolator mInterpolator -> t
    android.support.v7.internal.widget.ProgressBarICS$RefreshProgressRunnable mRefreshProgressRunnable -> u
    long mUiThreadId -> v
    boolean mShouldStartAnimationDrawable -> w
    long mLastDrawTime -> x
    boolean mInDrawing -> y
    android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> a
    android.graphics.drawable.shapes.Shape getDrawableShape() -> getDrawableShape
    android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> a
    void initProgressBar() -> c
    void setIndeterminate(boolean) -> setIndeterminate
    android.graphics.drawable.Drawable getIndeterminateDrawable() -> getIndeterminateDrawable
    void setIndeterminateDrawable(android.graphics.drawable.Drawable) -> setIndeterminateDrawable
    android.graphics.drawable.Drawable getProgressDrawable() -> getProgressDrawable
    void setProgressDrawable(android.graphics.drawable.Drawable) -> setProgressDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void postInvalidate() -> postInvalidate
    void doRefreshProgress(int,int,boolean,boolean) -> a
    void refreshProgress(int,int,boolean) -> a
    void setProgress(int) -> setProgress
    void setProgress(int,boolean) -> a
    void setSecondaryProgress(int) -> setSecondaryProgress
    int getProgress() -> getProgress
    int getSecondaryProgress() -> getSecondaryProgress
    int getMax() -> getMax
    void setMax(int) -> setMax
    void startAnimation() -> a
    void stopAnimation() -> b
    void setInterpolator(android.content.Context,int) -> setInterpolator
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    void setVisibility(int) -> setVisibility
    void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void updateDrawableBounds(int,int) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void drawableStateChanged() -> drawableStateChanged
    void updateDrawableState() -> d
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void access$000(android.support.v7.internal.widget.ProgressBarICS,int,int,boolean,boolean) -> a
    android.support.v7.internal.widget.ProgressBarICS$RefreshProgressRunnable access$102(android.support.v7.internal.widget.ProgressBarICS,android.support.v7.internal.widget.ProgressBarICS$RefreshProgressRunnable) -> a
android.support.v7.internal.widget.ProgressBarICS$1 -> lq:
android.support.v7.internal.widget.ProgressBarICS$RefreshProgressRunnable -> lr:
    int mId -> b
    int mProgress -> c
    boolean mFromUser -> d
    android.support.v7.internal.widget.ProgressBarICS this$0 -> a
    void run() -> run
    void setup(int,int,boolean) -> a
android.support.v7.internal.widget.ProgressBarICS$SavedState -> android.support.v7.internal.widget.ProgressBarICS$SavedState:
    int progress -> a
    int secondaryProgress -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v7.internal.widget.ProgressBarICS$SavedState$1 -> ls:
    android.support.v7.internal.widget.ProgressBarICS$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v7.internal.widget.ProgressBarICS$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.internal.widget.ScrollingTabContainerView -> android.support.v7.internal.widget.ScrollingTabContainerView:
    java.lang.Runnable mTabSelector -> a
    android.support.v7.internal.widget.ScrollingTabContainerView$TabClickListener mTabClickListener -> d
    android.widget.LinearLayout mTabLayout -> e
    android.support.v7.internal.widget.SpinnerICS mTabSpinner -> f
    boolean mAllowCollapse -> g
    android.view.LayoutInflater mInflater -> h
    int mMaxTabWidth -> b
    int mStackedTabMaxWidth -> c
    int mContentHeight -> i
    int mSelectedTabIndex -> j
    void onMeasure(int,int) -> onMeasure
    boolean isCollapsed() -> a
    void setAllowCollapse(boolean) -> setAllowCollapse
    void performCollapse() -> b
    boolean performExpand() -> c
    void setTabSelected(int) -> setTabSelected
    void setContentHeight(int) -> setContentHeight
    android.support.v7.internal.widget.SpinnerICS createSpinner() -> d
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void animateToTab(int) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.support.v7.internal.widget.ScrollingTabContainerView$TabView createTabView(android.support.v7.app.ActionBar$Tab,boolean) -> a
    void onItemClick(android.support.v7.internal.widget.AdapterViewICS,android.view.View,int,long) -> a
    android.widget.LinearLayout access$200(android.support.v7.internal.widget.ScrollingTabContainerView) -> a
    android.support.v7.internal.widget.ScrollingTabContainerView$TabView access$300(android.support.v7.internal.widget.ScrollingTabContainerView,android.support.v7.app.ActionBar$Tab,boolean) -> a
android.support.v7.internal.widget.ScrollingTabContainerView$1 -> lt:
    android.view.View val$tabView -> a
    android.support.v7.internal.widget.ScrollingTabContainerView this$0 -> b
    void run() -> run
android.support.v7.internal.widget.ScrollingTabContainerView$TabAdapter -> lu:
    android.support.v7.internal.widget.ScrollingTabContainerView this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
android.support.v7.internal.widget.ScrollingTabContainerView$TabClickListener -> lv:
    android.support.v7.internal.widget.ScrollingTabContainerView this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v7.internal.widget.ScrollingTabContainerView$TabView -> android.support.v7.internal.widget.ScrollingTabContainerView$TabView:
    android.support.v7.app.ActionBar$Tab mTab -> a
    android.widget.TextView mTextView -> b
    android.widget.ImageView mIconView -> c
    android.view.View mCustomView -> d
    android.support.v7.internal.widget.ScrollingTabContainerView mParent -> e
    void attach(android.support.v7.internal.widget.ScrollingTabContainerView,android.support.v7.app.ActionBar$Tab,boolean) -> a
    void bindTab(android.support.v7.app.ActionBar$Tab) -> a
    void onMeasure(int,int) -> onMeasure
    void update() -> a
    android.support.v7.app.ActionBar$Tab getTab() -> getTab
android.support.v7.internal.widget.SpinnerICS -> lw:
    android.support.v7.internal.widget.SpinnerICS$SpinnerPopup mPopup -> F
    android.support.v7.internal.widget.SpinnerICS$DropDownAdapter mTempAdapter -> G
    int mDropDownWidth -> E
    int mGravity -> H
    android.graphics.Rect mTempRect -> I
    void setAdapter(android.widget.SpinnerAdapter) -> a
    int getBaseline() -> getBaseline
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setOnItemClickListener(android.support.v7.internal.widget.AdapterViewICS$OnItemClickListener) -> a
    void setOnItemClickListenerInt(android.support.v7.internal.widget.AdapterViewICS$OnItemClickListener) -> b
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void layout(int,boolean) -> b
    android.view.View makeAndAddView(int) -> e
    void setUpChild(android.view.View) -> c
    boolean performClick() -> performClick
    void onClick(android.content.DialogInterface,int) -> onClick
    int measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> a
    android.graphics.Rect access$200(android.support.v7.internal.widget.SpinnerICS) -> a
android.support.v7.internal.widget.SpinnerICS$1 -> lx:
android.support.v7.internal.widget.SpinnerICS$DialogPopup -> ly:
    android.app.AlertDialog mPopup -> b
    android.widget.ListAdapter mListAdapter -> c
    java.lang.CharSequence mPrompt -> d
    android.support.v7.internal.widget.SpinnerICS this$0 -> a
    void dismiss() -> d
    boolean isShowing() -> f
    void setAdapter(android.widget.ListAdapter) -> a
    void setPromptText(java.lang.CharSequence) -> a
    void show() -> c
    void onClick(android.content.DialogInterface,int) -> onClick
android.support.v7.internal.widget.SpinnerICS$DropDownAdapter -> lz:
    android.widget.SpinnerAdapter mAdapter -> a
    android.widget.ListAdapter mListAdapter -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    boolean hasStableIds() -> hasStableIds
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    boolean isEmpty() -> isEmpty
android.support.v7.internal.widget.SpinnerICS$DropdownPopup -> ma:
    java.lang.CharSequence mHintText -> c
    android.widget.ListAdapter mAdapter -> d
    android.support.v7.internal.widget.SpinnerICS this$0 -> b
    void setAdapter(android.widget.ListAdapter) -> a
    void setPromptText(java.lang.CharSequence) -> a
    void show() -> c
    android.widget.ListAdapter access$100(android.support.v7.internal.widget.SpinnerICS$DropdownPopup) -> a
android.support.v7.internal.widget.SpinnerICS$DropdownPopup$1 -> mb:
    android.support.v7.internal.widget.SpinnerICS val$this$0 -> a
    android.support.v7.internal.widget.SpinnerICS$DropdownPopup this$1 -> b
    void onItemClick(android.support.v7.internal.widget.AdapterViewICS,android.view.View,int,long) -> a
android.support.v7.internal.widget.SpinnerICS$SpinnerPopup -> mc:
    void setAdapter(android.widget.ListAdapter) -> a
    void show() -> c
    void dismiss() -> d
    boolean isShowing() -> f
    void setPromptText(java.lang.CharSequence) -> a
android.support.v7.view.ActionMode -> md:
    void finish() -> a
android.support.v7.view.CollapsibleActionView -> me:
    void onActionViewExpanded() -> a
    void onActionViewCollapsed() -> b
android.support.v7.widget.SearchView -> android.support.v7.widget.SearchView:
    android.support.v7.widget.SearchView$OnQueryTextListener mOnQueryChangeListener -> c
    android.support.v7.widget.SearchView$OnCloseListener mOnCloseListener -> d
    android.view.View$OnFocusChangeListener mOnQueryTextFocusChangeListener -> e
    android.support.v7.widget.SearchView$OnSuggestionListener mOnSuggestionListener -> f
    android.view.View$OnClickListener mOnSearchClickListener -> g
    boolean mIconifiedByDefault -> h
    boolean mIconified -> i
    android.support.v4.widget.CursorAdapter mSuggestionsAdapter -> j
    android.view.View mSearchButton -> k
    android.view.View mSubmitButton -> l
    android.view.View mSearchPlate -> m
    android.view.View mSubmitArea -> n
    android.widget.ImageView mCloseButton -> o
    android.view.View mSearchEditFrame -> p
    android.view.View mVoiceButton -> q
    android.support.v7.widget.SearchView$SearchAutoComplete mQueryTextView -> r
    android.view.View mDropDownAnchor -> s
    android.widget.ImageView mSearchHintIcon -> t
    boolean mSubmitButtonEnabled -> u
    java.lang.CharSequence mQueryHint -> v
    boolean mQueryRefinement -> w
    boolean mClearingFocus -> x
    int mMaxWidth -> y
    boolean mVoiceButtonEnabled -> z
    java.lang.CharSequence mOldQueryText -> A
    java.lang.CharSequence mUserQuery -> B
    boolean mExpandedInActionView -> C
    int mCollapsedImeOptions -> D
    android.app.SearchableInfo mSearchable -> E
    android.os.Bundle mAppSearchData -> F
    android.support.v7.widget.SearchView$AutoCompleteTextViewReflector HIDDEN_METHOD_INVOKER -> a
    java.lang.Runnable mShowImeRunnable -> G
    java.lang.Runnable mUpdateDrawableStateRunnable -> H
    java.lang.Runnable mReleaseCursorRunnable -> I
    android.content.Intent mVoiceWebSearchIntent -> J
    android.content.Intent mVoiceAppSearchIntent -> K
    java.util.WeakHashMap mOutsideDrawablesCache -> L
    android.view.View$OnClickListener mOnClickListener -> M
    android.view.View$OnKeyListener mTextKeyListener -> b
    android.widget.TextView$OnEditorActionListener mOnEditorActionListener -> N
    android.widget.AdapterView$OnItemClickListener mOnItemClickListener -> O
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> P
    android.text.TextWatcher mTextWatcher -> Q
    void addOnLayoutChangeListenerToDropDownAnchorSDK11() -> e
    void addOnLayoutChangeListenerToDropDownAnchorBase() -> f
    void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    void setAppSearchData(android.os.Bundle) -> setAppSearchData
    void setImeOptions(int) -> setImeOptions
    int getImeOptions() -> getImeOptions
    void setInputType(int) -> setInputType
    int getInputType() -> getInputType
    boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    void clearFocus() -> clearFocus
    void setOnQueryTextListener(android.support.v7.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    void setOnCloseListener(android.support.v7.widget.SearchView$OnCloseListener) -> setOnCloseListener
    void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    void setOnSuggestionListener(android.support.v7.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    java.lang.CharSequence getQuery() -> getQuery
    void setQuery(java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(java.lang.CharSequence) -> setQueryHint
    java.lang.CharSequence getQueryHint() -> getQueryHint
    void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    void setIconified(boolean) -> setIconified
    boolean isIconified() -> c
    void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    void setSuggestionsAdapter(android.support.v4.widget.CursorAdapter) -> setSuggestionsAdapter
    android.support.v4.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    void setMaxWidth(int) -> setMaxWidth
    int getMaxWidth() -> getMaxWidth
    void onMeasure(int,int) -> onMeasure
    int getPreferredWidth() -> getPreferredWidth
    void updateViewsVisibility(boolean) -> a
    boolean hasVoiceSearch() -> g
    boolean isSubmitAreaEnabled() -> h
    void updateSubmitButton(boolean) -> b
    void updateSubmitArea() -> i
    void updateCloseButton() -> j
    void postUpdateFocusedState() -> k
    void updateFocusedState() -> l
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setImeVisibility(boolean) -> setImeVisibility
    void onQueryRefine(java.lang.CharSequence) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent) -> a
    int getSearchIconId() -> getSearchIconId
    java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> b
    void updateQueryHint() -> m
    void updateSearchAutoComplete() -> n
    void updateVoiceButton(boolean) -> c
    void onTextChanged(java.lang.CharSequence) -> c
    void onSubmitQuery() -> o
    void dismissSuggestions() -> p
    void onCloseClicked() -> q
    void onSearchClicked() -> r
    void onVoiceClicked() -> s
    void onTextFocusChanged() -> d
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onActionViewCollapsed() -> b
    void onActionViewExpanded() -> a
    void adjustDropDownSizeAndPosition() -> t
    boolean onItemClicked(int,int,java.lang.String) -> a
    boolean onItemSelected(int) -> a
    void rewriteQueryFromSuggestion(int) -> b
    boolean launchSuggestion(int,int,java.lang.String) -> b
    void launchIntent(android.content.Intent) -> a
    void setQuery(java.lang.CharSequence) -> setQuery
    void launchQuerySearch(int,java.lang.String,java.lang.String) -> a
    android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> a
    android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo) -> a
    android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> b
    android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String) -> a
    void forceSuggestionQuery() -> u
    boolean isLandscapeMode(android.content.Context) -> a
    void access$000(android.support.v7.widget.SearchView) -> a
    android.support.v4.widget.CursorAdapter access$100(android.support.v7.widget.SearchView) -> b
    android.view.View$OnFocusChangeListener access$200(android.support.v7.widget.SearchView) -> c
    void access$300(android.support.v7.widget.SearchView) -> d
    android.view.View access$400(android.support.v7.widget.SearchView) -> e
    void access$500(android.support.v7.widget.SearchView) -> f
    android.widget.ImageView access$600(android.support.v7.widget.SearchView) -> g
    void access$700(android.support.v7.widget.SearchView) -> h
    android.view.View access$800(android.support.v7.widget.SearchView) -> i
    void access$900(android.support.v7.widget.SearchView) -> j
    android.view.View access$1000(android.support.v7.widget.SearchView) -> k
    void access$1100(android.support.v7.widget.SearchView) -> l
    android.support.v7.widget.SearchView$SearchAutoComplete access$1200(android.support.v7.widget.SearchView) -> m
    void access$1300(android.support.v7.widget.SearchView) -> n
    android.app.SearchableInfo access$1400(android.support.v7.widget.SearchView) -> o
    boolean access$1500(android.support.v7.widget.SearchView,android.view.View,int,android.view.KeyEvent) -> a
    void access$1700(android.support.v7.widget.SearchView,int,java.lang.String,java.lang.String) -> a
    boolean access$1800(android.support.v7.widget.SearchView,int,int,java.lang.String) -> a
    boolean access$1900(android.support.v7.widget.SearchView,int) -> a
    void access$2000(android.support.v7.widget.SearchView,java.lang.CharSequence) -> a
    void access$2100(android.support.v7.widget.SearchView,boolean) -> a
android.support.v7.widget.SearchView$1 -> mf:
    android.support.v7.widget.SearchView this$0 -> a
    void run() -> run
android.support.v7.widget.SearchView$10 -> mg:
    android.support.v7.widget.SearchView this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v7.widget.SearchView$11 -> mh:
    android.support.v7.widget.SearchView this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
android.support.v7.widget.SearchView$12 -> mi:
    android.support.v7.widget.SearchView this$0 -> a
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
android.support.v7.widget.SearchView$2 -> mj:
    android.support.v7.widget.SearchView this$0 -> a
    void run() -> run
android.support.v7.widget.SearchView$3 -> mk:
    android.support.v7.widget.SearchView this$0 -> a
    void run() -> run
android.support.v7.widget.SearchView$4 -> ml:
    android.support.v7.widget.SearchView this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
android.support.v7.widget.SearchView$5 -> mm:
    android.support.v7.widget.SearchView this$0 -> a
    void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
android.support.v7.widget.SearchView$6 -> mn:
    android.support.v7.widget.SearchView this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
android.support.v7.widget.SearchView$7 -> mo:
    android.support.v7.widget.SearchView this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v7.widget.SearchView$8 -> mp:
    android.support.v7.widget.SearchView this$0 -> a
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
android.support.v7.widget.SearchView$9 -> mq:
    android.support.v7.widget.SearchView this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
android.support.v7.widget.SearchView$AutoCompleteTextViewReflector -> mr:
    java.lang.reflect.Method doBeforeTextChanged -> a
    java.lang.reflect.Method doAfterTextChanged -> b
    java.lang.reflect.Method ensureImeVisible -> c
    java.lang.reflect.Method showSoftInputUnchecked -> d
    void doBeforeTextChanged(android.widget.AutoCompleteTextView) -> a
    void doAfterTextChanged(android.widget.AutoCompleteTextView) -> b
    void ensureImeVisible(android.widget.AutoCompleteTextView,boolean) -> a
    void showSoftInputUnchecked(android.view.inputmethod.InputMethodManager,android.view.View,int) -> a
android.support.v7.widget.SearchView$OnCloseListener -> ms:
    boolean onClose() -> a
android.support.v7.widget.SearchView$OnQueryTextListener -> mt:
    boolean onQueryTextSubmit(java.lang.String) -> a
    boolean onQueryTextChange(java.lang.String) -> b
android.support.v7.widget.SearchView$OnSuggestionListener -> mu:
    boolean onSuggestionSelect(int) -> a
    boolean onSuggestionClick(int) -> b
android.support.v7.widget.SearchView$SearchAutoComplete -> android.support.v7.widget.SearchView$SearchAutoComplete:
    int mThreshold -> a
    android.support.v7.widget.SearchView mSearchView -> b
    void setSearchView(android.support.v7.widget.SearchView) -> setSearchView
    void setThreshold(int) -> setThreshold
    boolean isEmpty() -> a
    void replaceText(java.lang.CharSequence) -> replaceText
    void performCompletion() -> performCompletion
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    boolean enoughToFilter() -> enoughToFilter
    boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    boolean access$1600(android.support.v7.widget.SearchView$SearchAutoComplete) -> a
android.support.v7.widget.SuggestionsAdapter -> mv:
    android.app.SearchManager mSearchManager -> j
    android.support.v7.widget.SearchView mSearchView -> k
    android.app.SearchableInfo mSearchable -> l
    android.content.Context mProviderContext -> m
    java.util.WeakHashMap mOutsideDrawablesCache -> n
    boolean mClosed -> o
    int mQueryRefinement -> p
    android.content.res.ColorStateList mUrlColor -> q
    int mText1Col -> r
    int mText2Col -> s
    int mText2UrlCol -> t
    int mIconName1Col -> u
    int mIconName2Col -> v
    int mFlagsCol -> w
    void setQueryRefinement(int) -> a
    boolean hasStableIds() -> hasStableIds
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    void notifyDataSetChanged() -> notifyDataSetChanged
    void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    void updateSpinnerState(android.database.Cursor) -> d
    void changeCursor(android.database.Cursor) -> a
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
    void onClick(android.view.View) -> onClick
    java.lang.CharSequence formatUrl(java.lang.CharSequence) -> b
    void setViewText(android.widget.TextView,java.lang.CharSequence) -> a
    android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> e
    android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> f
    void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> a
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> a
    android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> b
    android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> b
    void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> a
    android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor) -> g
    android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName) -> a
    android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) -> b
    java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> a
    java.lang.String getStringOrNull(android.database.Cursor,int) -> a
    android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri) -> a
    android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int) -> a
android.support.v7.widget.SuggestionsAdapter$ChildViewCache -> mw:
    android.widget.TextView mText1 -> a
    android.widget.TextView mText2 -> b
    android.widget.ImageView mIcon1 -> c
    android.widget.ImageView mIcon2 -> d
    android.widget.ImageView mIconRefine -> e
io.vov.vitamio.EGL -> io.vov.vitamio.EGL:
    javax.microedition.khronos.egl.EGL10 mEgl -> mEgl
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay -> mEglDisplay
    javax.microedition.khronos.egl.EGLSurface mEglSurface -> mEglSurface
    javax.microedition.khronos.egl.EGLConfig mEglConfig -> mEglConfig
    javax.microedition.khronos.egl.EGLContext mEglContext -> mEglContext
    io.vov.vitamio.EGL$EGLConfigChooser mEGLConfigChooser -> mEGLConfigChooser
    io.vov.vitamio.EGL$EGLContextFactory mEGLContextFactory -> mEGLContextFactory
    io.vov.vitamio.EGL$EGLWindowSurfaceFactory mEGLWindowSurfaceFactory -> mEGLWindowSurfaceFactory
    boolean initialize(android.view.Surface) -> initialize
    void release() -> release
    void start() -> start
    javax.microedition.khronos.opengles.GL createSurface(android.view.Surface) -> createSurface
    boolean swap() -> swap
    void destroySurface() -> destroySurface
    void finish() -> finish
    void throwEglException(java.lang.String) -> throwEglException
    void throwEglException(java.lang.String,int) -> throwEglException
io.vov.vitamio.EGL$ComponentSizeChooser -> io.vov.vitamio.EGL$ComponentSizeChooser:
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    int[] mValue -> mValue
    io.vov.vitamio.EGL this$0 -> this$0
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
io.vov.vitamio.EGL$EGLConfigChooser -> io.vov.vitamio.EGL$EGLConfigChooser:
    int[] mConfigSpec -> mConfigSpec
    io.vov.vitamio.EGL this$0 -> this$0
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int[] filterConfigSpec(int[]) -> filterConfigSpec
io.vov.vitamio.EGL$EGLContextFactory -> io.vov.vitamio.EGL$EGLContextFactory:
    int EGL_CONTEXT_CLIENT_VERSION -> EGL_CONTEXT_CLIENT_VERSION
    io.vov.vitamio.EGL this$0 -> this$0
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
io.vov.vitamio.EGL$EGLWindowSurfaceFactory -> io.vov.vitamio.EGL$EGLWindowSurfaceFactory:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> createWindowSurface
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> destroySurface
io.vov.vitamio.EGL$SimpleEGLConfigChooser -> io.vov.vitamio.EGL$SimpleEGLConfigChooser:
    io.vov.vitamio.EGL this$0 -> this$0
io.vov.vitamio.LibsChecker -> io.vov.vitamio.LibsChecker:
    java.lang.String FROM_ME -> FROM_ME
    boolean checkVitamioLibs(android.app.Activity) -> checkVitamioLibs
io.vov.vitamio.MediaFile -> io.vov.vitamio.MediaFile:
    java.lang.String sFileExtensions -> sFileExtensions
    int FILE_TYPE_MP3 -> FILE_TYPE_MP3
    int FILE_TYPE_M4A -> FILE_TYPE_M4A
    int FILE_TYPE_WAV -> FILE_TYPE_WAV
    int FILE_TYPE_AMR -> FILE_TYPE_AMR
    int FILE_TYPE_AWB -> FILE_TYPE_AWB
    int FILE_TYPE_WMA -> FILE_TYPE_WMA
    int FILE_TYPE_OGG -> FILE_TYPE_OGG
    int FILE_TYPE_AAC -> FILE_TYPE_AAC
    int FILE_TYPE_MKA -> FILE_TYPE_MKA
    int FILE_TYPE_MID -> FILE_TYPE_MID
    int FILE_TYPE_SMF -> FILE_TYPE_SMF
    int FILE_TYPE_IMY -> FILE_TYPE_IMY
    int FILE_TYPE_APE -> FILE_TYPE_APE
    int FILE_TYPE_FLAC -> FILE_TYPE_FLAC
    int FIRST_AUDIO_FILE_TYPE -> FIRST_AUDIO_FILE_TYPE
    int LAST_AUDIO_FILE_TYPE -> LAST_AUDIO_FILE_TYPE
    int FILE_TYPE_MP4 -> FILE_TYPE_MP4
    int FILE_TYPE_M4V -> FILE_TYPE_M4V
    int FILE_TYPE_3GPP -> FILE_TYPE_3GPP
    int FILE_TYPE_3GPP2 -> FILE_TYPE_3GPP2
    int FILE_TYPE_WMV -> FILE_TYPE_WMV
    int FILE_TYPE_ASF -> FILE_TYPE_ASF
    int FILE_TYPE_MKV -> FILE_TYPE_MKV
    int FILE_TYPE_MP2TS -> FILE_TYPE_MP2TS
    int FILE_TYPE_FLV -> FILE_TYPE_FLV
    int FILE_TYPE_MOV -> FILE_TYPE_MOV
    int FILE_TYPE_RM -> FILE_TYPE_RM
    int FILE_TYPE_DVD -> FILE_TYPE_DVD
    int FILE_TYPE_DIVX -> FILE_TYPE_DIVX
    int FILE_TYPE_OGV -> FILE_TYPE_OGV
    int FILE_TYPE_VIVO -> FILE_TYPE_VIVO
    int FILE_TYPE_WTV -> FILE_TYPE_WTV
    int FILE_TYPE_AVS -> FILE_TYPE_AVS
    int FILE_TYPE_SWF -> FILE_TYPE_SWF
    int FILE_TYPE_RAW -> FILE_TYPE_RAW
    int FIRST_VIDEO_FILE_TYPE -> FIRST_VIDEO_FILE_TYPE
    int LAST_VIDEO_FILE_TYPE -> LAST_VIDEO_FILE_TYPE
    java.util.HashMap sFileTypeMap -> sFileTypeMap
    java.util.HashMap sMimeTypeMap -> sMimeTypeMap
    void addFileType(java.lang.String,int,java.lang.String) -> addFileType
    boolean isAudioFileType(int) -> isAudioFileType
    boolean isVideoFileType(int) -> isVideoFileType
    io.vov.vitamio.MediaFile$MediaFileType getFileType(java.lang.String) -> getFileType
    int getFileTypeForMimeType(java.lang.String) -> getFileTypeForMimeType
io.vov.vitamio.MediaFile$MediaFileType -> io.vov.vitamio.MediaFile$MediaFileType:
    int fileType -> fileType
    java.lang.String mimeType -> mimeType
io.vov.vitamio.MediaFormat -> io.vov.vitamio.MediaFormat:
    java.util.Map mMap -> mMap
    java.lang.String KEY_MIME -> KEY_MIME
    java.lang.String KEY_LANGUAGE -> KEY_LANGUAGE
    java.lang.String KEY_TITLE -> KEY_TITLE
    java.lang.String KEY_PATH -> KEY_PATH
    java.lang.String KEY_SAMPLE_RATE -> KEY_SAMPLE_RATE
    java.lang.String KEY_CHANNEL_COUNT -> KEY_CHANNEL_COUNT
    java.lang.String KEY_WIDTH -> KEY_WIDTH
    java.lang.String KEY_HEIGHT -> KEY_HEIGHT
    java.lang.String KEY_MAX_WIDTH -> KEY_MAX_WIDTH
    java.lang.String KEY_MAX_HEIGHT -> KEY_MAX_HEIGHT
    java.lang.String KEY_MAX_INPUT_SIZE -> KEY_MAX_INPUT_SIZE
    java.lang.String KEY_BIT_RATE -> KEY_BIT_RATE
    java.lang.String KEY_COLOR_FORMAT -> KEY_COLOR_FORMAT
    java.lang.String KEY_FRAME_RATE -> KEY_FRAME_RATE
    java.lang.String KEY_I_FRAME_INTERVAL -> KEY_I_FRAME_INTERVAL
    java.lang.String KEY_STRIDE -> KEY_STRIDE
    java.lang.String KEY_SLICE_HEIGHT -> KEY_SLICE_HEIGHT
    java.lang.String KEY_REPEAT_PREVIOUS_FRAME_AFTER -> KEY_REPEAT_PREVIOUS_FRAME_AFTER
    java.lang.String KEY_PUSH_BLANK_BUFFERS_ON_STOP -> KEY_PUSH_BLANK_BUFFERS_ON_STOP
    java.lang.String KEY_DURATION -> KEY_DURATION
    java.lang.String KEY_IS_ADTS -> KEY_IS_ADTS
    java.lang.String KEY_CHANNEL_MASK -> KEY_CHANNEL_MASK
    java.lang.String KEY_AAC_PROFILE -> KEY_AAC_PROFILE
    java.lang.String KEY_FLAC_COMPRESSION_LEVEL -> KEY_FLAC_COMPRESSION_LEVEL
    java.lang.String KEY_IS_AUTOSELECT -> KEY_IS_AUTOSELECT
    java.lang.String KEY_IS_DEFAULT -> KEY_IS_DEFAULT
    java.lang.String KEY_IS_FORCED_SUBTITLE -> KEY_IS_FORCED_SUBTITLE
    java.util.Map getMap() -> getMap
    boolean containsKey(java.lang.String) -> containsKey
    int getInteger(java.lang.String) -> getInteger
    int getInteger(java.lang.String,int) -> getInteger
    long getLong(java.lang.String) -> getLong
    float getFloat(java.lang.String) -> getFloat
    java.lang.String getString(java.lang.String) -> getString
    java.nio.ByteBuffer getByteBuffer(java.lang.String) -> getByteBuffer
    void setInteger(java.lang.String,int) -> setInteger
    void setLong(java.lang.String,long) -> setLong
    void setFloat(java.lang.String,float) -> setFloat
    void setString(java.lang.String,java.lang.String) -> setString
    void setByteBuffer(java.lang.String,java.nio.ByteBuffer) -> setByteBuffer
    io.vov.vitamio.MediaFormat createAudioFormat(java.lang.String,int,int) -> createAudioFormat
    io.vov.vitamio.MediaFormat createSubtitleFormat(java.lang.String,java.lang.String) -> createSubtitleFormat
    io.vov.vitamio.MediaFormat createVideoFormat(java.lang.String,int,int) -> createVideoFormat
    java.lang.String toString() -> toString
io.vov.vitamio.MediaMetadataRetriever -> io.vov.vitamio.MediaMetadataRetriever:
    android.content.res.AssetFileDescriptor mFD -> mFD
    int mNativeContext -> mNativeContext
    java.lang.String METADATA_KEY_ALBUM -> METADATA_KEY_ALBUM
    java.lang.String METADATA_KEY_ALBUM_ARTIST -> METADATA_KEY_ALBUM_ARTIST
    java.lang.String METADATA_KEY_ARTIST -> METADATA_KEY_ARTIST
    java.lang.String METADATA_KEY_COMMENT -> METADATA_KEY_COMMENT
    java.lang.String METADATA_KEY_AUTHOR -> METADATA_KEY_AUTHOR
    java.lang.String METADATA_KEY_COMPOSER -> METADATA_KEY_COMPOSER
    java.lang.String METADATA_KEY_COPYRIGHT -> METADATA_KEY_COPYRIGHT
    java.lang.String METADATA_KEY_CREATION_TIME -> METADATA_KEY_CREATION_TIME
    java.lang.String METADATA_KEY_DATE -> METADATA_KEY_DATE
    java.lang.String METADATA_KEY_DISC -> METADATA_KEY_DISC
    java.lang.String METADATA_KEY_ENCODER -> METADATA_KEY_ENCODER
    java.lang.String METADATA_KEY_ENCODED_BY -> METADATA_KEY_ENCODED_BY
    java.lang.String METADATA_KEY_FILENAME -> METADATA_KEY_FILENAME
    java.lang.String METADATA_KEY_GENRE -> METADATA_KEY_GENRE
    java.lang.String METADATA_KEY_LANGUAGE -> METADATA_KEY_LANGUAGE
    java.lang.String METADATA_KEY_PERFORMER -> METADATA_KEY_PERFORMER
    java.lang.String METADATA_KEY_PUBLISHER -> METADATA_KEY_PUBLISHER
    java.lang.String METADATA_KEY_SERVICE_NAME -> METADATA_KEY_SERVICE_NAME
    java.lang.String METADATA_KEY_SERVICE_PROVIDER -> METADATA_KEY_SERVICE_PROVIDER
    java.lang.String METADATA_KEY_TITLE -> METADATA_KEY_TITLE
    java.lang.String METADATA_KEY_TRACK -> METADATA_KEY_TRACK
    java.lang.String METADATA_KEY_VARIANT_BITRATE -> METADATA_KEY_VARIANT_BITRATE
    java.lang.String METADATA_KEY_DURATION -> METADATA_KEY_DURATION
    java.lang.String METADATA_KEY_AUDIO_CODEC -> METADATA_KEY_AUDIO_CODEC
    java.lang.String METADATA_KEY_VIDEO_CODEC -> METADATA_KEY_VIDEO_CODEC
    java.lang.String METADATA_KEY_VIDEO_ROTATION -> METADATA_KEY_VIDEO_ROTATION
    java.lang.String METADATA_KEY_VIDEO_WIDTH -> METADATA_KEY_VIDEO_WIDTH
    java.lang.String METADATA_KEY_VIDEO_HEIGHT -> METADATA_KEY_VIDEO_HEIGHT
    java.lang.String METADATA_KEY_NUM_TRACKS -> METADATA_KEY_NUM_TRACKS
    java.lang.String METADATA_KEY_HAS_AUDIO -> METADATA_KEY_HAS_AUDIO
    java.lang.String METADATA_KEY_HAS_VIDEO -> METADATA_KEY_HAS_VIDEO
    boolean loadFFmpeg_native(java.lang.String) -> loadFFmpeg_native
    void setDataSource(android.content.Context,android.net.Uri) -> setDataSource
    void setDataSource(java.lang.String) -> setDataSource
    void setDataSource(java.io.FileDescriptor) -> setDataSource
    java.lang.String extractMetadata(java.lang.String) -> extractMetadata
    android.graphics.Bitmap getFrameAtTime(long) -> getFrameAtTime
    byte[] getEmbeddedPicture() -> getEmbeddedPicture
    void _release() -> _release
    void native_setup() -> native_setup
    void native_init() -> native_init
    void native_finalize() -> native_finalize
    void release() -> release
    void finalize() -> finalize
    void closeFD() -> closeFD
io.vov.vitamio.MediaPlayer -> io.vov.vitamio.MediaPlayer:
    int CACHE_TYPE_NOT_AVAILABLE -> CACHE_TYPE_NOT_AVAILABLE
    int CACHE_TYPE_START -> CACHE_TYPE_START
    int CACHE_TYPE_UPDATE -> CACHE_TYPE_UPDATE
    int CACHE_TYPE_SPEED -> CACHE_TYPE_SPEED
    int CACHE_TYPE_COMPLETE -> CACHE_TYPE_COMPLETE
    int CACHE_INFO_NO_SPACE -> CACHE_INFO_NO_SPACE
    int CACHE_INFO_STREAM_NOT_SUPPORT -> CACHE_INFO_STREAM_NOT_SUPPORT
    int MEDIA_ERROR_UNKNOWN -> MEDIA_ERROR_UNKNOWN
    int MEDIA_ERROR_NOT_VALID_FOR_PROGRESSIVE_PLAYBACK -> MEDIA_ERROR_NOT_VALID_FOR_PROGRESSIVE_PLAYBACK
    int MEDIA_ERROR_IO -> MEDIA_ERROR_IO
    int MEDIA_ERROR_MALFORMED -> MEDIA_ERROR_MALFORMED
    int MEDIA_ERROR_UNSUPPORTED -> MEDIA_ERROR_UNSUPPORTED
    int MEDIA_ERROR_TIMED_OUT -> MEDIA_ERROR_TIMED_OUT
    int MEDIA_INFO_VIDEO_TRACK_LAGGING -> MEDIA_INFO_VIDEO_TRACK_LAGGING
    int MEDIA_INFO_BUFFERING_START -> MEDIA_INFO_BUFFERING_START
    int MEDIA_INFO_BUFFERING_END -> MEDIA_INFO_BUFFERING_END
    int MEDIA_INFO_NOT_SEEKABLE -> MEDIA_INFO_NOT_SEEKABLE
    int MEDIA_INFO_DOWNLOAD_RATE_CHANGED -> MEDIA_INFO_DOWNLOAD_RATE_CHANGED
    int VIDEOQUALITY_LOW -> VIDEOQUALITY_LOW
    int VIDEOQUALITY_MEDIUM -> VIDEOQUALITY_MEDIUM
    int VIDEOQUALITY_HIGH -> VIDEOQUALITY_HIGH
    int VIDEOCHROMA_RGB565 -> VIDEOCHROMA_RGB565
    int VIDEOCHROMA_RGBA -> VIDEOCHROMA_RGBA
    int SUBTITLE_INTERNAL -> SUBTITLE_INTERNAL
    int SUBTITLE_EXTERNAL -> SUBTITLE_EXTERNAL
    java.lang.String[] SUB_TYPES -> SUB_TYPES
    int MEDIA_NOP -> MEDIA_NOP
    int MEDIA_PREPARED -> MEDIA_PREPARED
    int MEDIA_PLAYBACK_COMPLETE -> MEDIA_PLAYBACK_COMPLETE
    int MEDIA_BUFFERING_UPDATE -> MEDIA_BUFFERING_UPDATE
    int MEDIA_SEEK_COMPLETE -> MEDIA_SEEK_COMPLETE
    int MEDIA_SET_VIDEO_SIZE -> MEDIA_SET_VIDEO_SIZE
    int MEDIA_ERROR -> MEDIA_ERROR
    int MEDIA_INFO -> MEDIA_INFO
    int MEDIA_CACHE -> MEDIA_CACHE
    int MEDIA_HW_ERROR -> MEDIA_HW_ERROR
    int MEDIA_TIMED_TEXT -> MEDIA_TIMED_TEXT
    int MEDIA_CACHING_UPDATE -> MEDIA_CACHING_UPDATE
    java.lang.String MEDIA_CACHING_SEGMENTS -> MEDIA_CACHING_SEGMENTS
    java.lang.String MEDIA_CACHING_TYPE -> MEDIA_CACHING_TYPE
    java.lang.String MEDIA_CACHING_INFO -> MEDIA_CACHING_INFO
    java.lang.String MEDIA_SUBTITLE_STRING -> MEDIA_SUBTITLE_STRING
    java.lang.String MEDIA_SUBTITLE_BYTES -> MEDIA_SUBTITLE_BYTES
    java.lang.String MEDIA_SUBTITLE_TYPE -> MEDIA_SUBTITLE_TYPE
    int SUBTITLE_TEXT -> SUBTITLE_TEXT
    int SUBTITLE_BITMAP -> SUBTITLE_BITMAP
    java.util.concurrent.atomic.AtomicBoolean NATIVE_OMX_LOADED -> NATIVE_OMX_LOADED
    android.content.Context mContext -> mContext
    android.view.Surface mSurface -> mSurface
    android.view.SurfaceHolder mSurfaceHolder -> mSurfaceHolder
    io.vov.vitamio.MediaPlayer$EventHandler mEventHandler -> mEventHandler
    android.os.PowerManager$WakeLock mWakeLock -> mWakeLock
    boolean mScreenOnWhilePlaying -> mScreenOnWhilePlaying
    boolean mStayAwake -> mStayAwake
    io.vov.vitamio.Metadata mMeta -> mMeta
    io.vov.vitamio.MediaPlayer$TrackInfo[] mInbandTracks -> mInbandTracks
    io.vov.vitamio.MediaPlayer$TrackInfo mOutOfBandTracks -> mOutOfBandTracks
    android.content.res.AssetFileDescriptor mFD -> mFD
    io.vov.vitamio.MediaPlayer$OnHWRenderFailedListener mOnHWRenderFailedListener -> mOnHWRenderFailedListener
    io.vov.vitamio.MediaPlayer$OnPreparedListener mOnPreparedListener -> mOnPreparedListener
    io.vov.vitamio.MediaPlayer$OnCompletionListener mOnCompletionListener -> mOnCompletionListener
    io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener mOnBufferingUpdateListener -> mOnBufferingUpdateListener
    io.vov.vitamio.MediaPlayer$OnCachingUpdateListener mOnCachingUpdateListener -> mOnCachingUpdateListener
    io.vov.vitamio.MediaPlayer$OnSeekCompleteListener mOnSeekCompleteListener -> mOnSeekCompleteListener
    io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener mOnVideoSizeChangedListener -> mOnVideoSizeChangedListener
    io.vov.vitamio.MediaPlayer$OnErrorListener mOnErrorListener -> mOnErrorListener
    io.vov.vitamio.MediaPlayer$OnInfoListener mOnInfoListener -> mOnInfoListener
    io.vov.vitamio.MediaPlayer$OnTimedTextListener mOnTimedTextListener -> mOnTimedTextListener
    android.media.AudioTrack mAudioTrack -> mAudioTrack
    int mAudioTrackBufferSize -> mAudioTrackBufferSize
    android.view.Surface mLocalSurface -> mLocalSurface
    android.graphics.Bitmap mBitmap -> mBitmap
    java.nio.ByteBuffer mByteBuffer -> mByteBuffer
    void postEventFromNative(java.lang.Object,int,int,int,java.lang.Object) -> postEventFromNative
    boolean loadVAO_native(java.lang.String) -> loadVAO_native
    boolean loadVVO_native(java.lang.String) -> loadVVO_native
    boolean loadOMX_native(java.lang.String) -> loadOMX_native
    void unloadOMX_native() -> unloadOMX_native
    boolean loadFFmpeg_native(java.lang.String) -> loadFFmpeg_native
    void _setVideoSurface(android.view.Surface) -> _setVideoSurface
    void setDisplay(android.view.SurfaceHolder) -> setDisplay
    void setSurface(android.view.Surface) -> setSurface
    void setDataSource(java.lang.String) -> setDataSource
    void setDataSource(android.content.Context,android.net.Uri) -> setDataSource
    void setDataSource(android.content.Context,android.net.Uri,java.util.Map) -> setDataSource
    void setDataSource(java.lang.String,java.util.Map) -> setDataSource
    void setDataSource(java.lang.String,java.lang.String[],java.lang.String[]) -> setDataSource
    void setDataSegments(java.lang.String[],java.lang.String) -> setDataSegments
    void setOnHWRenderFailedListener(io.vov.vitamio.MediaPlayer$OnHWRenderFailedListener) -> setOnHWRenderFailedListener
    void _setDataSource(java.lang.String,java.lang.String[],java.lang.String[]) -> _setDataSource
    void setDataSource(java.io.FileDescriptor) -> setDataSource
    void _setDataSegmentsSource(java.lang.String[],java.lang.String) -> _setDataSegmentsSource
    void prepare() -> prepare
    void prepareAsync() -> prepareAsync
    void start() -> start
    void _start() -> _start
    void stop() -> stop
    void _stop() -> _stop
    void pause() -> pause
    void _pause() -> _pause
    void setWakeMode(android.content.Context,int) -> setWakeMode
    void setScreenOnWhilePlaying(boolean) -> setScreenOnWhilePlaying
    void stayAwake(boolean) -> stayAwake
    void updateSurfaceScreenOn() -> updateSurfaceScreenOn
    int getVideoWidth() -> getVideoWidth
    int getVideoWidth_a() -> getVideoWidth_a
    int getVideoHeight() -> getVideoHeight
    int getVideoHeight_a() -> getVideoHeight_a
    boolean isPlaying() -> isPlaying
    void setUseCache(boolean) -> setUseCache
    void setCacheDirectory(java.lang.String) -> setCacheDirectory
    void setAdaptiveStream(boolean) -> setAdaptiveStream
    void seekTo(long) -> seekTo
    long getCurrentPosition() -> getCurrentPosition
    android.graphics.Bitmap getCurrentFrame() -> getCurrentFrame
    long getDuration() -> getDuration
    io.vov.vitamio.Metadata getMetadata() -> getMetadata
    void release() -> release
    void _release() -> _release
    void reset() -> reset
    void _reset() -> _reset
    void closeFD() -> closeFD
    void setLooping(boolean) -> setLooping
    boolean isLooping() -> isLooping
    void setAudioAmplify(float) -> setAudioAmplify
    void setVolume(float,float) -> setVolume
    boolean native_getTrackInfo(android.util.SparseArray) -> native_getTrackInfo
    boolean native_getMetadata(java.util.Map) -> native_getMetadata
    void native_init() -> native_init
    void native_finalize() -> native_finalize
    io.vov.vitamio.MediaPlayer$TrackInfo[] getTrackInfo(java.lang.String) -> getTrackInfo
    io.vov.vitamio.MediaPlayer$TrackInfo[] getInbandTrackInfo(java.lang.String) -> getInbandTrackInfo
    io.vov.vitamio.MediaPlayer$TrackInfo[] getTrackInfo() -> getTrackInfo
    android.util.SparseArray parseTrackInfo(byte[],java.lang.String) -> parseTrackInfo
    android.util.SparseArray findTrackFromTrackInfo(int,io.vov.vitamio.MediaPlayer$TrackInfo[]) -> findTrackFromTrackInfo
    void addTimedTextSource(java.lang.String) -> addTimedTextSource
    void selectTrack(int) -> selectTrack
    void deselectTrack(int) -> deselectTrack
    void selectOrDeselectBandTrack(int,boolean) -> selectOrDeselectBandTrack
    void selectOrDeselectTrack(int,boolean) -> selectOrDeselectTrack
    void finalize() -> finalize
    void setOnPreparedListener(io.vov.vitamio.MediaPlayer$OnPreparedListener) -> setOnPreparedListener
    void setOnCompletionListener(io.vov.vitamio.MediaPlayer$OnCompletionListener) -> setOnCompletionListener
    void setOnBufferingUpdateListener(io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener) -> setOnBufferingUpdateListener
    void setOnCachingUpdateListener(io.vov.vitamio.MediaPlayer$OnCachingUpdateListener) -> setOnCachingUpdateListener
    void updateCacheStatus(int,int,long[]) -> updateCacheStatus
    void setOnSeekCompleteListener(io.vov.vitamio.MediaPlayer$OnSeekCompleteListener) -> setOnSeekCompleteListener
    void setOnVideoSizeChangedListener(io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener) -> setOnVideoSizeChangedListener
    void setOnErrorListener(io.vov.vitamio.MediaPlayer$OnErrorListener) -> setOnErrorListener
    void setOnInfoListener(io.vov.vitamio.MediaPlayer$OnInfoListener) -> setOnInfoListener
    void setOnTimedTextListener(io.vov.vitamio.MediaPlayer$OnTimedTextListener) -> setOnTimedTextListener
    void updateSub(int,byte[],java.lang.String,int,int) -> updateSub
    void _releaseVideoSurface() -> _releaseVideoSurface
    void releaseDisplay() -> releaseDisplay
    float getVideoAspectRatio() -> getVideoAspectRatio
    void setVideoQuality(int) -> setVideoQuality
    void setVideoChroma(int) -> setVideoChroma
    void setDeinterlace(boolean) -> setDeinterlace
    void setBufferSize(long) -> setBufferSize
    void setPlaybackSpeed(float) -> setPlaybackSpeed
    boolean isBuffering() -> isBuffering
    int getBufferProgress() -> getBufferProgress
    java.lang.String getMetaEncoding() -> getMetaEncoding
    void setMetaEncoding(java.lang.String) -> setMetaEncoding
    int getAudioTrack() -> getAudioTrack
    int getVideoTrack() -> getVideoTrack
    void setTimedTextShown(boolean) -> setTimedTextShown
    void setTimedTextEncoding(java.lang.String) -> setTimedTextEncoding
    int getTimedTextLocation() -> getTimedTextLocation
    java.lang.String getTimedTextPath() -> getTimedTextPath
    int getTimedTextTrack() -> getTimedTextTrack
    int audioTrackInit(int,int) -> audioTrackInit
    void audioTrackSetVolume(float,float) -> audioTrackSetVolume
    void audioTrackWrite(byte[],int,int) -> audioTrackWrite
    void audioTrackStart() -> audioTrackStart
    void audioTrackPause() -> audioTrackPause
    void audioTrackRelease() -> audioTrackRelease
    java.nio.ByteBuffer surfaceInit() -> surfaceInit
    void surfaceRender() -> surfaceRender
    void surfaceRelease() -> surfaceRelease
    io.vov.vitamio.MediaPlayer$OnPreparedListener access$0(io.vov.vitamio.MediaPlayer) -> access$0
    io.vov.vitamio.MediaPlayer$OnCompletionListener access$1(io.vov.vitamio.MediaPlayer) -> access$1
    void access$2(io.vov.vitamio.MediaPlayer,boolean) -> access$2
    io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener access$3(io.vov.vitamio.MediaPlayer) -> access$3
    io.vov.vitamio.MediaPlayer$OnSeekCompleteListener access$4(io.vov.vitamio.MediaPlayer) -> access$4
    io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener access$5(io.vov.vitamio.MediaPlayer) -> access$5
    io.vov.vitamio.MediaPlayer$OnErrorListener access$6(io.vov.vitamio.MediaPlayer) -> access$6
    io.vov.vitamio.MediaPlayer$OnInfoListener access$7(io.vov.vitamio.MediaPlayer) -> access$7
    io.vov.vitamio.MediaPlayer$OnTimedTextListener access$8(io.vov.vitamio.MediaPlayer) -> access$8
    io.vov.vitamio.MediaPlayer$OnCachingUpdateListener access$9(io.vov.vitamio.MediaPlayer) -> access$9
    io.vov.vitamio.MediaPlayer$OnHWRenderFailedListener access$10(io.vov.vitamio.MediaPlayer) -> access$10
io.vov.vitamio.MediaPlayer$EventHandler -> io.vov.vitamio.MediaPlayer$EventHandler:
    io.vov.vitamio.MediaPlayer mMediaPlayer -> mMediaPlayer
    android.os.Bundle mData -> mData
    io.vov.vitamio.MediaPlayer this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener -> io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener:
    void onBufferingUpdate(io.vov.vitamio.MediaPlayer,int) -> onBufferingUpdate
io.vov.vitamio.MediaPlayer$OnCachingUpdateListener -> io.vov.vitamio.MediaPlayer$OnCachingUpdateListener:
    void onCachingUpdate(io.vov.vitamio.MediaPlayer,long[]) -> onCachingUpdate
    void onCachingSpeed(io.vov.vitamio.MediaPlayer,int) -> onCachingSpeed
    void onCachingStart(io.vov.vitamio.MediaPlayer) -> onCachingStart
    void onCachingComplete(io.vov.vitamio.MediaPlayer) -> onCachingComplete
    void onCachingNotAvailable(io.vov.vitamio.MediaPlayer,int) -> onCachingNotAvailable
io.vov.vitamio.MediaPlayer$OnCompletionListener -> io.vov.vitamio.MediaPlayer$OnCompletionListener:
    void onCompletion(io.vov.vitamio.MediaPlayer) -> onCompletion
io.vov.vitamio.MediaPlayer$OnErrorListener -> io.vov.vitamio.MediaPlayer$OnErrorListener:
    boolean onError(io.vov.vitamio.MediaPlayer,int,int) -> onError
io.vov.vitamio.MediaPlayer$OnHWRenderFailedListener -> io.vov.vitamio.MediaPlayer$OnHWRenderFailedListener:
    void onFailed() -> onFailed
io.vov.vitamio.MediaPlayer$OnInfoListener -> io.vov.vitamio.MediaPlayer$OnInfoListener:
    boolean onInfo(io.vov.vitamio.MediaPlayer,int,int) -> onInfo
io.vov.vitamio.MediaPlayer$OnPreparedListener -> io.vov.vitamio.MediaPlayer$OnPreparedListener:
    void onPrepared(io.vov.vitamio.MediaPlayer) -> onPrepared
io.vov.vitamio.MediaPlayer$OnSeekCompleteListener -> io.vov.vitamio.MediaPlayer$OnSeekCompleteListener:
    void onSeekComplete(io.vov.vitamio.MediaPlayer) -> onSeekComplete
io.vov.vitamio.MediaPlayer$OnTimedTextListener -> io.vov.vitamio.MediaPlayer$OnTimedTextListener:
    void onTimedText(java.lang.String) -> onTimedText
    void onTimedTextUpdate(byte[],int,int) -> onTimedTextUpdate
io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener -> io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener:
    void onVideoSizeChanged(io.vov.vitamio.MediaPlayer,int,int) -> onVideoSizeChanged
io.vov.vitamio.MediaPlayer$TrackInfo -> io.vov.vitamio.MediaPlayer$TrackInfo:
    int MEDIA_TRACK_TYPE_UNKNOWN -> MEDIA_TRACK_TYPE_UNKNOWN
    int MEDIA_TRACK_TYPE_VIDEO -> MEDIA_TRACK_TYPE_VIDEO
    int MEDIA_TRACK_TYPE_AUDIO -> MEDIA_TRACK_TYPE_AUDIO
    int MEDIA_TRACK_TYPE_TIMEDTEXT -> MEDIA_TRACK_TYPE_TIMEDTEXT
    int MEDIA_TRACK_TYPE_SUBTITLE -> MEDIA_TRACK_TYPE_SUBTITLE
    int mTrackType -> mTrackType
    android.util.SparseArray mTrackInfoArray -> mTrackInfoArray
    int getTrackType() -> getTrackType
    android.util.SparseArray getTrackInfoArray() -> getTrackInfoArray
io.vov.vitamio.MediaScanner -> io.vov.vitamio.MediaScanner:
    java.lang.String[] VIDEO_PROJECTION -> VIDEO_PROJECTION
    int ID_VIDEO_COLUMN_INDEX -> ID_VIDEO_COLUMN_INDEX
    int PATH_VIDEO_COLUMN_INDEX -> PATH_VIDEO_COLUMN_INDEX
    int DATE_MODIFIED_VIDEO_COLUMN_INDEX -> DATE_MODIFIED_VIDEO_COLUMN_INDEX
    android.content.Context mContext -> mContext
    android.content.ContentProviderClient mProvider -> mProvider
    boolean mCaseInsensitivePaths -> mCaseInsensitivePaths
    java.util.HashMap mFileCache -> mFileCache
    io.vov.vitamio.MediaScanner$MyMediaScannerClient mClient -> mClient
    boolean loadFFmpeg_native(java.lang.String) -> loadFFmpeg_native
    void initialize() -> initialize
    void prescan(java.lang.String) -> prescan
    void postscan(java.lang.String[]) -> postscan
    boolean inScanDirectory(java.lang.String,java.lang.String[]) -> inScanDirectory
    void scanDirectories(java.lang.String[]) -> scanDirectories
    android.net.Uri scanSingleFile(java.lang.String,java.lang.String) -> scanSingleFile
    void processDirectory(java.lang.String,java.lang.String) -> processDirectory
    boolean processFile(java.lang.String,java.lang.String) -> processFile
    void native_init(io.vov.vitamio.MediaScannerClient) -> native_init
    void release() -> release
    void native_finalize() -> native_finalize
    void finalize() -> finalize
    boolean access$0(io.vov.vitamio.MediaScanner) -> access$0
    java.util.HashMap access$1(io.vov.vitamio.MediaScanner) -> access$1
    boolean access$2(io.vov.vitamio.MediaScanner,java.lang.String,java.lang.String) -> access$2
    android.content.ContentProviderClient access$3(io.vov.vitamio.MediaScanner) -> access$3
io.vov.vitamio.MediaScanner$FileCacheEntry -> io.vov.vitamio.MediaScanner$FileCacheEntry:
    android.net.Uri mTableUri -> mTableUri
    long mRowId -> mRowId
    java.lang.String mPath -> mPath
    long mLastModified -> mLastModified
    boolean mLastModifiedChanged -> mLastModifiedChanged
    boolean mSeenInFileSystem -> mSeenInFileSystem
    java.lang.String toString() -> toString
io.vov.vitamio.MediaScanner$MyMediaScannerClient -> io.vov.vitamio.MediaScanner$MyMediaScannerClient:
    java.lang.String mMimeType -> mMimeType
    int mFileType -> mFileType
    java.lang.String mPath -> mPath
    long mLastModified -> mLastModified
    long mFileSize -> mFileSize
    java.lang.String mTitle -> mTitle
    java.lang.String mArtist -> mArtist
    java.lang.String mAlbum -> mAlbum
    java.lang.String mLanguage -> mLanguage
    long mDuration -> mDuration
    int mWidth -> mWidth
    int mHeight -> mHeight
    io.vov.vitamio.MediaScanner this$0 -> this$0
    io.vov.vitamio.MediaScanner$FileCacheEntry beginFile(java.lang.String,long,long) -> beginFile
    void scanFile(java.lang.String,long,long) -> scanFile
    android.net.Uri doScanFile(java.lang.String,long,long,boolean) -> doScanFile
    int parseSubstring(java.lang.String,int,int) -> parseSubstring
    void handleStringTag(java.lang.String,byte[],java.lang.String) -> handleStringTag
    void setMimeType(java.lang.String) -> setMimeType
    android.content.ContentValues toValues() -> toValues
    android.net.Uri endFile(io.vov.vitamio.MediaScanner$FileCacheEntry) -> endFile
    void addNoMediaFolder(java.lang.String) -> addNoMediaFolder
io.vov.vitamio.MediaScannerClient -> io.vov.vitamio.MediaScannerClient:
    void scanFile(java.lang.String,long,long) -> scanFile
    void addNoMediaFolder(java.lang.String) -> addNoMediaFolder
    void handleStringTag(java.lang.String,byte[],java.lang.String) -> handleStringTag
    void setMimeType(java.lang.String) -> setMimeType
io.vov.vitamio.Metadata -> io.vov.vitamio.Metadata:
    int ANY -> ANY
    int TITLE -> TITLE
    int COMMENT -> COMMENT
    int COPYRIGHT -> COPYRIGHT
    int ALBUM -> ALBUM
    int ARTIST -> ARTIST
    int AUTHOR -> AUTHOR
    int COMPOSER -> COMPOSER
    int GENRE -> GENRE
    int DATE -> DATE
    int DURATION -> DURATION
    int CD_TRACK_NUM -> CD_TRACK_NUM
    int CD_TRACK_MAX -> CD_TRACK_MAX
    int RATING -> RATING
    int ALBUM_ART -> ALBUM_ART
    int VIDEO_FRAME -> VIDEO_FRAME
    int LENGTH -> LENGTH
    int BIT_RATE -> BIT_RATE
    int AUDIO_BIT_RATE -> AUDIO_BIT_RATE
    int VIDEO_BIT_RATE -> VIDEO_BIT_RATE
    int AUDIO_SAMPLE_RATE -> AUDIO_SAMPLE_RATE
    int VIDEO_FRAME_RATE -> VIDEO_FRAME_RATE
    int MIME_TYPE -> MIME_TYPE
    int AUDIO_CODEC -> AUDIO_CODEC
    int VIDEO_CODEC -> VIDEO_CODEC
    int VIDEO_HEIGHT -> VIDEO_HEIGHT
    int VIDEO_WIDTH -> VIDEO_WIDTH
    int NUM_TRACKS -> NUM_TRACKS
    int DRM_CRIPPLED -> DRM_CRIPPLED
    int PAUSE_AVAILABLE -> PAUSE_AVAILABLE
    int SEEK_BACKWARD_AVAILABLE -> SEEK_BACKWARD_AVAILABLE
    int SEEK_FORWARD_AVAILABLE -> SEEK_FORWARD_AVAILABLE
    int SEEK_AVAILABLE -> SEEK_AVAILABLE
    int LAST_SYSTEM -> LAST_SYSTEM
    int FIRST_CUSTOM -> FIRST_CUSTOM
    android.util.SparseArray mMeta -> mMeta
    java.lang.String mEncoding -> mEncoding
    boolean parse(java.util.Map,java.lang.String) -> parse
    boolean has(int) -> has
    java.lang.String getString(int) -> getString
    int getInt(int) -> getInt
    boolean getBoolean(int) -> getBoolean
    long getLong(int) -> getLong
    double getDouble(int) -> getDouble
    byte[] getByteArray(int) -> getByteArray
    boolean checkMetadataId(int) -> checkMetadataId
io.vov.vitamio.R -> io.vov.vitamio.R:
io.vov.vitamio.R$color -> io.vov.vitamio.R$color:
    int mediacontroller_bg -> mediacontroller_bg
    int mediacontroller_bg_pressed -> mediacontroller_bg_pressed
    int transparent -> transparent
io.vov.vitamio.R$drawable -> io.vov.vitamio.R$drawable:
    int ic_launcher -> ic_launcher
    int mediacontroller_button -> mediacontroller_button
    int mediacontroller_pause -> mediacontroller_pause
    int mediacontroller_play -> mediacontroller_play
    int scrubber_control_disabled_holo -> scrubber_control_disabled_holo
    int scrubber_control_focused_holo -> scrubber_control_focused_holo
    int scrubber_control_normal_holo -> scrubber_control_normal_holo
    int scrubber_control_pressed_holo -> scrubber_control_pressed_holo
    int scrubber_control_selector_holo -> scrubber_control_selector_holo
    int scrubber_primary_holo -> scrubber_primary_holo
    int scrubber_progress_horizontal_holo_dark -> scrubber_progress_horizontal_holo_dark
    int scrubber_secondary_holo -> scrubber_secondary_holo
    int scrubber_track_holo_dark -> scrubber_track_holo_dark
io.vov.vitamio.R$id -> io.vov.vitamio.R$id:
    int mediacontroller_file_name -> mediacontroller_file_name
    int mediacontroller_play_pause -> mediacontroller_play_pause
    int mediacontroller_seekbar -> mediacontroller_seekbar
    int mediacontroller_time_current -> mediacontroller_time_current
    int mediacontroller_time_total -> mediacontroller_time_total
io.vov.vitamio.R$layout -> io.vov.vitamio.R$layout:
    int mediacontroller -> mediacontroller
io.vov.vitamio.R$raw -> io.vov.vitamio.R$raw:
    int libarm -> libarm
io.vov.vitamio.R$string -> io.vov.vitamio.R$string:
    int VideoView_error_button -> VideoView_error_button
    int VideoView_error_text_invalid_progressive_playback -> VideoView_error_text_invalid_progressive_playback
    int VideoView_error_text_unknown -> VideoView_error_text_unknown
    int VideoView_error_title -> VideoView_error_title
    int mediacontroller_play_pause -> mediacontroller_play_pause
    int permission_group_tools_description -> permission_group_tools_description
    int permission_group_tools_label -> permission_group_tools_label
    int permission_receive_messages_description -> permission_receive_messages_description
    int permission_receive_messages_label -> permission_receive_messages_label
    int permission_write_providers_description -> permission_write_providers_description
    int permission_write_providers_label -> permission_write_providers_label
    int vitamio_init_decoders -> vitamio_init_decoders
    int vitamio_library_app_name -> vitamio_library_app_name
io.vov.vitamio.R$style -> io.vov.vitamio.R$style:
    int MediaController_SeekBar -> MediaController_SeekBar
    int MediaController_Text -> MediaController_Text
io.vov.vitamio.ThumbnailUtils -> io.vov.vitamio.ThumbnailUtils:
    int OPTIONS_NONE -> OPTIONS_NONE
    int OPTIONS_SCALE_UP -> OPTIONS_SCALE_UP
    int OPTIONS_RECYCLE_INPUT -> OPTIONS_RECYCLE_INPUT
    int TARGET_SIZE_MINI_THUMBNAIL_WIDTH -> TARGET_SIZE_MINI_THUMBNAIL_WIDTH
    int TARGET_SIZE_MINI_THUMBNAIL_HEIGHT -> TARGET_SIZE_MINI_THUMBNAIL_HEIGHT
    int TARGET_SIZE_MICRO_THUMBNAIL_WIDTH -> TARGET_SIZE_MICRO_THUMBNAIL_WIDTH
    int TARGET_SIZE_MICRO_THUMBNAIL_HEIGHT -> TARGET_SIZE_MICRO_THUMBNAIL_HEIGHT
    android.graphics.Bitmap createVideoThumbnail(android.content.Context,java.lang.String,int) -> createVideoThumbnail
    android.graphics.Bitmap extractThumbnail(android.graphics.Bitmap,int,int) -> extractThumbnail
    android.graphics.Bitmap extractThumbnail(android.graphics.Bitmap,int,int,int) -> extractThumbnail
    android.graphics.Bitmap transform(android.graphics.Matrix,android.graphics.Bitmap,int,int,int) -> transform
io.vov.vitamio.VIntent -> io.vov.vitamio.VIntent:
    java.lang.String ACTION_MEDIA_SCANNER_SCAN_DIRECTORY -> ACTION_MEDIA_SCANNER_SCAN_DIRECTORY
    java.lang.String ACTION_MEDIA_SCANNER_SCAN_FILE -> ACTION_MEDIA_SCANNER_SCAN_FILE
    java.lang.String ACTION_MEDIA_SCANNER_STARTED -> ACTION_MEDIA_SCANNER_STARTED
    java.lang.String ACTION_MEDIA_SCANNER_FINISHED -> ACTION_MEDIA_SCANNER_FINISHED
io.vov.vitamio.Vitamio -> io.vov.vitamio.Vitamio:
    java.lang.String[] LIBS_ARM_CODECS -> LIBS_ARM_CODECS
    java.lang.String[] LIBS_X86_CODECS -> LIBS_X86_CODECS
    java.lang.String[] LIBS_MIPS_CODECS -> LIBS_MIPS_CODECS
    java.lang.String[] LIBS_PLAYER -> LIBS_PLAYER
    java.lang.String[] LIBS_SCANNER -> LIBS_SCANNER
    java.lang.String[] LIBS_AV -> LIBS_AV
    java.lang.String LIBS_LOCK -> LIBS_LOCK
    int VITAMIO_NOT_SUPPORTED -> VITAMIO_NOT_SUPPORTED
    int VITAMIO_MIPS -> VITAMIO_MIPS
    int VITAMIO_X86 -> VITAMIO_X86
    int VITAMIO_ARMV6 -> VITAMIO_ARMV6
    int VITAMIO_ARMV6_VFP -> VITAMIO_ARMV6_VFP
    int VITAMIO_ARMV7_VFPV3 -> VITAMIO_ARMV7_VFPV3
    int VITAMIO_ARMV7_NEON -> VITAMIO_ARMV7_NEON
    int vitamioType -> vitamioType
    java.lang.String vitamioPackage -> vitamioPackage
    java.lang.String vitamioLibraryPath -> vitamioLibraryPath
    boolean initialize(android.content.Context) -> initialize
    boolean initialize(android.content.Context,int) -> initialize
    boolean isInitialized(android.content.Context) -> isInitialized
    java.lang.String getVitamioPackage() -> getVitamioPackage
    int getVitamioType() -> getVitamioType
    java.lang.String getLibraryPath() -> getLibraryPath
    java.util.List getRequiredLibs() -> getRequiredLibs
    boolean extractLibs(android.content.Context,int) -> extractLibs
    java.lang.String copyCompressedLib(android.content.Context,int,java.lang.String) -> copyCompressedLib
    boolean native_initializeLibs(java.lang.String,java.lang.String,java.lang.String) -> native_initializeLibs
io.vov.vitamio.VitamioLicense -> io.vov.vitamio.VitamioLicense:
    java.lang.String LICENSE -> LICENSE
io.vov.vitamio.activity.InitActivity -> io.vov.vitamio.activity.InitActivity:
    java.lang.String FROM_ME -> FROM_ME
    android.app.ProgressDialog mPD -> mPD
    io.vov.vitamio.activity.InitActivity$UIHandler uiHandler -> uiHandler
    void onCreate(android.os.Bundle) -> onCreate
    android.app.ProgressDialog access$0(io.vov.vitamio.activity.InitActivity) -> access$0
    void access$1(io.vov.vitamio.activity.InitActivity,android.app.ProgressDialog) -> access$1
    io.vov.vitamio.activity.InitActivity$UIHandler access$2(io.vov.vitamio.activity.InitActivity) -> access$2
io.vov.vitamio.activity.InitActivity$1 -> io.vov.vitamio.activity.InitActivity$1:
    io.vov.vitamio.activity.InitActivity this$0 -> this$0
    void onPreExecute() -> onPreExecute
    java.lang.Boolean doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Boolean) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
io.vov.vitamio.activity.InitActivity$UIHandler -> io.vov.vitamio.activity.InitActivity$UIHandler:
    java.lang.ref.WeakReference mContext -> mContext
    void handleMessage(android.os.Message) -> handleMessage
io.vov.vitamio.provider.MediaStore -> io.vov.vitamio.provider.MediaStore:
    java.lang.String AUTHORITY -> AUTHORITY
    java.lang.String MEDIA_SCANNER_VOLUME -> MEDIA_SCANNER_VOLUME
    java.lang.String CONTENT_AUTHORITY_SLASH -> CONTENT_AUTHORITY_SLASH
    android.net.Uri CONTENT_URI -> CONTENT_URI
    java.lang.String BASE_SQL_FIELDS -> BASE_SQL_FIELDS
    android.net.Uri getMediaScannerUri() -> getMediaScannerUri
    android.net.Uri getVolumeUri() -> getVolumeUri
io.vov.vitamio.provider.MediaStore$Audio -> io.vov.vitamio.provider.MediaStore$Audio:
io.vov.vitamio.provider.MediaStore$Audio$AudioColumns -> io.vov.vitamio.provider.MediaStore$Audio$AudioColumns:
    java.lang.String DURATION -> DURATION
    java.lang.String BOOKMARK -> BOOKMARK
    java.lang.String ARTIST -> ARTIST
    java.lang.String COMPOSER -> COMPOSER
    java.lang.String ALBUM -> ALBUM
    java.lang.String TRACK -> TRACK
    java.lang.String YEAR -> YEAR
io.vov.vitamio.provider.MediaStore$Audio$Media -> io.vov.vitamio.provider.MediaStore$Audio$Media:
    android.net.Uri CONTENT_URI -> CONTENT_URI
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
io.vov.vitamio.provider.MediaStore$InternalThumbnails -> io.vov.vitamio.provider.MediaStore$InternalThumbnails:
    int DEFAULT_GROUP_ID -> DEFAULT_GROUP_ID
    int MINI_KIND -> MINI_KIND
    int MICRO_KIND -> MICRO_KIND
    java.lang.String[] PROJECTION -> PROJECTION
    java.lang.Object sThumbBufLock -> sThumbBufLock
    byte[] sThumbBuf -> sThumbBuf
    android.graphics.Bitmap getMiniThumbFromFile(android.database.Cursor,android.net.Uri,android.content.ContentResolver,android.graphics.BitmapFactory$Options) -> getMiniThumbFromFile
    void cancelThumbnailRequest(android.content.ContentResolver,long,android.net.Uri,long) -> cancelThumbnailRequest
    java.lang.String getThumbnailPath(android.content.Context,android.content.ContentResolver,long,android.net.Uri) -> getThumbnailPath
    android.graphics.Bitmap getThumbnail(android.content.Context,android.content.ContentResolver,long,long,int,android.graphics.BitmapFactory$Options,android.net.Uri) -> getThumbnail
io.vov.vitamio.provider.MediaStore$MediaColumns -> io.vov.vitamio.provider.MediaStore$MediaColumns:
    java.lang.String DATA -> DATA
    java.lang.String DIRECTORY -> DIRECTORY
    java.lang.String DIRECTORY_NAME -> DIRECTORY_NAME
    java.lang.String SIZE -> SIZE
    java.lang.String DISPLAY_NAME -> DISPLAY_NAME
    java.lang.String TITLE -> TITLE
    java.lang.String TITLE_KEY -> TITLE_KEY
    java.lang.String DATE_ADDED -> DATE_ADDED
    java.lang.String DATE_MODIFIED -> DATE_MODIFIED
    java.lang.String MIME_TYPE -> MIME_TYPE
    java.lang.String AVAILABLE_SIZE -> AVAILABLE_SIZE
    java.lang.String PLAY_STATUS -> PLAY_STATUS
io.vov.vitamio.provider.MediaStore$Video -> io.vov.vitamio.provider.MediaStore$Video:
io.vov.vitamio.provider.MediaStore$Video$Media -> io.vov.vitamio.provider.MediaStore$Video$Media:
    android.net.Uri CONTENT_URI -> CONTENT_URI
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String SQL_FIELDS -> SQL_FIELDS
    java.lang.String SQL_TRIGGER_VIDEO_CLEANUP -> SQL_TRIGGER_VIDEO_CLEANUP
    java.lang.String SQL_TRIGGER_VIDEO_UPDATE -> SQL_TRIGGER_VIDEO_UPDATE
io.vov.vitamio.provider.MediaStore$Video$Thumbnails -> io.vov.vitamio.provider.MediaStore$Video$Thumbnails:
    int MINI_KIND -> MINI_KIND
    int MICRO_KIND -> MICRO_KIND
    android.net.Uri CONTENT_URI -> CONTENT_URI
    java.lang.String THUMBNAILS_DIRECTORY -> THUMBNAILS_DIRECTORY
    java.lang.String DATA -> DATA
    java.lang.String VIDEO_ID -> VIDEO_ID
    java.lang.String KIND -> KIND
    java.lang.String WIDTH -> WIDTH
    java.lang.String HEIGHT -> HEIGHT
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String SQL_FIELDS -> SQL_FIELDS
    java.lang.String SQL_INDEX_VIDEO_ID -> SQL_INDEX_VIDEO_ID
    java.lang.String SQL_TRIGGER_VIDEO_THUMBNAILS_CLEANUP -> SQL_TRIGGER_VIDEO_THUMBNAILS_CLEANUP
    void cancelThumbnailRequest(android.content.ContentResolver,long) -> cancelThumbnailRequest
    android.graphics.Bitmap getThumbnail(android.content.Context,android.content.ContentResolver,long,int,android.graphics.BitmapFactory$Options) -> getThumbnail
    android.graphics.Bitmap getThumbnail(android.content.Context,android.content.ContentResolver,long,long,int,android.graphics.BitmapFactory$Options) -> getThumbnail
    java.lang.String getThumbnailPath(android.content.Context,android.content.ContentResolver,long) -> getThumbnailPath
    void cancelThumbnailRequest(android.content.ContentResolver,long,long) -> cancelThumbnailRequest
io.vov.vitamio.provider.MediaStore$Video$VideoColumns -> io.vov.vitamio.provider.MediaStore$Video$VideoColumns:
    java.lang.String DURATION -> DURATION
    java.lang.String ARTIST -> ARTIST
    java.lang.String ALBUM -> ALBUM
    java.lang.String WIDTH -> WIDTH
    java.lang.String HEIGHT -> HEIGHT
    java.lang.String DESCRIPTION -> DESCRIPTION
    java.lang.String LANGUAGE -> LANGUAGE
    java.lang.String LATITUDE -> LATITUDE
    java.lang.String LONGITUDE -> LONGITUDE
    java.lang.String DATE_TAKEN -> DATE_TAKEN
    java.lang.String BOOKMARK -> BOOKMARK
    java.lang.String MINI_THUMB_MAGIC -> MINI_THUMB_MAGIC
    java.lang.String HIDDEN -> HIDDEN
    java.lang.String SUBTRACK -> SUBTRACK
    java.lang.String AUDIO_TRACK -> AUDIO_TRACK
io.vov.vitamio.provider.MiniThumbFile -> io.vov.vitamio.provider.MiniThumbFile:
    int BYTES_PER_MINTHUMB -> BYTES_PER_MINTHUMB
    int MINI_THUMB_DATA_FILE_VERSION -> MINI_THUMB_DATA_FILE_VERSION
    int HEADER_SIZE -> HEADER_SIZE
    java.util.Hashtable sThumbFiles -> sThumbFiles
    android.net.Uri mUri -> mUri
    java.io.RandomAccessFile mMiniThumbFile -> mMiniThumbFile
    java.nio.channels.FileChannel mChannel -> mChannel
    java.nio.ByteBuffer mBuffer -> mBuffer
    void reset() -> reset
    io.vov.vitamio.provider.MiniThumbFile instance(android.net.Uri) -> instance
    java.lang.String randomAccessFilePath(int) -> randomAccessFilePath
    void removeOldFile() -> removeOldFile
    java.io.RandomAccessFile miniThumbDataFile() -> miniThumbDataFile
    void deactivate() -> deactivate
    long getMagic(long) -> getMagic
    void saveMiniThumbToFile(byte[],long,long) -> saveMiniThumbToFile
    byte[] getMiniThumbFromFile(long,byte[]) -> getMiniThumbFromFile
io.vov.vitamio.utils.Base64 -> io.vov.vitamio.utils.Base64:
    int DEFAULT -> DEFAULT
    int NO_PADDING -> NO_PADDING
    int NO_WRAP -> NO_WRAP
    int CRLF -> CRLF
    int URL_SAFE -> URL_SAFE
    int NO_CLOSE -> NO_CLOSE
    boolean $assertionsDisabled -> $assertionsDisabled
    byte[] decode(java.lang.String,int) -> decode
    byte[] decode(byte[],int) -> decode
    byte[] decode(byte[],int,int,int) -> decode
    java.lang.String encodeToString(byte[],int) -> encodeToString
    java.lang.String encodeToString(byte[],int,int,int) -> encodeToString
    byte[] encode(byte[],int) -> encode
    byte[] encode(byte[],int,int,int) -> encode
io.vov.vitamio.utils.Base64$Coder -> io.vov.vitamio.utils.Base64$Coder:
    byte[] output -> output
    int op -> op
    boolean process(byte[],int,int,boolean) -> process
    int maxOutputSize(int) -> maxOutputSize
io.vov.vitamio.utils.Base64$Decoder -> io.vov.vitamio.utils.Base64$Decoder:
    int[] DECODE -> DECODE
    int[] DECODE_WEBSAFE -> DECODE_WEBSAFE
    int SKIP -> SKIP
    int EQUALS -> EQUALS
    int state -> state
    int value -> value
    int[] alphabet -> alphabet
    int maxOutputSize(int) -> maxOutputSize
    boolean process(byte[],int,int,boolean) -> process
io.vov.vitamio.utils.Base64$Encoder -> io.vov.vitamio.utils.Base64$Encoder:
    int LINE_GROUPS -> LINE_GROUPS
    byte[] ENCODE -> ENCODE
    byte[] ENCODE_WEBSAFE -> ENCODE_WEBSAFE
    byte[] tail -> tail
    int tailLen -> tailLen
    int count -> count
    boolean do_padding -> do_padding
    boolean do_newline -> do_newline
    boolean do_cr -> do_cr
    byte[] alphabet -> alphabet
    boolean $assertionsDisabled -> $assertionsDisabled
    int maxOutputSize(int) -> maxOutputSize
    boolean process(byte[],int,int,boolean) -> process
io.vov.vitamio.utils.CPU -> io.vov.vitamio.utils.CPU:
    java.util.Map cpuinfo -> cpuinfo
    int cachedFeature -> cachedFeature
    java.lang.String cachedFeatureString -> cachedFeatureString
    int FEATURE_ARM_V5TE -> FEATURE_ARM_V5TE
    int FEATURE_ARM_V6 -> FEATURE_ARM_V6
    int FEATURE_ARM_VFP -> FEATURE_ARM_VFP
    int FEATURE_ARM_V7A -> FEATURE_ARM_V7A
    int FEATURE_ARM_VFPV3 -> FEATURE_ARM_VFPV3
    int FEATURE_ARM_NEON -> FEATURE_ARM_NEON
    int FEATURE_X86 -> FEATURE_X86
    int FEATURE_MIPS -> FEATURE_MIPS
    java.lang.String getFeatureString() -> getFeatureString
    int getFeature() -> getFeature
    int getCachedFeature() -> getCachedFeature
    boolean isDroidXDroid2() -> isDroidXDroid2
io.vov.vitamio.utils.ContextUtils -> io.vov.vitamio.utils.ContextUtils:
    int getVersionCode(android.content.Context) -> getVersionCode
    java.lang.String getDataDir(android.content.Context) -> getDataDir
    java.lang.String fixLastSlash(java.lang.String) -> fixLastSlash
io.vov.vitamio.utils.Crypto -> io.vov.vitamio.utils.Crypto:
    javax.crypto.Cipher ecipher -> ecipher
    void setupCrypto(javax.crypto.SecretKey) -> setupCrypto
    java.lang.String encrypt(java.lang.String) -> encrypt
    java.lang.String md5(java.lang.String) -> md5
    byte[] generateKey(java.lang.String) -> generateKey
    java.security.PublicKey readKeyFromStream(java.io.InputStream) -> readKeyFromStream
    java.lang.String rsaEncrypt(java.io.InputStream,java.lang.String) -> rsaEncrypt
    java.lang.String rsaEncrypt(java.io.InputStream,byte[]) -> rsaEncrypt
io.vov.vitamio.utils.Device -> io.vov.vitamio.utils.Device:
    java.lang.String getLocale() -> getLocale
    java.lang.String getDeviceFeatures(android.content.Context) -> getDeviceFeatures
    java.lang.String getIdentifiers(android.content.Context) -> getIdentifiers
    java.lang.String getSystemFeatures() -> getSystemFeatures
    java.lang.String getScreenFeatures(android.content.Context) -> getScreenFeatures
    java.lang.String getPair(java.lang.String,java.lang.String) -> getPair
io.vov.vitamio.utils.FileUtils -> io.vov.vitamio.utils.FileUtils:
    java.lang.String FILE_NAME_RESERVED -> FILE_NAME_RESERVED
    java.lang.String getUniqueFileName(java.lang.String,java.lang.String) -> getUniqueFileName
    java.lang.String getCanonical(java.io.File) -> getCanonical
    java.lang.String getPath(java.lang.String) -> getPath
    java.lang.String getName(java.lang.String) -> getName
    void deleteDir(java.io.File) -> deleteDir
io.vov.vitamio.utils.IOUtils -> io.vov.vitamio.utils.IOUtils:
    java.lang.String TAG -> TAG
    void closeSilently(java.io.Closeable) -> closeSilently
    void closeSilently(android.os.ParcelFileDescriptor) -> closeSilently
    void closeSilently(android.database.Cursor) -> closeSilently
io.vov.vitamio.utils.Log -> io.vov.vitamio.utils.Log:
    java.lang.String TAG -> TAG
    void i(java.lang.String,java.lang.Object[]) -> i
    void d(java.lang.String,java.lang.Object[]) -> d
    void e(java.lang.String,java.lang.Object[]) -> e
    void e(java.lang.String,java.lang.Throwable) -> e
io.vov.vitamio.utils.StringUtils -> io.vov.vitamio.utils.StringUtils:
    java.lang.String join(java.lang.Object[],java.lang.CharSequence) -> join
    java.lang.String join(java.lang.Iterable,java.lang.CharSequence) -> join
    java.lang.String fixLastSlash(java.lang.String) -> fixLastSlash
    int convertToInt(java.lang.String) -> convertToInt
    java.lang.String generateTime(long) -> generateTime
io.vov.vitamio.widget.CenterLayout -> io.vov.vitamio.widget.CenterLayout:
    int mPaddingLeft -> mPaddingLeft
    int mPaddingRight -> mPaddingRight
    int mPaddingTop -> mPaddingTop
    int mPaddingBottom -> mPaddingBottom
    int mWidth -> mWidth
    int mHeight -> mHeight
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
io.vov.vitamio.widget.CenterLayout$LayoutParams -> io.vov.vitamio.widget.CenterLayout$LayoutParams:
    int x -> x
    int y -> y
io.vov.vitamio.widget.MediaController -> io.vov.vitamio.widget.MediaController:
    int sDefaultTimeout -> sDefaultTimeout
    int FADE_OUT -> FADE_OUT
    int SHOW_PROGRESS -> SHOW_PROGRESS
    io.vov.vitamio.widget.MediaController$MediaPlayerControl mPlayer -> mPlayer
    android.content.Context mContext -> mContext
    android.widget.PopupWindow mWindow -> mWindow
    int mAnimStyle -> mAnimStyle
    android.view.View mAnchor -> mAnchor
    android.view.View mRoot -> mRoot
    android.widget.SeekBar mProgress -> mProgress
    android.widget.TextView mEndTime -> mEndTime
    android.widget.TextView mCurrentTime -> mCurrentTime
    android.widget.TextView mFileName -> mFileName
    io.vov.vitamio.widget.OutlineTextView mInfoView -> mInfoView
    java.lang.String mTitle -> mTitle
    long mDuration -> mDuration
    boolean mShowing -> mShowing
    boolean mDragging -> mDragging
    boolean mInstantSeeking -> mInstantSeeking
    boolean mFromXml -> mFromXml
    android.widget.ImageButton mPauseButton -> mPauseButton
    android.media.AudioManager mAM -> mAM
    io.vov.vitamio.widget.MediaController$OnShownListener mShownListener -> mShownListener
    io.vov.vitamio.widget.MediaController$OnHiddenListener mHiddenListener -> mHiddenListener
    android.os.Handler mHandler -> mHandler
    android.view.View$OnClickListener mPauseListener -> mPauseListener
    android.widget.SeekBar$OnSeekBarChangeListener mSeekListener -> mSeekListener
    boolean initController(android.content.Context) -> initController
    void onFinishInflate() -> onFinishInflate
    void initFloatingWindow() -> initFloatingWindow
    void setWindowLayoutType() -> setWindowLayoutType
    void setAnchorView(android.view.View) -> setAnchorView
    android.view.View makeControllerView() -> makeControllerView
    void initControllerView(android.view.View) -> initControllerView
    void setMediaPlayer(io.vov.vitamio.widget.MediaController$MediaPlayerControl) -> setMediaPlayer
    void setInstantSeeking(boolean) -> setInstantSeeking
    void show() -> show
    void setFileName(java.lang.String) -> setFileName
    void setInfoView(io.vov.vitamio.widget.OutlineTextView) -> setInfoView
    void setAnimationStyle(int) -> setAnimationStyle
    void show(int) -> show
    boolean isShowing() -> isShowing
    void hide() -> hide
    void setOnShownListener(io.vov.vitamio.widget.MediaController$OnShownListener) -> setOnShownListener
    void setOnHiddenListener(io.vov.vitamio.widget.MediaController$OnHiddenListener) -> setOnHiddenListener
    long setProgress() -> setProgress
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onTrackballEvent(android.view.MotionEvent) -> onTrackballEvent
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void updatePausePlay() -> updatePausePlay
    void doPauseResume() -> doPauseResume
    void setEnabled(boolean) -> setEnabled
    long access$0(io.vov.vitamio.widget.MediaController) -> access$0
    boolean access$1(io.vov.vitamio.widget.MediaController) -> access$1
    boolean access$2(io.vov.vitamio.widget.MediaController) -> access$2
    void access$3(io.vov.vitamio.widget.MediaController) -> access$3
    void access$4(io.vov.vitamio.widget.MediaController) -> access$4
    void access$5(io.vov.vitamio.widget.MediaController,boolean) -> access$5
    android.os.Handler access$6(io.vov.vitamio.widget.MediaController) -> access$6
    boolean access$7(io.vov.vitamio.widget.MediaController) -> access$7
    android.media.AudioManager access$8(io.vov.vitamio.widget.MediaController) -> access$8
    io.vov.vitamio.widget.OutlineTextView access$9(io.vov.vitamio.widget.MediaController) -> access$9
    long access$10(io.vov.vitamio.widget.MediaController) -> access$10
    io.vov.vitamio.widget.MediaController$MediaPlayerControl access$11(io.vov.vitamio.widget.MediaController) -> access$11
    android.widget.TextView access$12(io.vov.vitamio.widget.MediaController) -> access$12
io.vov.vitamio.widget.MediaController$1 -> io.vov.vitamio.widget.MediaController$1:
    io.vov.vitamio.widget.MediaController this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
io.vov.vitamio.widget.MediaController$2 -> io.vov.vitamio.widget.MediaController$2:
    io.vov.vitamio.widget.MediaController this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.vov.vitamio.widget.MediaController$3 -> io.vov.vitamio.widget.MediaController$3:
    io.vov.vitamio.widget.MediaController this$0 -> this$0
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
io.vov.vitamio.widget.MediaController$MediaPlayerControl -> io.vov.vitamio.widget.MediaController$MediaPlayerControl:
    void start() -> start
    void pause() -> pause
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
io.vov.vitamio.widget.MediaController$OnHiddenListener -> io.vov.vitamio.widget.MediaController$OnHiddenListener:
    void onHidden() -> onHidden
io.vov.vitamio.widget.MediaController$OnShownListener -> io.vov.vitamio.widget.MediaController$OnShownListener:
    void onShown() -> onShown
io.vov.vitamio.widget.OutlineTextView -> io.vov.vitamio.widget.OutlineTextView:
    android.text.TextPaint mTextPaint -> mTextPaint
    android.text.TextPaint mTextPaintOutline -> mTextPaintOutline
    java.lang.String mText -> mText
    int mAscent -> mAscent
    float mBorderSize -> mBorderSize
    int mBorderColor -> mBorderColor
    int mColor -> mColor
    float mSpacingMult -> mSpacingMult
    float mSpacingAdd -> mSpacingAdd
    boolean mIncludePad -> mIncludePad
    void initPaint() -> initPaint
    void setText(java.lang.String) -> setText
    void setTextSize(float) -> setTextSize
    void setTextColor(int) -> setTextColor
    void setShadowLayer(float,float,float,int) -> setShadowLayer
    void setTypeface(android.graphics.Typeface,int) -> setTypeface
    void setTypeface(android.graphics.Typeface) -> setTypeface
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    int measureWidth(int) -> measureWidth
    int measureHeight(int) -> measureHeight
io.vov.vitamio.widget.VideoView -> io.vov.vitamio.widget.VideoView:
    int VIDEO_LAYOUT_ORIGIN -> VIDEO_LAYOUT_ORIGIN
    int VIDEO_LAYOUT_SCALE -> VIDEO_LAYOUT_SCALE
    int VIDEO_LAYOUT_STRETCH -> VIDEO_LAYOUT_STRETCH
    int VIDEO_LAYOUT_ZOOM -> VIDEO_LAYOUT_ZOOM
    int STATE_ERROR -> STATE_ERROR
    int STATE_IDLE -> STATE_IDLE
    int STATE_PREPARING -> STATE_PREPARING
    int STATE_PREPARED -> STATE_PREPARED
    int STATE_PLAYING -> STATE_PLAYING
    int STATE_PAUSED -> STATE_PAUSED
    int STATE_PLAYBACK_COMPLETED -> STATE_PLAYBACK_COMPLETED
    int STATE_SUSPEND -> STATE_SUSPEND
    int STATE_RESUME -> STATE_RESUME
    int STATE_SUSPEND_UNSUPPORTED -> STATE_SUSPEND_UNSUPPORTED
    io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener mSizeChangedListener -> mSizeChangedListener
    io.vov.vitamio.MediaPlayer$OnPreparedListener mPreparedListener -> mPreparedListener
    android.view.SurfaceHolder$Callback mSHCallback -> mSHCallback
    android.net.Uri mUri -> mUri
    long mDuration -> mDuration
    int mCurrentState -> mCurrentState
    int mTargetState -> mTargetState
    float mAspectRatio -> mAspectRatio
    int mVideoLayout -> mVideoLayout
    android.view.SurfaceHolder mSurfaceHolder -> mSurfaceHolder
    io.vov.vitamio.MediaPlayer mMediaPlayer -> mMediaPlayer
    int mVideoWidth -> mVideoWidth
    int mVideoHeight -> mVideoHeight
    float mVideoAspectRatio -> mVideoAspectRatio
    int mVideoChroma -> mVideoChroma
    boolean mHardwareDecoder -> mHardwareDecoder
    int mSurfaceWidth -> mSurfaceWidth
    int mSurfaceHeight -> mSurfaceHeight
    io.vov.vitamio.widget.MediaController mMediaController -> mMediaController
    android.view.View mMediaBufferingIndicator -> mMediaBufferingIndicator
    io.vov.vitamio.MediaPlayer$OnCompletionListener mOnCompletionListener -> mOnCompletionListener
    io.vov.vitamio.MediaPlayer$OnPreparedListener mOnPreparedListener -> mOnPreparedListener
    io.vov.vitamio.MediaPlayer$OnErrorListener mOnErrorListener -> mOnErrorListener
    io.vov.vitamio.MediaPlayer$OnSeekCompleteListener mOnSeekCompleteListener -> mOnSeekCompleteListener
    io.vov.vitamio.MediaPlayer$OnTimedTextListener mOnTimedTextListener -> mOnTimedTextListener
    io.vov.vitamio.MediaPlayer$OnInfoListener mOnInfoListener -> mOnInfoListener
    io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener mOnBufferingUpdateListener -> mOnBufferingUpdateListener
    int mCurrentBufferPercentage -> mCurrentBufferPercentage
    long mSeekWhenPrepared -> mSeekWhenPrepared
    android.content.Context mContext -> mContext
    java.util.Map mHeaders -> mHeaders
    int mBufSize -> mBufSize
    io.vov.vitamio.MediaPlayer$OnCompletionListener mCompletionListener -> mCompletionListener
    io.vov.vitamio.MediaPlayer$OnErrorListener mErrorListener -> mErrorListener
    io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener mBufferingUpdateListener -> mBufferingUpdateListener
    io.vov.vitamio.MediaPlayer$OnInfoListener mInfoListener -> mInfoListener
    io.vov.vitamio.MediaPlayer$OnSeekCompleteListener mSeekCompleteListener -> mSeekCompleteListener
    io.vov.vitamio.MediaPlayer$OnTimedTextListener mTimedTextListener -> mTimedTextListener
    void onMeasure(int,int) -> onMeasure
    void setVideoLayout(int,float) -> setVideoLayout
    void initVideoView(android.content.Context) -> initVideoView
    boolean isValid() -> isValid
    void setVideoPath(java.lang.String) -> setVideoPath
    void setVideoURI(android.net.Uri) -> setVideoURI
    void setVideoURI(android.net.Uri,java.util.Map) -> setVideoURI
    void stopPlayback() -> stopPlayback
    void openVideo() -> openVideo
    void setMediaController(io.vov.vitamio.widget.MediaController) -> setMediaController
    void setMediaBufferingIndicator(android.view.View) -> setMediaBufferingIndicator
    void attachMediaController() -> attachMediaController
    void setOnPreparedListener(io.vov.vitamio.MediaPlayer$OnPreparedListener) -> setOnPreparedListener
    void setOnCompletionListener(io.vov.vitamio.MediaPlayer$OnCompletionListener) -> setOnCompletionListener
    void setOnErrorListener(io.vov.vitamio.MediaPlayer$OnErrorListener) -> setOnErrorListener
    void setOnBufferingUpdateListener(io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener) -> setOnBufferingUpdateListener
    void setOnSeekCompleteListener(io.vov.vitamio.MediaPlayer$OnSeekCompleteListener) -> setOnSeekCompleteListener
    void setOnTimedTextListener(io.vov.vitamio.MediaPlayer$OnTimedTextListener) -> setOnTimedTextListener
    void setOnInfoListener(io.vov.vitamio.MediaPlayer$OnInfoListener) -> setOnInfoListener
    void release(boolean) -> release
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onTrackballEvent(android.view.MotionEvent) -> onTrackballEvent
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void toggleMediaControlsVisiblity() -> toggleMediaControlsVisiblity
    void start() -> start
    void pause() -> pause
    void suspend() -> suspend
    void resume() -> resume
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    void setVolume(float,float) -> setVolume
    int getVideoWidth() -> getVideoWidth
    int getVideoHeight() -> getVideoHeight
    float getVideoAspectRatio() -> getVideoAspectRatio
    void setVideoChroma(int) -> setVideoChroma
    void setHardwareDecoder(boolean) -> setHardwareDecoder
    void setVideoQuality(int) -> setVideoQuality
    void setBufferSize(int) -> setBufferSize
    boolean isBuffering() -> isBuffering
    java.lang.String getMetaEncoding() -> getMetaEncoding
    void setMetaEncoding(java.lang.String) -> setMetaEncoding
    android.util.SparseArray getAudioTrackMap(java.lang.String) -> getAudioTrackMap
    int getAudioTrack() -> getAudioTrack
    void setAudioTrack(int) -> setAudioTrack
    void setTimedTextShown(boolean) -> setTimedTextShown
    void setTimedTextEncoding(java.lang.String) -> setTimedTextEncoding
    int getTimedTextLocation() -> getTimedTextLocation
    void addTimedTextSource(java.lang.String) -> addTimedTextSource
    java.lang.String getTimedTextPath() -> getTimedTextPath
    void setSubTrack(int) -> setSubTrack
    int getTimedTextTrack() -> getTimedTextTrack
    android.util.SparseArray getSubTrackMap(java.lang.String) -> getSubTrackMap
    boolean isInPlaybackState() -> isInPlaybackState
    void access$0(io.vov.vitamio.widget.VideoView,int) -> access$0
    void access$1(io.vov.vitamio.widget.VideoView,int) -> access$1
    void access$2(io.vov.vitamio.widget.VideoView,float) -> access$2
    int access$3(io.vov.vitamio.widget.VideoView) -> access$3
    int access$4(io.vov.vitamio.widget.VideoView) -> access$4
    int access$5(io.vov.vitamio.widget.VideoView) -> access$5
    float access$6(io.vov.vitamio.widget.VideoView) -> access$6
    void access$7(io.vov.vitamio.widget.VideoView,int) -> access$7
    io.vov.vitamio.MediaPlayer$OnPreparedListener access$8(io.vov.vitamio.widget.VideoView) -> access$8
    io.vov.vitamio.MediaPlayer access$9(io.vov.vitamio.widget.VideoView) -> access$9
    io.vov.vitamio.widget.MediaController access$10(io.vov.vitamio.widget.VideoView) -> access$10
    long access$11(io.vov.vitamio.widget.VideoView) -> access$11
    int access$12(io.vov.vitamio.widget.VideoView) -> access$12
    int access$13(io.vov.vitamio.widget.VideoView) -> access$13
    int access$14(io.vov.vitamio.widget.VideoView) -> access$14
    void access$15(io.vov.vitamio.widget.VideoView,int) -> access$15
    void access$16(io.vov.vitamio.widget.VideoView,int) -> access$16
    void access$17(io.vov.vitamio.widget.VideoView,android.view.SurfaceHolder) -> access$17
    int access$18(io.vov.vitamio.widget.VideoView) -> access$18
    android.view.SurfaceHolder access$19(io.vov.vitamio.widget.VideoView) -> access$19
    void access$20(io.vov.vitamio.widget.VideoView) -> access$20
    void access$21(io.vov.vitamio.widget.VideoView,boolean) -> access$21
    void access$22(io.vov.vitamio.widget.VideoView,int) -> access$22
    io.vov.vitamio.MediaPlayer$OnCompletionListener access$23(io.vov.vitamio.widget.VideoView) -> access$23
    io.vov.vitamio.MediaPlayer$OnErrorListener access$24(io.vov.vitamio.widget.VideoView) -> access$24
    android.content.Context access$25(io.vov.vitamio.widget.VideoView) -> access$25
    void access$26(io.vov.vitamio.widget.VideoView,int) -> access$26
    io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener access$27(io.vov.vitamio.widget.VideoView) -> access$27
    io.vov.vitamio.MediaPlayer$OnInfoListener access$28(io.vov.vitamio.widget.VideoView) -> access$28
    android.view.View access$29(io.vov.vitamio.widget.VideoView) -> access$29
    io.vov.vitamio.MediaPlayer$OnSeekCompleteListener access$30(io.vov.vitamio.widget.VideoView) -> access$30
    io.vov.vitamio.MediaPlayer$OnTimedTextListener access$31(io.vov.vitamio.widget.VideoView) -> access$31
io.vov.vitamio.widget.VideoView$1 -> io.vov.vitamio.widget.VideoView$1:
    io.vov.vitamio.widget.VideoView this$0 -> this$0
    void onVideoSizeChanged(io.vov.vitamio.MediaPlayer,int,int) -> onVideoSizeChanged
io.vov.vitamio.widget.VideoView$2 -> io.vov.vitamio.widget.VideoView$2:
    io.vov.vitamio.widget.VideoView this$0 -> this$0
    void onPrepared(io.vov.vitamio.MediaPlayer) -> onPrepared
io.vov.vitamio.widget.VideoView$3 -> io.vov.vitamio.widget.VideoView$3:
    io.vov.vitamio.widget.VideoView this$0 -> this$0
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
io.vov.vitamio.widget.VideoView$4 -> io.vov.vitamio.widget.VideoView$4:
    io.vov.vitamio.widget.VideoView this$0 -> this$0
    void onCompletion(io.vov.vitamio.MediaPlayer) -> onCompletion
io.vov.vitamio.widget.VideoView$5 -> io.vov.vitamio.widget.VideoView$5:
    io.vov.vitamio.widget.VideoView this$0 -> this$0
    boolean onError(io.vov.vitamio.MediaPlayer,int,int) -> onError
    io.vov.vitamio.widget.VideoView access$0(io.vov.vitamio.widget.VideoView$5) -> access$0
io.vov.vitamio.widget.VideoView$5$1 -> io.vov.vitamio.widget.VideoView$5$1:
    io.vov.vitamio.widget.VideoView$5 this$1 -> this$1
    void onClick(android.content.DialogInterface,int) -> onClick
io.vov.vitamio.widget.VideoView$6 -> io.vov.vitamio.widget.VideoView$6:
    io.vov.vitamio.widget.VideoView this$0 -> this$0
    void onBufferingUpdate(io.vov.vitamio.MediaPlayer,int) -> onBufferingUpdate
io.vov.vitamio.widget.VideoView$7 -> io.vov.vitamio.widget.VideoView$7:
    io.vov.vitamio.widget.VideoView this$0 -> this$0
    boolean onInfo(io.vov.vitamio.MediaPlayer,int,int) -> onInfo
io.vov.vitamio.widget.VideoView$8 -> io.vov.vitamio.widget.VideoView$8:
    io.vov.vitamio.widget.VideoView this$0 -> this$0
    void onSeekComplete(io.vov.vitamio.MediaPlayer) -> onSeekComplete
io.vov.vitamio.widget.VideoView$9 -> io.vov.vitamio.widget.VideoView$9:
    io.vov.vitamio.widget.VideoView this$0 -> this$0
    void onTimedTextUpdate(byte[],int,int) -> onTimedTextUpdate
    void onTimedText(java.lang.String) -> onTimedText
me.maxwin.view.XListView -> me.maxwin.view.XListView:
    float mLastY -> a
    android.widget.Scroller mScroller -> b
    android.widget.AbsListView$OnScrollListener mScrollListener -> c
    me.maxwin.view.XListView$IXListViewListener mListViewListener -> d
    me.maxwin.view.XListViewHeader mHeaderView -> e
    android.widget.RelativeLayout mHeaderViewContent -> f
    android.widget.TextView mHeaderTimeView -> g
    int mHeaderViewHeight -> h
    boolean mEnablePullRefresh -> i
    boolean mPullRefreshing -> j
    me.maxwin.view.XListViewFooter mFooterView -> k
    boolean mEnablePullLoad -> l
    boolean mPullLoading -> m
    boolean mIsFooterReady -> n
    int mTotalItemCount -> o
    int mScrollBack -> p
    void initWithContext(android.content.Context) -> a
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setPullRefreshEnable(boolean) -> setPullRefreshEnable
    void setPullLoadEnable(boolean) -> setPullLoadEnable
    void stopRefresh() -> a
    void stopLoadMore() -> b
    void setRefreshTime(java.lang.String) -> setRefreshTime
    void invokeOnScrolling() -> c
    void updateHeaderHeight(float) -> a
    void resetHeaderHeight() -> d
    void updateFooterHeight(float) -> b
    void resetFooterHeight() -> e
    void startLoadMore() -> f
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void computeScroll() -> computeScroll
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void setXListViewListener(me.maxwin.view.XListView$IXListViewListener) -> setXListViewListener
    android.widget.RelativeLayout access$0(me.maxwin.view.XListView) -> a
    void access$1(me.maxwin.view.XListView,int) -> a
    void access$2(me.maxwin.view.XListView) -> b
me.maxwin.view.XListView$1 -> mx:
    me.maxwin.view.XListView this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
me.maxwin.view.XListView$2 -> my:
    me.maxwin.view.XListView this$0 -> a
    void onClick(android.view.View) -> onClick
me.maxwin.view.XListView$IXListViewListener -> mz:
    void onRefresh() -> a
    void onLoadMore() -> b
me.maxwin.view.XListView$OnXScrollListener -> na:
    void onXScrolling(android.view.View) -> a
me.maxwin.view.XListViewFooter -> me.maxwin.view.XListViewFooter:
    android.content.Context mContext -> a
    android.view.View mContentView -> b
    android.view.View mProgressBar -> c
    android.widget.TextView mHintView -> d
    void setState(int) -> setState
    void setBottomMargin(int) -> setBottomMargin
    int getBottomMargin() -> getBottomMargin
    void hide() -> a
    void show() -> b
    void initView(android.content.Context) -> a
me.maxwin.view.XListViewHeader -> me.maxwin.view.XListViewHeader:
    android.widget.LinearLayout mContainer -> a
    android.widget.ImageView mArrowImageView -> b
    android.widget.ProgressBar mProgressBar -> c
    android.widget.TextView mHintTextView -> d
    int mState -> e
    android.view.animation.Animation mRotateUpAnim -> f
    android.view.animation.Animation mRotateDownAnim -> g
    int ROTATE_ANIM_DURATION -> h
    void initView(android.content.Context) -> a
    void setState(int) -> setState
    void setVisiableHeight(int) -> setVisiableHeight
    int getVisiableHeight() -> getVisiableHeight
ustc.bitmap.imagecache.AsyncTask -> nb:
    java.util.concurrent.ThreadFactory sThreadFactory -> d
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> e
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> a
    java.util.concurrent.Executor SERIAL_EXECUTOR -> b
    java.util.concurrent.Executor DUAL_THREAD_EXECUTOR -> c
    ustc.bitmap.imagecache.AsyncTask$InternalHandler sHandler -> f
    java.util.concurrent.Executor sDefaultExecutor -> g
    ustc.bitmap.imagecache.AsyncTask$WorkerRunnable mWorker -> h
    java.util.concurrent.FutureTask mFuture -> i
    ustc.bitmap.imagecache.AsyncTask$Status mStatus -> j
    java.util.concurrent.atomic.AtomicBoolean mCancelled -> k
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> l
    int[] $SWITCH_TABLE$ustc$bitmap$imagecache$AsyncTask$Status -> m
    void postResultIfNotInvoked(java.lang.Object) -> c
    java.lang.Object postResult(java.lang.Object) -> d
    java.lang.Object doInBackground(java.lang.Object[]) -> a
    void onPreExecute() -> a
    void onPostExecute(java.lang.Object) -> a
    void onProgressUpdate(java.lang.Object[]) -> b
    void onCancelled(java.lang.Object) -> b
    void onCancelled() -> b
    boolean isCancelled() -> c
    boolean cancel(boolean) -> a
    ustc.bitmap.imagecache.AsyncTask execute(java.lang.Object[]) -> c
    ustc.bitmap.imagecache.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> a
    void finish(java.lang.Object) -> e
    void access$0(ustc.bitmap.imagecache.AsyncTask,java.lang.Object) -> a
    java.util.concurrent.atomic.AtomicBoolean access$1(ustc.bitmap.imagecache.AsyncTask) -> a
    java.lang.Object access$2(ustc.bitmap.imagecache.AsyncTask,java.lang.Object) -> b
    void access$3(ustc.bitmap.imagecache.AsyncTask,java.lang.Object) -> c
    int[] $SWITCH_TABLE$ustc$bitmap$imagecache$AsyncTask$Status() -> d
ustc.bitmap.imagecache.AsyncTask$1 -> nc:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
ustc.bitmap.imagecache.AsyncTask$2 -> nd:
    ustc.bitmap.imagecache.AsyncTask this$0 -> a
    java.lang.Object call() -> call
ustc.bitmap.imagecache.AsyncTask$3 -> ne:
    ustc.bitmap.imagecache.AsyncTask this$0 -> a
    void done() -> done
ustc.bitmap.imagecache.AsyncTask$AsyncTaskResult -> nf:
    ustc.bitmap.imagecache.AsyncTask mTask -> a
    java.lang.Object[] mData -> b
ustc.bitmap.imagecache.AsyncTask$InternalHandler -> ng:
    void handleMessage(android.os.Message) -> handleMessage
ustc.bitmap.imagecache.AsyncTask$SerialExecutor -> nh:
    java.util.ArrayDeque mTasks -> a
    java.lang.Runnable mActive -> b
    void execute(java.lang.Runnable) -> execute
    void scheduleNext() -> a
ustc.bitmap.imagecache.AsyncTask$SerialExecutor$1 -> ni:
    ustc.bitmap.imagecache.AsyncTask$SerialExecutor this$1 -> a
    java.lang.Runnable val$r -> b
    void run() -> run
ustc.bitmap.imagecache.AsyncTask$Status -> nj:
    ustc.bitmap.imagecache.AsyncTask$Status PENDING -> a
    ustc.bitmap.imagecache.AsyncTask$Status RUNNING -> b
    ustc.bitmap.imagecache.AsyncTask$Status FINISHED -> c
    ustc.bitmap.imagecache.AsyncTask$Status[] ENUM$VALUES -> d
    ustc.bitmap.imagecache.AsyncTask$Status[] values() -> values
    ustc.bitmap.imagecache.AsyncTask$Status valueOf(java.lang.String) -> valueOf
ustc.bitmap.imagecache.AsyncTask$WorkerRunnable -> nk:
    java.lang.Object[] mParams -> b
ustc.bitmap.imagecache.DiskLruCache -> nl:
    java.nio.charset.Charset UTF_8 -> a
    java.io.File directory -> b
    java.io.File journalFile -> c
    java.io.File journalFileTmp -> d
    int appVersion -> e
    long maxSize -> f
    int valueCount -> g
    long size -> h
    java.io.Writer journalWriter -> i
    java.util.LinkedHashMap lruEntries -> j
    int redundantOpCount -> k
    long nextSequenceNumber -> l
    java.util.concurrent.ExecutorService executorService -> m
    java.util.concurrent.Callable cleanupCallable -> n
    java.lang.Object[] copyOfRange(java.lang.Object[],int,int) -> a
    java.lang.String readAsciiLine(java.io.InputStream) -> a
    void closeQuietly(java.io.Closeable) -> a
    void deleteContents(java.io.File) -> a
    ustc.bitmap.imagecache.DiskLruCache open(java.io.File,int,int,long) -> a
    void readJournal() -> d
    void readJournalLine(java.lang.String) -> d
    void processJournal() -> e
    void rebuildJournal() -> f
    void deleteIfExists(java.io.File) -> b
    ustc.bitmap.imagecache.DiskLruCache$Snapshot get(java.lang.String) -> a
    ustc.bitmap.imagecache.DiskLruCache$Editor edit(java.lang.String) -> b
    ustc.bitmap.imagecache.DiskLruCache$Editor edit(java.lang.String,long) -> a
    void completeEdit(ustc.bitmap.imagecache.DiskLruCache$Editor,boolean) -> a
    boolean journalRebuildRequired() -> g
    boolean remove(java.lang.String) -> c
    boolean isClosed() -> a
    void checkNotClosed() -> h
    void flush() -> b
    void close() -> close
    void trimToSize() -> i
    void delete() -> c
    void validateKey(java.lang.String) -> e
    java.io.Writer access$0(ustc.bitmap.imagecache.DiskLruCache) -> a
    void access$1(ustc.bitmap.imagecache.DiskLruCache) -> b
    boolean access$2(ustc.bitmap.imagecache.DiskLruCache) -> c
    void access$3(ustc.bitmap.imagecache.DiskLruCache) -> d
    void access$4(ustc.bitmap.imagecache.DiskLruCache,int) -> a
    void access$8(ustc.bitmap.imagecache.DiskLruCache,ustc.bitmap.imagecache.DiskLruCache$Editor,boolean) -> a
    int access$9(ustc.bitmap.imagecache.DiskLruCache) -> e
    java.io.File access$10(ustc.bitmap.imagecache.DiskLruCache) -> f
ustc.bitmap.imagecache.DiskLruCache$1 -> nm:
    ustc.bitmap.imagecache.DiskLruCache this$0 -> a
    java.lang.Void call() -> a
    java.lang.Object call() -> call
ustc.bitmap.imagecache.DiskLruCache$Editor -> nn:
    ustc.bitmap.imagecache.DiskLruCache$Entry entry -> b
    boolean hasErrors -> c
    ustc.bitmap.imagecache.DiskLruCache this$0 -> a
    java.io.OutputStream newOutputStream(int) -> a
    void commit() -> a
    void abort() -> b
    void access$0(ustc.bitmap.imagecache.DiskLruCache$Editor,boolean) -> a
    ustc.bitmap.imagecache.DiskLruCache$Entry access$2(ustc.bitmap.imagecache.DiskLruCache$Editor) -> a
ustc.bitmap.imagecache.DiskLruCache$Editor$FaultHidingOutputStream -> no:
    ustc.bitmap.imagecache.DiskLruCache$Editor this$1 -> a
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void flush() -> flush
ustc.bitmap.imagecache.DiskLruCache$Entry -> np:
    java.lang.String key -> b
    long[] lengths -> c
    boolean readable -> d
    ustc.bitmap.imagecache.DiskLruCache$Editor currentEditor -> e
    long sequenceNumber -> f
    ustc.bitmap.imagecache.DiskLruCache this$0 -> a
    java.lang.String getLengths() -> a
    void setLengths(java.lang.String[]) -> a
    java.io.IOException invalidLengths(java.lang.String[]) -> b
    java.io.File getCleanFile(int) -> a
    java.io.File getDirtyFile(int) -> b
    ustc.bitmap.imagecache.DiskLruCache$Editor access$0(ustc.bitmap.imagecache.DiskLruCache$Entry) -> a
    boolean access$1(ustc.bitmap.imagecache.DiskLruCache$Entry) -> b
    java.lang.String access$2(ustc.bitmap.imagecache.DiskLruCache$Entry) -> c
    void access$4(ustc.bitmap.imagecache.DiskLruCache$Entry,boolean) -> a
    void access$5(ustc.bitmap.imagecache.DiskLruCache$Entry,ustc.bitmap.imagecache.DiskLruCache$Editor) -> a
    void access$6(ustc.bitmap.imagecache.DiskLruCache$Entry,java.lang.String[]) -> a
    long[] access$7(ustc.bitmap.imagecache.DiskLruCache$Entry) -> d
    long access$8(ustc.bitmap.imagecache.DiskLruCache$Entry) -> e
    void access$9(ustc.bitmap.imagecache.DiskLruCache$Entry,long) -> a
ustc.bitmap.imagecache.DiskLruCache$Snapshot -> nq:
    java.lang.String key -> b
    long sequenceNumber -> c
    java.io.InputStream[] ins -> d
    ustc.bitmap.imagecache.DiskLruCache this$0 -> a
    java.io.InputStream getInputStream(int) -> a
    void close() -> close
ustc.bitmap.imagecache.ImageCache -> nr:
    android.graphics.Bitmap$CompressFormat DEFAULT_COMPRESS_FORMAT -> a
    ustc.bitmap.imagecache.DiskLruCache mDiskLruCache -> b
    android.support.v4.util.LruCache mMemoryCache -> c
    ustc.bitmap.imagecache.ImageCache$ImageCacheParams mCacheParams -> d
    java.lang.Object mDiskCacheLock -> e
    boolean mDiskCacheStarting -> f
    java.util.Set mReusableBitmaps -> g
    ustc.bitmap.imagecache.ImageCache getInstance(android.support.v4.app.FragmentManager,ustc.bitmap.imagecache.ImageCache$ImageCacheParams) -> a
    void init(ustc.bitmap.imagecache.ImageCache$ImageCacheParams) -> a
    void initDiskCache() -> a
    void addBitmapToCache(java.lang.String,android.graphics.drawable.BitmapDrawable) -> a
    android.graphics.drawable.BitmapDrawable getBitmapFromMemCache(java.lang.String) -> a
    android.graphics.Bitmap getBitmapFromDiskCache(java.lang.String) -> b
    android.graphics.Bitmap getBitmapFromReusableSet(android.graphics.BitmapFactory$Options) -> a
    void clearCache() -> b
    void flush() -> c
    void close() -> d
    boolean canUseForInBitmap(android.graphics.Bitmap,android.graphics.BitmapFactory$Options) -> a
    int getBytesPerPixel(android.graphics.Bitmap$Config) -> a
    java.io.File getDiskCacheDir(android.content.Context,java.lang.String) -> a
    java.lang.String hashKeyForDisk(java.lang.String) -> c
    java.lang.String bytesToHexString(byte[]) -> a
    int getBitmapSize(android.graphics.drawable.BitmapDrawable) -> a
    boolean isExternalStorageRemovable() -> e
    java.io.File getExternalCacheDir(android.content.Context) -> a
    long getUsableSpace(java.io.File) -> a
    ustc.bitmap.imagecache.ImageCache$RetainFragment findOrCreateRetainFragment(android.support.v4.app.FragmentManager) -> a
    android.graphics.Bitmap$CompressFormat access$0() -> f
    java.util.Set access$1(ustc.bitmap.imagecache.ImageCache) -> a
ustc.bitmap.imagecache.ImageCache$1 -> ns:
    ustc.bitmap.imagecache.ImageCache this$0 -> a
    void entryRemoved(boolean,java.lang.String,android.graphics.drawable.BitmapDrawable,android.graphics.drawable.BitmapDrawable) -> a
    int sizeOf(java.lang.String,android.graphics.drawable.BitmapDrawable) -> a
    int sizeOf(java.lang.Object,java.lang.Object) -> b
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
ustc.bitmap.imagecache.ImageCache$ImageCacheParams -> nt:
    int memCacheSize -> a
    int diskCacheSize -> b
    java.io.File diskCacheDir -> c
    android.graphics.Bitmap$CompressFormat compressFormat -> d
    int compressQuality -> e
    boolean memoryCacheEnabled -> f
    boolean diskCacheEnabled -> g
    boolean initDiskCacheOnCreate -> h
    void setMemCacheSizePercent(float) -> a
ustc.bitmap.imagecache.ImageCache$RetainFragment -> nu:
    java.lang.Object mObject -> P
    void onCreate(android.os.Bundle) -> d
    void setObject(java.lang.Object) -> a
    java.lang.Object getObject() -> A
ustc.bitmap.imagecache.ImageFetcher -> nv:
    ustc.bitmap.imagecache.DiskLruCache mHttpDiskCache -> e
    java.io.File mHttpCacheDir -> f
    boolean mHttpDiskCacheStarting -> g
    java.lang.Object mHttpDiskCacheLock -> h
    void init(android.content.Context) -> a
    void initDiskCacheInternal() -> a
    void initHttpDiskCache() -> i
    void clearCacheInternal() -> b
    void flushCacheInternal() -> c
    void closeCacheInternal() -> d
    void checkConnection(android.content.Context) -> b
    android.graphics.Bitmap processBitmap(java.lang.String) -> a
    android.graphics.Bitmap processBitmap(java.lang.Object) -> a
    boolean downloadUrlToStream(java.lang.String,java.io.OutputStream) -> a
    void disableConnectionReuseIfNecessary() -> e
ustc.bitmap.imagecache.ImageResizer -> nw:
    int mImageWidth -> a
    int mImageHeight -> b
    void setImageSize(int,int) -> a
    void setImageSize(int) -> a
    android.graphics.Bitmap processBitmap(int) -> c
    android.graphics.Bitmap processBitmap(java.lang.Object) -> a
    android.graphics.Bitmap decodeSampledBitmapFromResource(android.content.res.Resources,int,int,int,ustc.bitmap.imagecache.ImageCache) -> a
    android.graphics.Bitmap decodeSampledBitmapFromDescriptor(java.io.FileDescriptor,int,int,ustc.bitmap.imagecache.ImageCache) -> a
    void addInBitmapOptions(android.graphics.BitmapFactory$Options,ustc.bitmap.imagecache.ImageCache) -> a
    int calculateInSampleSize(android.graphics.BitmapFactory$Options,int,int) -> a
ustc.bitmap.imagecache.ImageWorker -> nx:
    ustc.bitmap.imagecache.ImageCache mImageCache -> a
    ustc.bitmap.imagecache.ImageCache$ImageCacheParams mImageCacheParams -> b
    android.graphics.Bitmap mLoadingBitmap -> e
    boolean mFadeInBitmap -> f
    boolean mExitTasksEarly -> g
    boolean mPauseWork -> c
    java.lang.Object mPauseWorkLock -> h
    android.content.res.Resources mResources -> d
    void loadImage(java.lang.Object,android.widget.ImageView) -> a
    void setLoadingImage(int) -> b
    void addImageCache(android.support.v4.app.FragmentManager,ustc.bitmap.imagecache.ImageCache$ImageCacheParams) -> a
    void setImageFadeIn(boolean) -> a
    void setExitTasksEarly(boolean) -> b
    android.graphics.Bitmap processBitmap(java.lang.Object) -> a
    ustc.bitmap.imagecache.ImageCache getImageCache() -> f
    boolean cancelPotentialWork(java.lang.Object,android.widget.ImageView) -> b
    ustc.bitmap.imagecache.ImageWorker$BitmapWorkerTask getBitmapWorkerTask(android.widget.ImageView) -> b
    void setImageDrawable(android.widget.ImageView,android.graphics.drawable.Drawable) -> a
    void setPauseWork(boolean) -> c
    void initDiskCacheInternal() -> a
    void clearCacheInternal() -> b
    void flushCacheInternal() -> c
    void closeCacheInternal() -> d
    void flushCache() -> g
    void closeCache() -> h
    java.lang.Object access$0(ustc.bitmap.imagecache.ImageWorker) -> a
    ustc.bitmap.imagecache.ImageCache access$1(ustc.bitmap.imagecache.ImageWorker) -> b
    boolean access$2(ustc.bitmap.imagecache.ImageWorker) -> c
    void access$3(ustc.bitmap.imagecache.ImageWorker,android.widget.ImageView,android.graphics.drawable.Drawable) -> a
    ustc.bitmap.imagecache.ImageWorker$BitmapWorkerTask access$4(android.widget.ImageView) -> a
ustc.bitmap.imagecache.ImageWorker$AsyncDrawable -> ny:
    java.lang.ref.WeakReference bitmapWorkerTaskReference -> a
    ustc.bitmap.imagecache.ImageWorker$BitmapWorkerTask getBitmapWorkerTask() -> a
ustc.bitmap.imagecache.ImageWorker$BitmapWorkerTask -> nz:
    java.lang.Object data -> e
    java.lang.ref.WeakReference imageViewReference -> f
    ustc.bitmap.imagecache.ImageWorker this$0 -> d
    android.graphics.drawable.BitmapDrawable doInBackground(java.lang.Object[]) -> d
    void onPostExecute(android.graphics.drawable.BitmapDrawable) -> a
    void onCancelled(android.graphics.drawable.BitmapDrawable) -> b
    android.widget.ImageView getAttachedImageView() -> e
    void onPostExecute(java.lang.Object) -> a
    void onCancelled(java.lang.Object) -> b
    java.lang.Object doInBackground(java.lang.Object[]) -> a
    java.lang.Object access$3(ustc.bitmap.imagecache.ImageWorker$BitmapWorkerTask) -> a
ustc.bitmap.imagecache.ImageWorker$CacheAsyncTask -> oa:
    ustc.bitmap.imagecache.ImageWorker this$0 -> d
    java.lang.Void doInBackground(java.lang.Object[]) -> d
    java.lang.Object doInBackground(java.lang.Object[]) -> a
ustc.bitmap.imagecache.RecyclingBitmapDrawable -> ob:
    int mCacheRefCount -> a
    int mDisplayRefCount -> b
    boolean mHasBeenDisplayed -> c
    void setIsDisplayed(boolean) -> a
    void setIsCached(boolean) -> b
    void checkState() -> a
    boolean hasValidBitmap() -> b
ustc.bitmap.imagecache.Utils -> oc:
    boolean hasFroyo() -> a
    boolean hasGingerbread() -> b
    boolean hasHoneycomb() -> c
    boolean hasHoneycombMR1() -> d
    boolean hasKitKat() -> e
ustc.bitmap.ui.RecyclingImageView -> ustc.bitmap.ui.RecyclingImageView:
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void notifyDrawable(android.graphics.drawable.Drawable,boolean) -> a
ustc.custom.widget.XSurfaceView -> ustc.custom.widget.XSurfaceView:
    android.view.GestureDetector gestureDetector -> a
    ustc.custom.widget.XSurfaceView$OnGestureDetected gestureDetected -> b
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setOnGestureDetected(ustc.custom.widget.XSurfaceView$OnGestureDetected) -> setOnGestureDetected
    ustc.custom.widget.XSurfaceView$OnGestureDetected access$0(ustc.custom.widget.XSurfaceView) -> a
ustc.custom.widget.XSurfaceView$MyGestureListener -> od:
    ustc.custom.widget.XSurfaceView this$0 -> a
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
ustc.custom.widget.XSurfaceView$OnGestureDetected -> oe:
    void onDown(android.view.MotionEvent) -> a
    void onDoubleTap(android.view.MotionEvent) -> b
    void onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> a
ustc.custom.widget.XViewPager -> ustc.custom.widget.XViewPager:
    boolean scrollEnabled -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void setScrollEnabled(boolean) -> setScrollEnabled
ustc.newsvideo.AudioPreset -> of:
    android.content.Context mContext -> a
    android.media.AudioManager mAudioManager -> b
    android.media.AudioManager$OnAudioFocusChangeListener afChangeListener -> c
    boolean requestVolumeControll() -> a
    android.media.AudioManager access$0(ustc.newsvideo.AudioPreset) -> a
    android.media.AudioManager$OnAudioFocusChangeListener access$1(ustc.newsvideo.AudioPreset) -> b
ustc.newsvideo.AudioPreset$1 -> og:
    ustc.newsvideo.AudioPreset this$0 -> a
    void onAudioFocusChange(int) -> onAudioFocusChange
ustc.newsvideo.CollectionPagerAdapter -> oh:
    java.util.ArrayList custom_category_values -> a
    java.util.ArrayList custom_category_entries -> b
    android.support.v4.app.Fragment getItem(int) -> a
    int getCount() -> b
    java.lang.CharSequence getPageTitle(int) -> b
ustc.newsvideo.ContentFragment -> oi:
    java.lang.String mtype -> P
    java.util.List newsInfoList -> Q
    me.maxwin.view.XListView mListView -> R
    ustc.bitmap.imagecache.ImageFetcher mImageFetcher -> S
    int screenHeight -> T
    ustc.newsvideo.ContentFragment$NewsAdapter mNewsAdapter -> U
    void onCreate(android.os.Bundle) -> d
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> e
    void playCurrent(int,java.lang.String) -> a
    void playNewsVideo(ustc.newsvideo.data.parser.NewsInfo,java.lang.String) -> a
    java.util.List access$0(ustc.newsvideo.ContentFragment) -> a
    me.maxwin.view.XListView access$1(ustc.newsvideo.ContentFragment) -> b
    ustc.newsvideo.ContentFragment$NewsAdapter access$2(ustc.newsvideo.ContentFragment) -> c
    int access$3(ustc.newsvideo.ContentFragment) -> d
    ustc.bitmap.imagecache.ImageFetcher access$4(ustc.newsvideo.ContentFragment) -> e
    void access$5(ustc.newsvideo.ContentFragment,int,java.lang.String) -> a
    java.lang.String access$6(ustc.newsvideo.ContentFragment) -> f
ustc.newsvideo.ContentFragment$1 -> oj:
    ustc.newsvideo.ContentFragment this$0 -> a
    void onRefresh() -> a
    void onLoadMore() -> b
ustc.newsvideo.ContentFragment$GetNewsInfo -> ok:
    java.lang.String operation -> b
    ustc.newsvideo.ContentFragment this$0 -> a
    void onPreExecute() -> onPreExecute
    java.util.List doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
ustc.newsvideo.ContentFragment$NewsAdapter -> ol:
    java.util.List newsArray -> b
    int selectedIndex -> c
    ustc.newsvideo.ContentFragment this$0 -> a
    void setSelectedIndex(int) -> a
    int getSelectedIndex() -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    ustc.newsvideo.ContentFragment access$0(ustc.newsvideo.ContentFragment$NewsAdapter) -> a
ustc.newsvideo.ContentFragment$NewsAdapter$1 -> om:
    ustc.newsvideo.ContentFragment$NewsAdapter this$1 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
ustc.newsvideo.MainActivity -> ustc.newsvideo.MainActivity:
    java.lang.String TAG -> n
    ustc.newsvideo.CollectionPagerAdapter mCollectionPagerAdapter -> o
    ustc.custom.widget.XViewPager mViewPager -> p
    ustc.bitmap.imagecache.ImageFetcher mImageFetcher -> q
    ustc.utils.update.UpdateManager mUpdateManager -> r
    boolean auto_update -> s
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void startSearchActivity() -> g
    void startSettingActivity() -> h
    void stopActivity() -> i
    ustc.bitmap.imagecache.ImageFetcher getImageFetcher() -> f
    ustc.custom.widget.XViewPager access$0(ustc.newsvideo.MainActivity) -> a
ustc.newsvideo.MainActivity$1 -> on:
    ustc.newsvideo.MainActivity this$0 -> a
    void onPageSelected(int) -> a
ustc.newsvideo.MainActivity$2 -> oo:
    ustc.newsvideo.MainActivity this$0 -> a
    void onTabSelected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabSelected
    void onTabUnselected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabUnselected
    void onTabReselected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabReselected
ustc.newsvideo.MyApplication -> ustc.newsvideo.MyApplication:
    boolean start_launch -> a
    void onCreate() -> onCreate
ustc.newsvideo.PlayerActivity -> ustc.newsvideo.PlayerActivity:
    ustc.video.player.XCPlayer mPlayer -> n
    java.lang.String userId -> o
    boolean autoPlayEnable -> p
    ustc.newsvideo.PlayerActivity$GetVideoInfo videoInfoTask -> q
    ustc.newsvideo.data.parser.NewsInfo playingNews -> r
    android.widget.LinearLayout player_part2 -> s
    android.widget.TextView news_brief -> t
    ustc.bitmap.imagecache.ImageFetcher mImageFetcher -> u
    android.support.v4.view.ViewPager mViewPager -> v
    ustc.newsvideo.RelatedPagerAdapter mRelatedAdapter -> w
    int playingRelatedIndex -> x
    android.widget.ProgressBar relatedPgBar -> y
    ustc.newsvideo.PlayerActivity$GetRelatedNews mGetRelatedTask -> z
    void onCreate(android.os.Bundle) -> onCreate
    void init_player() -> i
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void playNewsVideo(ustc.newsvideo.data.parser.NewsInfo,java.lang.String) -> a
    void playRelatedVideo(int,java.lang.String) -> a
    void playNextRelated() -> j
    void playPreviousRelated() -> k
    int getPlayingRelatedIndex() -> f
    void getRelatedNews(ustc.newsvideo.data.parser.NewsInfo) -> a
    java.lang.String getUserId() -> l
    boolean getIsAutoPlayEnabled() -> m
    ustc.bitmap.imagecache.ImageFetcher getImageFetcher() -> g
    ustc.video.player.XCPlayer access$0(ustc.newsvideo.PlayerActivity) -> a
    android.widget.TextView access$1(ustc.newsvideo.PlayerActivity) -> b
    ustc.newsvideo.data.parser.NewsInfo access$2(ustc.newsvideo.PlayerActivity) -> c
    android.widget.ProgressBar access$3(ustc.newsvideo.PlayerActivity) -> d
    void access$4(ustc.newsvideo.PlayerActivity,ustc.newsvideo.RelatedPagerAdapter) -> a
    android.support.v4.view.ViewPager access$5(ustc.newsvideo.PlayerActivity) -> e
    ustc.newsvideo.RelatedPagerAdapter access$6(ustc.newsvideo.PlayerActivity) -> f
    android.widget.LinearLayout access$7(ustc.newsvideo.PlayerActivity) -> g
    boolean access$8() -> h
    void access$9(ustc.newsvideo.PlayerActivity) -> h
    void access$10(ustc.newsvideo.PlayerActivity) -> i
ustc.newsvideo.PlayerActivity$1 -> op:
    ustc.newsvideo.PlayerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
ustc.newsvideo.PlayerActivity$2 -> oq:
    ustc.newsvideo.PlayerActivity this$0 -> a
    void onCompletion(io.vov.vitamio.MediaPlayer) -> onCompletion
ustc.newsvideo.PlayerActivity$3 -> or:
    ustc.newsvideo.PlayerActivity this$0 -> a
    void switchtoFullScreen() -> a
    void switchtoInlineScreen() -> b
    void onClickPrev() -> c
    void onClickNext() -> d
    java.lang.String getCurrentTitle() -> e
ustc.newsvideo.PlayerActivity$GetRelatedNews -> os:
    ustc.newsvideo.PlayerActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.util.List doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
ustc.newsvideo.PlayerActivity$GetVideoInfo -> ot:
    ustc.newsvideo.PlayerActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.util.List doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.util.List) -> a
    void onCancelled(java.util.List) -> b
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled(java.lang.Object) -> onCancelled
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
ustc.newsvideo.RelatedFragment -> ou:
    java.lang.String title -> P
    java.lang.String thumb -> Q
    int index -> R
    ustc.bitmap.imagecache.ImageFetcher mImageFetcher -> S
    android.widget.ImageView mImageView -> T
    android.widget.TextView mTitle -> U
    android.widget.Button btn_play -> V
    int width -> W
    int height -> X
    ustc.newsvideo.RelatedFragment newInstance(ustc.newsvideo.data.parser.NewsInfo,int) -> a
    void onCreate(android.os.Bundle) -> d
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> e
    void updateTextColour() -> A
    int access$0(ustc.newsvideo.RelatedFragment) -> a
ustc.newsvideo.RelatedFragment$1 -> ov:
    ustc.newsvideo.RelatedFragment this$0 -> a
    void onClick(android.view.View) -> onClick
ustc.newsvideo.RelatedPagerAdapter -> ow:
    java.util.List newsList -> a
    android.support.v4.app.Fragment getItem(int) -> a
    int getCount() -> b
    float getPageWidth(int) -> c
    int getItemPosition(java.lang.Object) -> a
    ustc.newsvideo.data.parser.NewsInfo getNewsInfo(int) -> d
ustc.newsvideo.data.Constant -> ox:
    java.lang.String testUri -> a
    java.lang.String newsHost -> b
    java.lang.String videoHost -> c
    java.lang.String searchHost -> d
    java.lang.String pa_webEq -> e
    java.lang.String pa_numEq -> f
    java.lang.String pa_mtypeEq -> g
    java.lang.String pa_clickEq -> h
    java.lang.String pa_ldtimeEq -> i
    java.lang.String pa_vidEq -> j
    java.lang.String pa_mvidEq -> k
    java.lang.String pa_useridEq -> l
    java.lang.String pa_modeEq -> m
    java.lang.String pa_anonymous -> n
    java.lang.String pa_keywordsEq -> o
    java.lang.String pa_pageEq -> p
    java.lang.String mode_click -> q
    java.lang.String mode_auto -> r
    java.lang.String mode_search -> s
    java.lang.String mode_related -> t
    int pageNum -> u
    java.lang.String[] web -> v
    java.lang.String op_top -> w
    java.lang.String op_refresh -> x
    java.lang.String op_more -> y
    java.lang.String op_related -> z
    java.lang.String[] category -> A
    java.lang.String[] category_ch -> B
    java.util.Map categoryMap -> C
ustc.newsvideo.data.parser.NewsInfo -> oy:
    java.lang.String noImage -> a
    java.lang.String vid -> b
    java.lang.String title -> c
    java.lang.String url -> d
    java.lang.String thumb -> e
    java.lang.String brief -> f
    java.lang.String source -> g
    java.lang.String duration -> h
    java.lang.String web -> i
    java.lang.String mvid -> j
    java.lang.String mtype -> k
    int click -> l
    long loadtime -> m
    java.lang.String getVid() -> a
    java.lang.String getTitle() -> b
    java.lang.String getThumb() -> c
    java.lang.String getBrief() -> d
    java.lang.String getSource() -> e
    long getLoadtime() -> f
    java.lang.String getWeb() -> g
    java.lang.String getMVid() -> h
    int getClick() -> i
    void setVid(java.lang.String) -> a
    void setTitle(java.lang.String) -> b
    void setUrl(java.lang.String) -> c
    void setThumb(java.lang.String) -> d
    void setBrief(java.lang.String) -> e
    void setSource(java.lang.String) -> f
    void setLoadtime(long) -> a
    void setDuration(java.lang.String) -> g
    void setWeb(java.lang.String) -> h
    void setMVid(java.lang.String) -> i
    void setmType(java.lang.String) -> j
    void setClick(int) -> a
ustc.newsvideo.data.parser.NewsInfoParser -> oz:
    java.util.List parse(java.io.InputStream) -> a
ustc.newsvideo.data.parser.VideoInfo -> pa:
    java.util.List urls -> a
    void setUrls(java.util.List) -> a
    java.util.List getUrls() -> a
ustc.newsvideo.data.parser.VideoInfoParser -> pb:
    java.util.List parse(java.io.InputStream) -> a
ustc.newsvideo.search.MySuggestionProvider -> ustc.newsvideo.search.MySuggestionProvider:
ustc.newsvideo.search.SearchActivity -> ustc.newsvideo.search.SearchActivity:
    android.widget.TextView query_str -> n
    java.lang.String userId -> o
    ustc.bitmap.imagecache.ImageFetcher mImageFetcher -> p
    void onCreate(android.os.Bundle) -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    void handleIntent(android.content.Intent) -> a
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void replaceSearchFragment(java.lang.String) -> b
    void setupActionBar() -> h
    void setupSearchView() -> i
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void showClearAlertDialog() -> j
    void updateSuggestionProvider(java.lang.String) -> c
    void clearSuggestionProvider() -> k
    java.lang.String getUserId() -> f
    ustc.bitmap.imagecache.ImageFetcher getImageFetcher() -> g
    void access$0(ustc.newsvideo.search.SearchActivity) -> a
ustc.newsvideo.search.SearchActivity$1 -> pc:
    ustc.newsvideo.search.SearchActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
ustc.newsvideo.search.SearchActivity$2 -> pd:
    ustc.newsvideo.search.SearchActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
ustc.newsvideo.search.SearchFragment -> pe:
    java.lang.String keywords -> P
    java.util.List newsInfoList -> Q
    me.maxwin.view.XListView mListView -> R
    int itemHeight -> S
    ustc.newsvideo.search.SearchFragment$NewsAdapter mNewsAdapter -> T
    ustc.newsvideo.search.SearchFragment$OnSearchListItemClick listener -> U
    ustc.bitmap.imagecache.ImageFetcher mImageFetcher -> V
    void onCreate(android.os.Bundle) -> d
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void playNewsVideo(ustc.newsvideo.data.parser.NewsInfo,java.lang.String) -> a
    me.maxwin.view.XListView access$0(ustc.newsvideo.search.SearchFragment) -> a
    java.util.List access$1(ustc.newsvideo.search.SearchFragment) -> b
    ustc.newsvideo.search.SearchFragment$NewsAdapter access$2(ustc.newsvideo.search.SearchFragment) -> c
    int access$3(ustc.newsvideo.search.SearchFragment) -> d
    ustc.bitmap.imagecache.ImageFetcher access$4(ustc.newsvideo.search.SearchFragment) -> e
    void access$5(ustc.newsvideo.search.SearchFragment,ustc.newsvideo.data.parser.NewsInfo,java.lang.String) -> a
    java.lang.String access$6(ustc.newsvideo.search.SearchFragment) -> f
ustc.newsvideo.search.SearchFragment$1 -> pf:
    ustc.newsvideo.search.SearchFragment this$0 -> a
    void onRefresh() -> a
    void onLoadMore() -> b
ustc.newsvideo.search.SearchFragment$NewsAdapter -> pg:
    java.util.List newsArray -> b
    int selectedIndex -> c
    ustc.newsvideo.search.SearchFragment this$0 -> a
    void setSelectedIndex(int) -> a
    int getPage() -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.util.List access$0(ustc.newsvideo.search.SearchFragment$NewsAdapter) -> a
    ustc.newsvideo.search.SearchFragment access$1(ustc.newsvideo.search.SearchFragment$NewsAdapter) -> b
ustc.newsvideo.search.SearchFragment$NewsAdapter$1 -> ph:
    ustc.newsvideo.search.SearchFragment$NewsAdapter this$1 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
ustc.newsvideo.search.SearchFragment$OnSearchListItemClick -> pi:
ustc.newsvideo.search.SearchFragment$SearchNewsTask -> pj:
    ustc.newsvideo.search.SearchFragment this$0 -> a
    void onPreExecute() -> onPreExecute
    java.util.List doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
ustc.newsvideo.setting.SettingActivity -> ustc.newsvideo.setting.SettingActivity:
    ustc.utils.update.VersionDetector mDetector -> a
    java.lang.String versionNum -> b
    boolean categoryChanged -> c
    void onBuildHeaders(java.util.List) -> onBuildHeaders
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void access$0(boolean) -> a
    java.lang.String access$1() -> a
ustc.newsvideo.setting.SettingActivity$SettingsFragment -> ustc.newsvideo.setting.SettingActivity$SettingsFragment:
    void onCreate(android.os.Bundle) -> onCreate
ustc.newsvideo.setting.SettingActivity$SettingsFragment$1 -> pk:
    ustc.newsvideo.setting.SettingActivity$SettingsFragment this$1 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
ustc.newsvideo.setting.SettingActivity$SettingsFragment$2 -> pl:
    ustc.newsvideo.setting.SettingActivity$SettingsFragment this$1 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
    ustc.newsvideo.setting.SettingActivity$SettingsFragment access$0(ustc.newsvideo.setting.SettingActivity$SettingsFragment$2) -> a
ustc.newsvideo.setting.SettingActivity$SettingsFragment$2$1 -> pm:
    ustc.newsvideo.setting.SettingActivity$SettingsFragment$2 this$2 -> a
    void remind() -> a
ustc.newsvideo.setting.SettingActivity$SettingsFragment$3 -> pn:
    ustc.newsvideo.setting.SettingActivity$SettingsFragment this$1 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
ustc.newsvideo.setting.SettingActivity$SettingsFragment$4 -> po:
    ustc.newsvideo.setting.SettingActivity$SettingsFragment this$1 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
ustc.newsvideo.setting.SettingActivity$SettingsFragment$4$1 -> pp:
    ustc.newsvideo.setting.SettingActivity$SettingsFragment$4 this$2 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
ustc.newsvideo.setting.SettingActivity$SettingsFragment$5 -> pq:
    ustc.newsvideo.setting.SettingActivity$SettingsFragment this$1 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
ustc.newsvideo.setting.SettingActivity$SettingsFragment$5$1 -> pr:
    ustc.newsvideo.setting.SettingActivity$SettingsFragment$5 this$2 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
ustc.utils.AndroidDeviceId -> ps:
    java.lang.String getUUId(android.content.Context) -> a
ustc.utils.Network -> pt:
    boolean checkConnection(android.content.Context) -> a
    java.lang.String getMacAddress(android.content.Context) -> b
ustc.utils.cache.Cache -> pu:
    long getCacheSize(java.io.File) -> a
    java.io.File getDiskCacheDir(android.content.Context) -> a
    java.io.File getDiskCacheDir(android.content.Context,java.lang.String) -> a
    boolean isExternalStorageRemovable() -> a
    java.io.File getExternalCacheDir(android.content.Context) -> b
    void clearDirFiles(java.io.File) -> b
    void clearRecursive(java.io.File) -> d
    void access$2(java.io.File) -> c
ustc.utils.cache.Cache$ClearFilesAsync -> pv:
    java.lang.Void doInBackground(java.io.File[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
ustc.utils.cache.SdkVersion -> pw:
    boolean hasFroyo() -> a
    boolean hasGingerbread() -> b
ustc.utils.update.LinuxCmd -> px:
    java.lang.String exec(java.lang.String[]) -> a
ustc.utils.update.ServerVersionInfo -> py:
    int versionCode -> a
    java.lang.String versionName -> b
    java.lang.String apkUrl -> c
    java.lang.String description -> d
    void setVersionCode(int) -> a
    void setVersionName(java.lang.String) -> a
    void setApkUrl(java.lang.String) -> b
    void setDescription(java.lang.String) -> c
    int getVersionCode() -> a
    java.lang.String getVersionName() -> b
    java.lang.String getApkUrl() -> c
    java.lang.String getDescription() -> d
    java.lang.String toString() -> toString
ustc.utils.update.UpdateManager -> pz:
    java.lang.String serverUrl -> b
    ustc.utils.update.UpdateManager$NoUpdateReminder noUpdateListener -> c
    android.content.Context mContext -> d
    android.app.Dialog noticeDialog -> e
    android.app.Dialog downloadDialog -> f
    java.lang.String downloadDir -> a
    java.lang.String downloadAbsDir -> g
    java.lang.String apkName -> h
    java.lang.String apkWholeName -> i
    android.widget.ProgressBar mProgress -> j
    int progress -> k
    java.lang.Thread downLoadThread -> l
    boolean interceptFlag -> m
    ustc.utils.update.VersionDetector mDetector -> n
    ustc.utils.update.ServerVersionInfo serverInfo -> o
    android.os.Handler mHandler -> p
    java.lang.Runnable downLoadApkRunnable -> q
    boolean hasUpdatedVersion() -> d
    void checkUpdateInfo() -> a
    boolean isNetworkConnected(android.content.Context) -> a
    void showNoticeDialog() -> e
    void showDownloadDialog() -> f
    void showStopDialog() -> g
    void downloadApk() -> h
    void installApk() -> i
    void changeVisibility() -> j
    void setNoUpdateReminder(ustc.utils.update.UpdateManager$NoUpdateReminder) -> a
    void access$0(ustc.utils.update.UpdateManager) -> a
    ustc.utils.update.UpdateManager$NoUpdateReminder access$1(ustc.utils.update.UpdateManager) -> b
    android.widget.ProgressBar access$2(ustc.utils.update.UpdateManager) -> c
    int access$3(ustc.utils.update.UpdateManager) -> d
    android.app.Dialog access$4(ustc.utils.update.UpdateManager) -> e
    void access$5(ustc.utils.update.UpdateManager) -> f
    void access$6(ustc.utils.update.UpdateManager) -> g
    ustc.utils.update.ServerVersionInfo access$7(ustc.utils.update.UpdateManager) -> h
    android.content.Context access$8(ustc.utils.update.UpdateManager) -> i
    void access$9(java.lang.String) -> a
    java.lang.String access$10() -> b
    java.lang.String access$11(ustc.utils.update.UpdateManager) -> j
    void access$12(java.lang.String) -> b
    java.lang.String access$13() -> c
    void access$14(ustc.utils.update.UpdateManager,int) -> a
    android.os.Handler access$15(ustc.utils.update.UpdateManager) -> k
    boolean access$16(ustc.utils.update.UpdateManager) -> l
    boolean access$17(ustc.utils.update.UpdateManager) -> m
    void access$18(ustc.utils.update.UpdateManager) -> n
    void access$19(ustc.utils.update.UpdateManager,boolean) -> a
ustc.utils.update.UpdateManager$1 -> qa:
    ustc.utils.update.UpdateManager this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
ustc.utils.update.UpdateManager$2 -> qb:
    ustc.utils.update.UpdateManager this$0 -> a
    void run() -> run
ustc.utils.update.UpdateManager$3 -> qc:
    ustc.utils.update.UpdateManager this$0 -> a
    void run() -> run
ustc.utils.update.UpdateManager$4 -> qd:
    ustc.utils.update.UpdateManager this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
ustc.utils.update.UpdateManager$5 -> qe:
    ustc.utils.update.UpdateManager this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
ustc.utils.update.UpdateManager$6 -> qf:
    ustc.utils.update.UpdateManager this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
ustc.utils.update.UpdateManager$7 -> qg:
    ustc.utils.update.UpdateManager this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
ustc.utils.update.UpdateManager$NoUpdateReminder -> qh:
    void remind() -> a
ustc.utils.update.VersionDetector -> qi:
    android.content.Context mContext -> a
    java.lang.String getVersionName() -> a
    int getVersionCode() -> b
ustc.utils.update.VersionParser -> qj:
    ustc.utils.update.ServerVersionInfo parse(java.io.InputStream) -> a
ustc.video.player.XCPlayer -> qk:
    java.lang.String TAG -> a
    java.lang.String cacheDir -> b
    io.vov.vitamio.MediaPlayer mMediaPlayer -> c
    ustc.custom.widget.XSurfaceView mSurface -> d
    android.view.SurfaceHolder mHolder -> e
    android.widget.LinearLayout progressBarLayout -> f
    android.widget.ProgressBar progressBar -> g
    android.widget.TextView downloadRateView -> h
    android.widget.TextView loadRateView -> i
    android.widget.DigitalClock digital_clock -> j
    android.app.Activity mActivity -> k
    android.view.View rootView -> l
    io.vov.vitamio.MediaPlayer$OnCompletionListener completionCallback -> m
    ustc.video.player.controller.XVideoControllerView mVideoController -> n
    ustc.video.player.controller.XVolumeController mVolumeController -> o
    boolean isPlayerPrepared -> p
    boolean isFullScreen -> q
    ustc.video.player.XCPlayer$PlayerExtraController playerExtraController -> r
    android.widget.TextView mPlayingTitle -> s
    android.widget.ImageButton mRelatedButton -> t
    android.os.Handler mHandler -> u
    void initialization(android.app.Activity,android.view.View) -> a
    void playVideo(java.lang.String[]) -> a
    void setOnCompletionListener(io.vov.vitamio.MediaPlayer$OnCompletionListener) -> a
    void doCleanUp() -> a
    void releaseMediaPlayer() -> b
    void showPlayerProgressBar() -> c
    void hidePlayerProgressBar() -> d
    java.io.File getCacheDir() -> e
    void createSurfaceView() -> i
    void createVolumeController() -> j
    void createVideoController() -> k
    void setPlayerExtraController(ustc.video.player.XCPlayer$PlayerExtraController) -> a
    java.lang.Boolean isFullScreen() -> f
    void setFullScreen(boolean) -> a
    java.lang.String access$0() -> g
    android.app.Activity access$1(ustc.video.player.XCPlayer) -> a
    android.widget.LinearLayout access$2(ustc.video.player.XCPlayer) -> b
    boolean access$3(ustc.video.player.XCPlayer) -> c
    android.widget.TextView access$4(ustc.video.player.XCPlayer) -> d
    android.widget.TextView access$5(ustc.video.player.XCPlayer) -> e
    void access$6(ustc.video.player.XCPlayer,boolean) -> a
    io.vov.vitamio.MediaPlayer access$7() -> h
    ustc.video.player.controller.XVideoControllerView access$8(ustc.video.player.XCPlayer) -> f
    ustc.video.player.XCPlayer$PlayerExtraController access$9(ustc.video.player.XCPlayer) -> g
    android.widget.TextView access$10(ustc.video.player.XCPlayer) -> h
    boolean access$11(ustc.video.player.XCPlayer) -> i
    android.os.Handler access$12(ustc.video.player.XCPlayer) -> j
    android.widget.ImageButton access$13(ustc.video.player.XCPlayer) -> k
    android.widget.DigitalClock access$14(ustc.video.player.XCPlayer) -> l
    void access$15(ustc.video.player.XCPlayer,boolean) -> b
    ustc.video.player.controller.XVolumeController access$16(ustc.video.player.XCPlayer) -> m
ustc.video.player.XCPlayer$1 -> ql:
    ustc.video.player.XCPlayer this$0 -> a
    boolean onError(io.vov.vitamio.MediaPlayer,int,int) -> onError
ustc.video.player.XCPlayer$2 -> qm:
    ustc.video.player.XCPlayer this$0 -> a
    boolean onInfo(io.vov.vitamio.MediaPlayer,int,int) -> onInfo
ustc.video.player.XCPlayer$3 -> qn:
    ustc.video.player.XCPlayer this$0 -> a
    void onBufferingUpdate(io.vov.vitamio.MediaPlayer,int) -> onBufferingUpdate
ustc.video.player.XCPlayer$4 -> qo:
    ustc.video.player.XCPlayer this$0 -> a
    void onPrepared(io.vov.vitamio.MediaPlayer) -> onPrepared
ustc.video.player.XCPlayer$5 -> qp:
    ustc.video.player.XCPlayer this$0 -> a
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
ustc.video.player.XCPlayer$6 -> qq:
    ustc.video.player.XCPlayer this$0 -> a
    void onDown(android.view.MotionEvent) -> a
    void onDoubleTap(android.view.MotionEvent) -> b
    void onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> a
    ustc.video.player.XCPlayer access$0(ustc.video.player.XCPlayer$6) -> a
ustc.video.player.XCPlayer$6$1 -> qr:
    ustc.video.player.XCPlayer$6 this$1 -> a
    void run() -> run
ustc.video.player.XCPlayer$6$2 -> qs:
    ustc.video.player.XCPlayer$6 this$1 -> a
    void run() -> run
ustc.video.player.XCPlayer$6$3 -> qt:
    ustc.video.player.XCPlayer$6 this$1 -> a
    void run() -> run
ustc.video.player.XCPlayer$7 -> qu:
    ustc.video.player.XCPlayer this$0 -> a
    void start() -> a
    void pause() -> b
    int getDuration() -> c
    int getCurrentPosition() -> d
    void seekTo(int) -> a
    boolean isPlaying() -> e
    int getBufferPercentage() -> f
    boolean canPause() -> g
    boolean canSeekBackward() -> h
    boolean canSeekForward() -> i
    boolean isFullScreen() -> j
    void toggleFullScreen() -> k
ustc.video.player.XCPlayer$8 -> qv:
    ustc.video.player.XCPlayer this$0 -> a
    void onClick(android.view.View) -> onClick
ustc.video.player.XCPlayer$9 -> qw:
    ustc.video.player.XCPlayer this$0 -> a
    void onClick(android.view.View) -> onClick
ustc.video.player.XCPlayer$PlayerExtraController -> qx:
    void switchtoFullScreen() -> a
    void switchtoInlineScreen() -> b
    void onClickPrev() -> c
    void onClickNext() -> d
    java.lang.String getCurrentTitle() -> e
ustc.video.player.controller.XVideoControllerView -> ustc.video.player.controller.XVideoControllerView:
    ustc.video.player.controller.XVideoControllerView$MediaPlayerControl mPlayer -> c
    android.content.Context mContext -> d
    android.view.ViewGroup mAnchor -> e
    android.view.View mRoot -> f
    android.widget.ProgressBar mProgress -> g
    android.widget.TextView mEndTime -> h
    android.widget.TextView mCurrentTime -> i
    boolean mShowing -> j
    boolean mDragging -> k
    boolean mUseFastForward -> l
    boolean mFromXml -> m
    boolean mListenersSet -> n
    android.view.View$OnClickListener mNextListener -> o
    android.view.View$OnClickListener mPrevListener -> p
    java.lang.StringBuilder mFormatBuilder -> a
    java.util.Formatter mFormatter -> b
    android.widget.ImageButton mPauseButton -> q
    android.widget.ImageButton mFfwdButton -> r
    android.widget.ImageButton mRewButton -> s
    android.widget.ImageButton mNextButton -> t
    android.widget.ImageButton mPrevButton -> u
    android.widget.ImageButton mFullscreenButton -> v
    android.os.Handler mHandler -> w
    android.view.View$OnClickListener mPauseListener -> x
    android.view.View$OnClickListener mFullscreenListener -> y
    android.widget.SeekBar$OnSeekBarChangeListener mSeekListener -> z
    android.view.View$OnClickListener mRewListener -> A
    android.view.View$OnClickListener mFfwdListener -> B
    void onFinishInflate() -> onFinishInflate
    void setMediaPlayer(ustc.video.player.controller.XVideoControllerView$MediaPlayerControl) -> setMediaPlayer
    void setAnchorView(android.view.ViewGroup) -> setAnchorView
    android.view.View makeControllerView() -> a
    void initControllerView(android.view.View) -> a
    void show() -> b
    void disableUnsupportedButtons() -> f
    void show(int) -> a
    void hide() -> c
    java.lang.String stringForTime(int) -> b
    int setProgress() -> g
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onTrackballEvent(android.view.MotionEvent) -> onTrackballEvent
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void updatePausePlay() -> d
    void updateFullScreen() -> e
    void doPauseResume() -> h
    void doToggleFullscreen() -> i
    void setEnabled(boolean) -> setEnabled
    void installPrevNextListeners() -> j
    void setPrevNextListeners(android.view.View$OnClickListener,android.view.View$OnClickListener) -> setPrevNextListeners
    void setPrevButtonEnabled(boolean) -> setPrevButtonEnabled
    void setNextButtonEnabled(boolean) -> setNextButtonEnabled
    void access$0(ustc.video.player.controller.XVideoControllerView) -> a
    void access$1(ustc.video.player.controller.XVideoControllerView) -> b
    void access$2(ustc.video.player.controller.XVideoControllerView,boolean) -> a
    android.os.Handler access$3(ustc.video.player.controller.XVideoControllerView) -> c
    ustc.video.player.controller.XVideoControllerView$MediaPlayerControl access$4(ustc.video.player.controller.XVideoControllerView) -> d
    android.widget.TextView access$5(ustc.video.player.controller.XVideoControllerView) -> e
    java.lang.String access$6(ustc.video.player.controller.XVideoControllerView,int) -> a
    int access$7(ustc.video.player.controller.XVideoControllerView) -> f
    boolean access$8(ustc.video.player.controller.XVideoControllerView) -> g
    boolean access$9(ustc.video.player.controller.XVideoControllerView) -> h
ustc.video.player.controller.XVideoControllerView$1 -> qy:
    ustc.video.player.controller.XVideoControllerView this$0 -> a
    void onClick(android.view.View) -> onClick
ustc.video.player.controller.XVideoControllerView$2 -> qz:
    ustc.video.player.controller.XVideoControllerView this$0 -> a
    void onClick(android.view.View) -> onClick
ustc.video.player.controller.XVideoControllerView$3 -> ra:
    ustc.video.player.controller.XVideoControllerView this$0 -> a
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
ustc.video.player.controller.XVideoControllerView$4 -> rb:
    ustc.video.player.controller.XVideoControllerView this$0 -> a
    void onClick(android.view.View) -> onClick
ustc.video.player.controller.XVideoControllerView$5 -> rc:
    ustc.video.player.controller.XVideoControllerView this$0 -> a
    void onClick(android.view.View) -> onClick
ustc.video.player.controller.XVideoControllerView$MediaPlayerControl -> rd:
    void start() -> a
    void pause() -> b
    int getDuration() -> c
    int getCurrentPosition() -> d
    void seekTo(int) -> a
    boolean isPlaying() -> e
    int getBufferPercentage() -> f
    boolean canPause() -> g
    boolean canSeekBackward() -> h
    boolean canSeekForward() -> i
    boolean isFullScreen() -> j
    void toggleFullScreen() -> k
ustc.video.player.controller.XVideoControllerView$MessageHandler -> re:
    java.lang.ref.WeakReference mView -> a
    void handleMessage(android.os.Message) -> handleMessage
ustc.video.player.controller.XVolumeController -> ustc.video.player.controller.XVolumeController:
    android.content.Context mContext -> a
    android.media.AudioManager mAudioManager -> b
    android.view.ViewGroup mAnchor -> c
    android.view.View mRoot -> d
    android.widget.ProgressBar mProgress -> e
    boolean mShowing -> f
    boolean mDragging -> g
    android.os.Handler mHandler -> h
    android.widget.SeekBar$OnSeekBarChangeListener mSeekListener -> i
    void setAnchorView(android.view.ViewGroup) -> setAnchorView
    android.view.View makeControllerView() -> a
    void initControllerView(android.view.View) -> a
    void show(int) -> a
    void hide() -> b
    int setProgress() -> c
    void setIncreMediaVolume(float) -> setIncreMediaVolume
    void setAbsMediaVolume(float) -> setAbsMediaVolume
    void access$0(ustc.video.player.controller.XVolumeController,boolean) -> a
    android.os.Handler access$1(ustc.video.player.controller.XVolumeController) -> a
    android.content.Context access$2(ustc.video.player.controller.XVolumeController) -> b
    android.widget.ProgressBar access$3(ustc.video.player.controller.XVolumeController) -> c
    void access$4(ustc.video.player.controller.XVolumeController,float) -> a
    int access$5(ustc.video.player.controller.XVolumeController) -> d
    android.media.AudioManager access$6(ustc.video.player.controller.XVolumeController) -> e
    boolean access$7(ustc.video.player.controller.XVolumeController) -> f
    boolean access$8(ustc.video.player.controller.XVolumeController) -> g
ustc.video.player.controller.XVolumeController$1 -> rf:
    ustc.video.player.controller.XVolumeController this$0 -> a
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
ustc.video.player.controller.XVolumeController$MessageHandler -> rg:
    java.lang.ref.WeakReference mView -> a
    void handleMessage(android.os.Message) -> handleMessage
